
an initial theory to understand and managerequirements engineering debt in practice


julian frattinia,∗, davide fuccia, daniel mendeza,b, rodrigo spinolac,d,vladimir mandiće, nebojša taušane, muhammad ovais ahmadf, javiergonzalez-huertaa


ablekinge institute of technology, valhallvägen 1, 37140 karlskrona, swedenbfortiss gmbh, guerickestraße 25, 80805 munich, germanycvirginia commonwealth university, 23284 richmond, united statesdsalvador university, 41820 salvador, brazileuniversity of novi sad, dr zorana ðinđića 1, 21102 novi sad, serbiafuniversitet karlstad, universitetsgatan 2, 651 88 karlstad, sweden


abstract


context: advances in technical debt research demonstrate the beneﬁts of ap-


plying the ﬁnancial debt metaphor to support decision-making in software devel-


opment activities. although decision-making during requirements engineering


has signiﬁcant consequences, the debt metaphor in requirements engineering


is inadequately explored. objective: we aim to conceptualize how the debt


metaphor applies to requirements engineering by organizing concepts related


to practitioners’ understanding and managing of requirements engineering debt


(red). method: we conducted two in-depth expert interviews to identify key


requirements engineering debt concepts and construct a survey instrument. we


surveyed 69 practitioners worldwide regarding their perception of the concepts


and developed an initial analytical theory. results: we propose a red the-


ory that aligns key concepts from technical debt research but emphasizes the


speciﬁc nature of requirements engineering. in particular, the theory consists


of 23 falsiﬁable propositions derived from the literature, the interviews, and


survey results. conclusions: the concepts of requirements engineering debt


are perceived to be similar to their technical debt counterpart. nevertheless,


measuring and tracking requirements engineering debt are immature in prac-


∗corresponding author


preprint submitted to journal of information and software technologymarch 9, 2023


arxiv:2211.06189v2  [cs.se]  8 mar 2023


tice. our proposed theory serves as the ﬁrst guide toward further research in


this area.


keywords:requirements engineering, requirements engineering debt,


interview study, online survey, theory


1. introduction


over the past decade, technical debt (td) has emerged as a popular re-


search area [1] and a useful model to support decision-making in software de-


velopment [2].the concept of td leverages the ﬁnancial metaphor of debt


to model trade-oﬀs between short-term beneﬁts and long-term eﬀects. for ex-


ample, shortcuts in software development reduce time-to-market but require


increasingly expensive future refactoring to address quick-and-dirty solutions.


the td metaphor extends to a range of software engineering (se) activities.


the tertiary study by rios et al. [1] shows that the concept of debt is applica-


ble to and researched in the ﬁelds of—amongst others—software architecture,


design, and quality assurance, eﬀectively establishing concepts such as archi-


tecture debt, design debt, test debt, and others. in requirements engineer-


ing (re), ernst [3] proposed an initial application of the debt metaphor—i.e.,


requirements engineering debt (red). subsequently, lenarduzzi and fucci [4]


provided a vision for a broader deﬁnition of how debt can be accumulated in


requirements engineering activities.


despite these initial contributions that recognized red as one of the dif-


ferent types of debt , gaps in research persist. first and foremost, we lack a


deep understanding of how and to what extent red is perceived and addressed


in the industry.similar to its code-related counterpart, red is a complex


concept characterizing practical phenomena that cannot exist in a vacuum and


that can only be observed in practical contexts. consequently, understanding


and further reﬁning the concept of red requires studying it in the real world.


in contrast, td research has progressed towards establishing such an empiri-


cally grounded understanding through a strong community of researchers and


2


practitioners exempliﬁed by the insightd project1.


without a comparable understanding of red from a practical viewpoint,


the relevance of future research is questionable. in this paper, we argue that


red as decision-making support in practice needs to consider practitioners’


perspectives. the necessity to ﬁll the research gap and advance red research


is exacerbated by the impact re has on subsequent software development ac-


tivities [5]. it is desirable not only to detect and manage these issues as early


as possible but also to understand their consequences properly. we argue that


red has the potential to model such a relationship. given the viability of the


debt metaphor at code level to support decision-making, studying the metaphor


in the re context potentially yields even larger beneﬁts in terms of, for example,


cost avoidance. since defects introduced during the re phase of the software


development process tend to scale approximately by a factor of 10 [6], the cost


avoidance through supported decision-making in the form of red has great


potential.


we performed a three-step empirical study as a starting point for addressing


the existing gaps. first, we conducted expert interviews to derive an initial set


of themes related to the debt metaphor in the re context. second, we developed


a questionnaire based on the interview results and conducted an online survey to


gauge practitioners’ perceptions of the identiﬁed red concepts. third, we used


the 69 survey responses from practitioners to develop a descriptive, evidence-


based theory of red serving as the conceptual foundation for further research.


we make the following contributions:


1. conceptualization: a reﬁned map of key concepts from the td metaphor


to the re domain.


2. analytical theory: an analytical theory that describes the notion of


red based on our empirical studies. the theory supports decision-making


in re by leveraging the debt metaphor.


1http://www.td-survey.com/


3


3. data: the material necessary to replicate the interview and survey stud-


ies.2


to the best of our knowledge, this is the ﬁrst empirical work explicitly tackling


the understanding of red in practice.


in the rest of the manuscript, section 2 presents the current state of td


and red research. section 3 presents the study design for the interview study,


the online survey, and the subsequent theory development. the results of these


studies are presented in section 4. finally, section 5 discusses the results, in-


cluding their limitations, and maps them to the existing td theory in. section 6


concludes with an outline of future work.


2. background and related work


section 2.1 discusses the fundamental terminology used in the context of td


and section 2.2 further introduces related work.


2.1. technical debt terminology


the term technical debt (td) has been originally coined by cunningham to


describe short-term decisions at the expense of long-term consequences [7]. in


particular, the ﬁnancial concept of debt—where the total cost is composed of a


ﬁxed principal and a time-dependent interest—has been used to describe how


these short-term decisions accrue additional cost at an interest rate that ulti-


mately needs to be paid back on top of the principal to remediate the debt [8].


the notion of td sparked a productive research ﬁeld, including a dedicated con-


ference venue3 and related concepts like the converse technical credit introduced


by berenbach et al., which is deﬁned as the “investment in the engineering, de-


signing and constructing of software or systems over and above the minimum


2accessibleinourreplicationpackage,currentlyathttps://www.dropbox.com/s/


zbz7zjnwn62x87a/ured-replication.zip?dl=0. the data will be stored permanently on zen-


odo upon acceptance.3https://conf.researchr.org/series/techdebt


4


necessary eﬀort, in anticipation of emergent properties paying dividends at a


later date.” [9]


a secondary study by li et al. [10] synthesized existing td literature to


identify the most commonly agreed-upon concepts of the metaphor.td is


composed of items, which are “a unit of td in a software system” [10]. td can


have several causes and eﬀects, where the latter subdivide into consequences,


symptoms, and value:


• consequence: “the inﬂuences of incurring td on the software system” [10].


• symptom: indicators for the incurred td.


• value: “the potential beneﬁt of incurring td” [10].


further concepts like bankruptcy, which “happens when the part of the software


system which contains td is no longer viable to support the development and


a complete rewrite, and a new platform are needed” [11], are less commonly


explored but still relevant to td research.


2.2. td research in re


among the ﬁfteen types of td identiﬁed by rios et al. [1], two types are


related to re: documentation debt and requirements debt.


documentation debt represents the problems in documentation artifacts pro-


duced during various development stages, including requirements speciﬁcations.


this limits the scope of documentation debt to requirements artifacts, which


are only one aspect of re.


rios et al. [12] conducted a study focusing on documentation debt. sur-


veying 39 practitioners and interviewing experts revealed generalized causes,


eﬀects, prevention, and repayment practices speciﬁc to documentation debt.


while the prevention and repayment practices are more focused on code-related


documentation (e.g., “[c]omment the code” as a prevention and “[k]eep the docu-


mentation updated” as a payment practice [12]), the identiﬁed causes of debt are


also relevant to red (e.g., “[d]eadline” and “[i]naccurate time estimate” [13]).


5


barbosa et al. [14] speciﬁcally investigate a subset of documentation debt


in the domain of requirements engineering, which they frame requirements and


requirements documentation debt (r2dd). using an existing data set contain-


ing survey responses of 78 practitioners to the global insightd survey [15], the


authors extracted causes, eﬀects, prevention, and repayment practices relevant


to requirements documentation. the resulting occurrences of the observed con-


cepts are presented in table 1.


these two previous studies [12, 14] constitute the empirical body of knowl-


edge of td applied to re. even though their scope is limited to documentation,


their results are relevant to red and we discuss their alignment in section 5.2.


ernst [3] presents one of the ﬁrst deﬁnitions of technical debt in requirements


as “the distance between the optimal solution to a requirements problem and


the actual solution, with respect to some decision space.” the distance results


from decisions trading immediate gains for future costs, which corresponds to


the notion of intentional td. similarly to unintentional td, the distance can


also increase due to unforeseen or unintended changes in the context of the


requirements problem [3]. accordingly, the interest on the debt is the rate of


increase of such distance [3].


this deﬁnition exceeds the perspective of requirements documentation and


considers general requirements problems. whereas debt applying to the require-


ments documentation only refers to requirements artifacts, the scope of red


extends to the whole re process. however, the deﬁnition of red is still limited


to only one speciﬁc requirements problem—i.e., what lenarduzzi and fucci [4]


refer to as mismatch implementation. the latter extends the deﬁnition of red


by including two additional requirements problems related to stakeholder discov-


ery—i.e., the debt accrued by involving only part of the stakeholders in the re


process, and requirements artifact smells—i.e., the debt accrued due to quality


violation in the requirements speciﬁcation, such as using ambiguous language.


more recently, a systematic literature review by melo et al. [16] covered the


causes of red as well as methods to identify and manage it. they identiﬁed


66 primary studies that, although not explicitly focusing on red, contained


6


conceptsdocumentation debt [15]requirements debt [14]


causesdeadline,


the company does not give


value to documentation,


non-adoption of


good practices,


inaccurate time estimations,


inappropriate planning.


deadline,


not eﬀective project


management,


change in requirement,


inappropriate planning,


high turnover of the team.


eﬀectslow maintainability,


delivery delay,


rework,


low external quality,


inadequate, non-existing or


outdated documentation.


delivery delay,


rework,


financial loss,


low external quality,


low maintainability.


prevention


practices


comment the code,


create tutorials on how to


ﬁll the documentation,


deﬁne process and good


practices for documentation,


deﬁne roles concerning the


documentation process,


document the project since


it begins.


well-deﬁned requirement,


follow the project


planning,


follow the well-deﬁned


project process,


well-deﬁned scope


statement,


good allocation of


resources in the team.


repayment


practices


adopt td payment


prioritization criteria,


keep the documentation


updated,


review outdated


documentation.


code refactoring,


monitor and control


project activities,


design refactoring,


investing eﬀort on


td repayment activities,


changing project scope.


table 1: the occurrences of td concepts identiﬁed in insightd surveys, ranked based on their


occurrences (most occurring ﬁrst). italic text represents concepts identiﬁed in both studies.


7


instances of investigations addressing activities related to re, for instance, in


design and documentation. their results show 33 causes for red divided ac-


cording to their level of intentionality and 16 strategies to identify and manage


red, including nine issues arising in such a process. moreover, inspired by td


research, they provide metrics to assess red principal, interests, and payback.


through the application of the td metaphor ﬁrst to requirements documen-


tation [14, 12] and later to requirements engineering in general [3, 4, 16], the


research community established a conceptual foundation of red. however, an


empirical perspective on red in practice is still a gap that we address in this


study.


3. study design


in this study, we answer the following research questions:


1. rq1: how do practitioners understand red?


2. rq2: how do practitioners manage red?


similar to previous studies related to td in re [14, 12], we are interested


in understanding the concepts of red and how to manage it. in contrast to


previous studies on red [3, 4, 16], we focus on the view of practitioners.


our study is divided into three stages: (1) expert interviews, (2) a questionnaire-


based online survey, and (3) the inference of a theory. the interview study is


a ﬁrst and in-depth investigation of practitioners’ perspectives on red, while


the online survey scales up the involvement of practitioners. as a ﬁnal step,


we synthesize our results into an initial theory of red. this theory serves as


a foundation for supporting decision-making in re utilizing the debt metaphor


and provides a starting point for empirically grounded follow-up research.


we present the overall study design in section 3.1 and explain the three


individual steps in more detail in sections 3.2 to 3.4.


3.1. research pipeline


we visualize the overall research process in figure 1. we initially identiﬁed


common concepts from the td literature and mapped them to the re domain.


8


this mapping was aligned with the theoretical contributions to red literature


(e.g., [3, 4]). the concepts guided the design of the interview study and resulted


in a set of themes to structure the interview protocol. we used the transcripts


produced during the interviews as input to design the online survey instrument.


we used the responses to the survey and the interview topics to derive the


propositions and explanations in our theory. where applicable, we used existing


literature to support our explanations.


figure 1: research process pipeline.


table 2 lists all relevant concepts used within the td domain and connects


them to their respective counterparts in the three steps of this study.


3.2. interview study


the goal of the interviews was to collect guiding themes and constructs for


creating the survey questionnaire (see section 3.3). we used the key informant


technique [22] to collect valuable evidence from experts on a speciﬁc topic. in


particular, we selected experts with the following characteristics, the partici-


9


table 2: mapping of td concepts from literature to interview themes and survey segments.


td literatureinterview topicssurvey segment


debt item [10]debt item—


value [17]value-cost tradeoﬀvalue


principal & interest [17]cost structure—


bankruptcy [11]cost structurebankruptcy


impact [18]td propertiespropagation


symptoms [10]td propertiessymptoms


causes [13]causescauses


eﬀects [13]eﬀectseﬀects


awareness [19]awarenessintentionality


management [8]managementremediation


tracking [20, 21]monitoringdetecting, measuring, tracking


pants (1) have a role in the re community which exposes them to the kind of


information we sought, (2) are knowledgeable in the ﬁeld of re and td, and


(3) are willing to communicate their knowledge.


participants. the ﬁrst participant is the co-founder of a company that provides


services, including training, in the area of re quality improvement with seven


years of practical experience. the other two are product managers in a large


software service provider with over 20 years of experience. all participants are


also active researchers in the areas of re and se. we used convenience sam-


pling [23] as we recruited the interview participants from our personal networks.


after noticing convergence of the guiding themes and constructs elicited by all


three interview participants, we deemed the data collection of the interview


study suﬃciently complete.


10


interview protocol. we selected the topics for the interview study—and, accord-


ingly, the interview script—around themes mapped and adapted from the td


literature (see table 2). in particular, we (1) extended the concept of value to


include an explicit discussion of its trade-oﬀwith costs; (2) organized the con-


cepts of principal&interest and bankruptcy around the theme cost structure;


(3) addressed impact and symptoms together in the td properties theme; (4)


used the term monitoring—as suggested by rios et al. [1]—to include the several


activities (e.g., detecting, measuring) that fall under the tracking concept.


before the interviews, we communicated our research objectives to the par-


ticipants. we conducted the interviews remotely over video between 2020-04-21


and 2020-06-25. the second author acted as the interviewer, and the ﬁrst and


the third author supported the process by taking notes and prompting visual-


ization material to aid the main interviewer.


we used a semi-structured interview approach. in particular, we focused


on understanding whether and how the participants apply the td metaphor


to re in practice (for instance, how they understand a debt item in re or


what is the cost of a debt item in re) and what strategies they use to manage


it.we used a shared online whiteboard as support to drive the interviews,


clarify the constructs, and provide examples to elicit participants’ perspectives


as shown in figure 2. each interview lasted approximately 70 minutes and was


voice recorded. we then used the transcription of the recording for thematic


analysis [24].


analysis. the ﬁrst two authors independently read the entire transcript of each


interview and conducted, during a ﬁrst analysis instance, deductive coding [25]


against interview topics to identify, for example, causes, eﬀects, and properties


of red. in a second analysis instance, the same authors performed inductive


coding to avoid missing relevant aspects related to the red metaphor and en-


sure completeness of the coding. in total, the two authors generated 114 codes.


after comparing individual codes, agreeing on common labels, and performing


axial coding, they yield the 13 themes reported in figure 3. for example, under


11


figure 2: interview aid visualizing concepts and examples.


12


(negative) preconceived


evaluation


red metaphor


intentional


differences wrt


financial debt


detection


approaches


product increments


and mvp 


business functions


& operations


managing reqs.


changes


market-driven


changes


tradeoff market


opportunities


project


failure/bankruptcyunintentional


management


perceptions


figure 3: additional themes from the interviews after open and axial coding.


project failure/bankruptcy, we coded the following statement by p2: “so you


have written down stuﬀand you realize that maintaining this documentation,


as it may be, is too expensive. let’s just drop it. that happens.” as main-


tenance. also, p3 stated: “you accept too many requirements and at the end


you have a very complicated system that tries to enforce a process that nobody


wants to use in practice and the market ﬁghts against it as they don’t want to


use it. i think this system is in a bankruptcy situation because of bad require-


ments engineering.” which we coded as gold plating under the same theme. the


complete codebook is available in the replication package; verbatim quotes were


removed due to non-disclosure agreement.


3.3. online survey


we developed an online questionnaire based on the themes identiﬁed when


analyzing the interviews to scale up the insights gained through the practition-


ers’ perspectives on red.


target population and sampling. the target population of our survey consists


of practitioners generally engaged with requirements—whether as part of an


explicit requirements engineering phase or not. here, we applied convenience


sampling. we reached out to our target population by contacting experts in


re who are well-connected to the industry in diﬀerent parts of the world. we


13


did so via our personal contacts, networks, and associations. we complemented


this outreach with posts on social media (such as twitter). participants acted


as multipliers, and each multiplier was encouraged to distribute the survey in-


vitation in their respective networks.


questionnaire. we designed the survey segments and the questions contained


in each segment based on the evaluation of the interview transcripts (see ta-


ble 2). in addition, we (1) embedded the concept of debt items into adjacent


concepts (causes and consequences) to make them more tangible; (2) disregarded


cost structure as the interview revealed that the current lack of quantiﬁcation


for red makes an assessment of principal and interest unlikely; instead, we


focused on bankruptcy as a concept underrepresented in literature; (3) empha-


sized propagation based on the interview discussions of impact; (4) speciﬁed


awareness into intentionality (i.e., either intentional or unintentional), which


we also consider to be more suitable for analysis in a survey; (5) concretized


management and tracking into detecting, measuring, tracking, and remediation.


the survey protocol is available in appendix a.


the questionnaire consists of 33 closed and 10 open-ended questions, of


which six closed and one open-ended questions were demographic questions.


we used closed-ended questions to capture the practitioners’ perceptions re-


garding red concepts, which we later included in the theory—for example, the


proposition about the most dominant type of causes for red (p3 in table 4).


two open-ended questions let respondents provide a rationale for their answers


to closed-ended questions. in the other seven open-ended questions, respon-


dents can consider more complex answers requiring them to provide examples


based on their experiences. the questionnaire was implemented using a web-


based tool and distributed via mail to our contacts who acted as multipliers and


posted on social media. we collected a total of 69 complete survey responses in





analysis procedure. we analyzed the quantitative data from the survey using


descriptive statistics and visualizations. however, the sample distribution does


14


not enable meaningful statistical analysis (e.g., a comparison between countries


and domains). we focused on qualitative data analysis to answer our research


questions.in particular, we use open coding [25] to derive explanations for


existing concepts as well as concepts not previously considered.


3.4. theory development


finally, we use the responses from the survey results to build an initial the-


ory of red. considering the terminological and conceptual adoption of theory


building and evaluation for software engineering [26, 27], we constructed an


analytical theory focusing on a model that captures a set of propositions that


can later serve as a basis to deﬁne (falsiﬁable) hypotheses.


while building the theory, we draw from a similar experience in the context


of the naming the pain in requirements engineering initiative4 [5, 28]. how-


ever, rather than starting by populating our theory ﬁrst with constructs and


propositions from literature and then corroborating it with the survey results


(as done in [5]), we use the survey results to build our theory bottom-up and


then add explanations, where suitable, by drawing from existing evidence from


the literature. we selected this approach due to the scarcity of red-speciﬁc


literature.


4. results


section 4.1 presents the results from the interview study, section 4.2 the


results of the online survey, and section 4.3 the results from the theory devel-


opment.


4.1. interview study


the themes derived from coding the interview transcripts showed how ex-


isting td concepts are understood in re and revealed new concepts that are


underrepresented in existing td literature but are relevant to red. while the


4www.napire.org


15


elements of the debt metaphor (e.g., debt item, causes, eﬀects) mostly aligned


with existing research, the concepts intentionality and propagation emerged as


particularly relevant to red. discussions on managing red revealed some


relevant deviations of red from td. the interview study conﬁrmed the appli-


cability of the debt metaphor to the re domain and added valuable, additional


concepts to consider in the subsequent survey study.


elements of the debt metaphor. the interview participants perceived elements


like debt item, principal & interest, value, symptoms and eﬀects similarly to


how they are understood in td. one interview participant reports “taking a


shortcut in the re process” as the value of red, which matches its equivalent


deﬁnition in td. further, the participant reports that “the impact of mistakes


in requirements engineering is like a hundred, a thousand times higher than


ﬁxing it right away,” which aligns with an exponential interest of the debt item


cost structure. the eﬀects of red are described by one interview participant


using a three-tier hierarchy [29]—“if you have a problem in your speciﬁcation,


everybody who is using your speciﬁcation can make a mistake [due to the ﬁrst


order impact]. then, second-order impact [aﬀects] the people who use those


artifacts that are created based on your requirements. test cases are based on


your requirements, system code is based on your requirements. everybody who


is using those can be impacted by that.” the third tier encompasses everything


aﬀected by the deployed product, which maximizes the cost of remediating


the debt items.this description aligns with the cost structure of td and


emphasizes the cascading consequences that red can have. the causes of red


are described by one interview participant as time-related “project pressure”


and “lack of understanding of what’s good engineering.”according to these


statements, red must not be limited to documentation but has to consider


organizational as well as personal aspects.


managing red. the interview participants emphasized that managing red is


not widely established. one interview participant reported “i’ve just seen one


company where i looked into these things and they have been systematically


16


documenting the results of the requirements reviews. and most other compa-


nies, it’s more like, «let’s ﬁx the issues.» that’s all we want to do.” tool support


for managing red speciﬁcally is lacking, with one participant suggesting that


“[w]hat you need is an automatic analysis that not just checks your require-


ments at a speciﬁc point in time, but over a period of time.” another interview


participant reports that “the toolset jira, kanban boards and that—they are


okay. however, it is more about practice and culture rather than tools.” as “you


need to keep track of your debt,” the need for both awareness and an explicit


approach to managing red becomes apparent.


intentionality. whether debt is accrued intentionally or unintentionally is an


important attribute of td as well as red. the interview participants reported


that red is most commonly accrued unintentionally due to a lack of diligence,


i.e., being oblivious to a better alternative. in requirements engineering, “one


of the main unintentional debts is probably that you don’t ask enough stake-


holders”, as reported by one of the interview participants. however, red can


also be accrued intentionally—i.e., a debt item is intentionally created with ex-


plicit awareness. this usually happens as a consequence of negligence, as one


interview participant reports—“i see it sometimes when we, as consultants, espe-


cially when we do audits, we come in and tell people, «hey, you need to ﬁx these


ten fundamental structural problems» and nobody ﬁxes them.” another inter-


view participant conﬁrms that intentional debt is often accrued due to active


prioritization—“[the debt item] gets intentionally de-prioritized because other


things are just more important.” one interview participant reports that “[the


companies] often do not track the intentional [debt]. the unintentional [debt]


is something you have to detect and then track, and you have to invest some


eﬀort and time to make sure that you detect it.”


propagation. a less-explored concept in td and red literature is the propaga-


tion of debt from one debt item to other artifacts, causing them to also accrue


debt [30]. interview respondents reported that one risk associated with red is


that its impact on artifacts in the scope of re (e.g., speciﬁcations or use cases)


17


can cause debt for other artifacts outside the scope of re. one interview partic-


ipant reported the potential scope of this aﬀecting even the ﬁnal product, when


saying “this can be [...] up to very high levels that you say, «actually we can


throw the whole product away»”, which corresponds to the bankruptcy of the


product. the propagation of red can be mitigated by domain knowledge. “[i]f


you have a great team who knows the domain, who knows the application, and


knows everything about the system, who are users of your system themselves,


it’s all there. they’re experts actually for the application. then you have an


okay chance that they will still do a good job. in that case, ﬁxing that technical


debt just is within the scope of the requirements.”, one interview participant


reported.


4.2. survey results


in this section, we present the results of the survey’s quantitative and qual-


itative questions. while analyzing the qualitative questions, we identiﬁed four


main themes and several associated sub-themes, summarized in table 3. the


sub-themes are not mutually exclusive—for example, the time pressure sub-


theme can apply to more than one of the main themes.


4.2.1. demographics


the survey was accessed by 125 potential participants and completed by 69


of them, which yields a completion rate of 55.2%. for the results, we considered


only responses to the entire questionnaire. the majority of participants (n=37)


have more than 10 years of experience in requirements engineering, as shown in


figure 4. the primary job functions (see figure 5) of the respondents are in


operational roles, such as requirements engineers (n=28) and developers (n=23),


as well as managerial (n=22). the majority of the respondents are performing


their job functions (see figure 6) as the main contractor of a company (n=26)


or as part of in-house development (n=25). the majority of respondents rank


themselves as rather practice- than research-oriented, as shown in figure 7.


the represented industrial sectors include a variety of domains as shown in


18


figure 8 with the exception of the railway, avionics, and games engineering


domains. the respondents are involved in projects with a median team size


of 10 individuals, although some involve up to 30 persons (see figure 9). out


of the 69 participants, 40 are based in south and 5 in north america, 23 in


europe, and one in asia.


0102030


less than 1 year


1-3 years


4-10 years


more than 10 years


# of responses


2


13


17


37


general experience with requirements


figure 4: experience of participants


0


5


10


15


20


25


other


quality engineer/manager


researcher in industry


tester


trainer/educator


product owner


system/software architect


manager


developer


requirements engineer/


business analyst


# of responses


6


7


8


9


12


13


13


22


23


28


primary job function(s) in the last years


figure 5: occupation of respondents


4.2.2. causes


the ﬁrst two authors manually categorized the red causes that emerged


from the interview study into requirements artifact-, time-, people-, and product-


related. the full list of potential causes and their categorization can be found


in the appendix in table b.17. in the survey, we ask respondents to indicate


one or more causes for red from this list. figure 10a shows the support for the


19


table 3: summary of the (sub-)themes emerged from the the free-text answers to the survey.


themesub-themedescriptionoccurrences


factors inﬂuencing red


time pressurea deadline for release a product or service, or their new version28


competitioninformation gathered from external stakeholders in the same market13


reputationinternal customers’ complaints and requests5


economic aspectbudget adjustments, for example due to loss of sales19


assessing and remediating red


time savingassessment of debt is based on the amount of time/eﬀort saved25


customer involvementthe amount of customers, and which customers are impacted23


agile developmentthe process models prioritizes other activities than debt assessment and remediation11


review sessionsneed for ad-hoc review sessions to assess and remediated debt7


traceabilitylinks between artifacts support red assessment3


process and artefacts in redagile developmentartefacts typical of agile (e.g., user stories)8


reworkthe process includes extra rework due to red8


intentionalitytime pressurea deadline for releasing a product or service, or their new version11


skill/knowledgelack of skills, knowledge, or due diligence9


20


0510152025


other


sub-contractor


in-house


development


main contractor


# of responses


1


17


25


26


organizational role of the project team in the company


figure 6: role within the organization


051015202530


mostly research


slightly towards research


equal partsresearch


and practice


slightly towards practice


mostly practice


# of responses


4


2


16


17


30


profession on a scale between research and practice


figure 7: scale of profession


categories of causes averaged over all answers within a single category. for ex-


ample, the causes in the time-related category, on average, were agreed upon by


57.5% of the survey participants. respondent showed a strong agreement with


time-related answers like time pressure to deliver a feature and time pressure


to ﬁnalize the (systematic) requirements speciﬁcation. people-related answers


received the next-strongest support, with lack of domain knowledge and lack of


communication between stakeholders being the most prominent. requirements


artifact- and product-related answers share comparable support as valid causes


of red. requirements not documented—a property of the requirements artifacts


potentially causing costly rework due to the lack of a tangible document to refer


to—is the most agreed upon artifact-related cause for red, corroborating the


ﬁndings of wagner et al. [5] that requirements incompleteness remains one of


the most critical aspects of requirements engineering. answers in the product-


related category include technical complexity of the project, which is still deemed


inﬂuential but less so compared to the aforementioned causes. the respondents


also point speciﬁcally to the lack of skills resulting in accruing red items. for


21


0.0


2.5


5.0


7.5


10.0


12.5


15.0


games engineering


avionics


railway


security


energy


agriculture


public transportation


enterprise resource planning


insurance


automotive


manufactoring


healthcare


human resources


logistics


e-commercec


e-government


education


telecommunication


other


finance


public sector


# of responses


0


0


0


1


1


2


2


3


3


3


4


5


5


6


7


7


9


12


12


15


16


industrial sector(s) of the project


figure 8: main sector of the respondent’s company


example, one survey respondent commented on their answer that “decisions are


made by product and business people without the background to realize their


consequences. they know they are cutting corners and creating the debt on


purpose (to speed up delivery usually).” others pointed out the lack of knowl-


edge regarding what the professional ﬁgure of a requirements engineer entails,


as people without such knowledge unintentionally introduce debt. for example,


one respondent commented: “organizations have been trying to document less


than necessary and having people engage in conversations and meetings to cover


for the gaps, creating re debt intentionally. when organizations are asked to


document their requirements properly, they often don’t know how to do it or


22


51015202530


people involved in the lates project


figure 9: project team sizes


timepeople artifact product


0%


10%


20%


30%


40%


50%


60%57.5%


44.9%


35.8%


33%


(a) causes


timeproductpeople


0%


10%


20%


30%


40%


50%


60%


70%68.1%


28%


24.6%


(b) values


artifactproductpeople


0%


10%


20%


30%


40%


50%


60%


65.2%


43%


26.8%


(c) symptoms


figure 10: red causes, values, and symptoms indicated by respondents. the y-axis reports


average agreement with possible answers in a speciﬁc category reported on the x-axis.


create low-quality requirements, creating debt unintentionally.”


the last comment stresses the role of the utilized process model and its inﬂu-


ence in causing the accumulation of red. when speciﬁcally asked about this,


the respondents tend to agree that the process model impacts the likelihood


of introducing red (see figure 11). they acknowledge that characteristics of


agile (e.g., focus on the customer, lightweight requirement format, communi-


cation) impose trade-oﬀs when managing red. for example, one respondent


mentioned, “i believe that in the agile model we can achieve faster results, but


in compensation for the lack of formalization of requirements, it can end up


generating requirements engineering debt.” and also “agile projects suﬀer more


requirements engineering debt due to the prioritization of good team communi-


cation instead of detailed requirements documentation.”


furthermore, participants agreed that requirements engineering debt could


be introduced both intentionally and unintentionally, as shown in figure 12.


23


process model influence 1 3143317


strongly disagreedisagreeneutralagreestrongly agree


figure 11: inﬂuence of process model on the introduction of red.


red can be introduced intentionally


red can be introduced unintentionally


5


1


8


2


11


7


23


31


21


28


strongly disagreedisagreeneutralagreestrongly agree


figure 12: agreement regarding the intentionality of introducing red.


we identiﬁed themes related to time pressure and skills and knowledge as the


main drivers for the decision to introduce red. some respondents mention time


pressure as the reason to intentionally introduce red at the very initial phase


of re, such as requirements gathering (e.g., “requirements engineering debt


may be intentionally introduced if interested parties reduce the time required


to gather requirements.”); whereas others acknowledge that time pressure is the


results of external factors, such as customers demands (e.g., “it is needed to


accelerate the development of a feature (or ﬁx) to please a customer. in these


cases, red can be introduced intentionally. the attention point is: it needs to


be paid later.”).


the analysis of the answers to qualitative questions revealed that compa-


nies consider several more factors when accruing red. some of these are the


beneﬁts against which debt is traded oﬀ. for example, themes such as beating


the competition emerged. as a survey respondent reported, “if we will [lose] a


big opportunity of product launching before another company, then there is a


value in introducing red.”, and—connected to it—reputation, especially when


fulﬁlling legal obligations (e.g., “we simply have to focus on requirements that


are considered as a potentially high risk of ﬁnes, in order to keep the company


reputation”). another important theme is the economic aspect which needs to


be saved from parts of the re process and allocated to activities that can push


the product on the market faster.


24


4.2.3. value


the ﬁrst two authors manually categorized a list of values that emerged from


the analysis of the interview (see table b.18). figure 10b shows the average


support for each category.


time-related value like faster time to market receives the largest amount


of agreement among all potential values for accruing requirements engineering


debt. however, only 17% of the survey respondents report explicitly calculating


the value of requirements engineering debt (q12).


most respondents did not pinpoint speciﬁc artifacts impacted by red but


agreed that red cost is perceived in terms of the rework such artifacts un-


dergo. for example, one respondent commented: “i believe it [red] generates


a great deal of rework. i’ve participated in projects where we had to redo sev-


eral features due to lack of knowledge of the requirements on the part of the


responsible stakeholder.” other respondents mentioned that red impacts the


rework of other artifacts down the line, such as source code, which aligns with


established ﬁndings by boehm et al. [6]. for example, they said: “[paying back


red has] additional costs on re-design, refactoring of the code.”


4.2.4. symptoms


the ﬁrst two authors manually categorized the symptoms which we obtained


from the analysis of the interview study (see table b.19). figure 10c shows


the support the categories received on average. requirements artifact-related


symptoms received the strongest support overall, as survey participants agree


upon incompleteness of requirements being the strongest symptom of require-


ments engineering debt. product-related symptoms like additional operational


cost of the product and not implementing requirements follow, while people-


related symptoms like not involving all relevant stakeholders receive the least


support. in addition, respondents agreed with the statement that requirements


engineering debt could cause bankruptcy for products and requirements speciﬁ-


cations, respectively (see figure 13). however, the support for the bankruptcy


of the product is greater. figure 14 shows which ones, among the items the


25


product bankruptcy


requirements specification bankruptcy


2.94%


0%


7.35%


9.09%


23.5%


29.5%


30.9%


40.9%


35.3%


20.5%


strongly disagreedisagreeneutralagreestrongly agree


figure 13:agreement with the statement “requirements engineering debt can cause


bankruptcy.”


artifact


people


product


0%


0%


0%


6.9%


0%


3.15%


10.3%


25%


8.66%


41.4%


41.7%


45.7%


41.4%


33.3%


42.5%


strongly disagreedisagreeneutralagreestrongly agree


figure 14: agreement with the statement, “the following symptoms of red can lead to


bankruptcy.” grouped by categories


respondents reported as symptoms of red, are likely to indicate impending


bankruptcy.


4.2.5. propagation


figure 15 shows the distribution of agreement about which context factor


categories—derived from the list by petersen et al. [31]—increases the likelihood


of red further propagating. the ﬁgure shows that process- and product-related


context factors are perceived to have the strongest inﬂuence on the propagation


of red, though the diﬀerence between groups is marginal. the strong support


for the context factors maturity, quality, and size of the product is oﬀset by


the comparably weaker support for type and customization of the product.5


therefore, a sub-group of product-related context factors (containing maturity,


quality, and size of the product) is dominant over all others.


5the complete list of context factors and their categories is available in appendixb,


table b.20


26


process


market


people


tools


product


2.31%


1.56%


4.64%


5.47%


4.27%


6.15%


10.9%


10.5%


11.7%


6.71%


26.9%


31.2%


31.6%


32%


25.6%


42.3%


40.6%


32.5%


30.5%


41.2%


22.3%


15.6%


20.7%


20.3%


22.3%


strongly disagreedisagreeneutralagreestrongly agree


figure 15: average agreement with the group of context factors impacting the propagation of


red.


4.2.6. management


we survey four types of interaction with red items; detecting, measuring,


tracking, and remediating red. while about one-third of the respondents report


explicitly detecting (34%) and remediating (34%) red items, a smaller fraction


claims measuring (13%) and tracking (22%) them.


detecting red is perceived to be comparably the least expensive of the four


activities while remediating is the most expensive (see figure 16). in general,


requirements engineers and product owners are perceived to hold the highest


responsibility for interacting with red, followed by stakeholders in downstream


development activities, such as architects, developers, testers, and quality engi-


neers. figure 17 visualizes the agreement of the survey respondents regarding


which role (on the x-axis) is responsible for an activity (on the y-axis). for


example, 46 respondents agree that a requirements engineer/business analyst is


responsible for detecting red, while only 12 respondents agree that it should


be the responsibility of the entire company.


moreover, 34 out of 69 respondents agree that remediating red requires a


mandate, as shown in figure 18.


for most companies that measure red, its actual value is related to time,


such as the number of days saved by taking debt in order to release a feature


more quickly. these measurements apply exclusively to intentional as well as


unintentional-but-already-detected red, as they presuppose an awareness of


27


detecting


measuring


tracking


remediating


1


1


3


1


20


8


7


3


18


21


22


19


22


25


25


21


8


14


11


25


strongly disagreedisagreeneutralagreestrongly agree


figure 16: agreement with the statement, “{action} is expensive.”


entire company


product owner


requirements engineer \ business analyst


system \ software architect


developer


tester


quality engineer \ manager


trainer \ educator


researcher in industry


manager


detecting


measuring


tracking


remediating


124446333527304524


83643242213231327


63843252016262527


636453127131913235


10


15


20


25


30


35


40


45


figure 17: support for stakeholders being responsible for actions related to managing red.


the debt items.


another measure is reported to be the number of users (or customers) in-


volved when taking debt, as a survey respondent reported: “the rule is usually


no users, then zero value. so, any time spent on a requirement for an unused


feature is debt.”others recognize that calculating red is often diﬃcult, as


not only the number of customers but also their expectations need to be taken


into account—one respondent reported that “calculating red value is often


related to customer expectations, so it’s hard to do.” conversely, customer dis-


satisfaction is perceived as the main “external” (i.e., not related to processes or


28


mandate required49202410


strongly disagreedisagreeneutralagreestrongly agree


figure 18: support for the statement “remediating red requires a mandate.”


stakeholders within the company) symptom of red.


customers and their involvement are also at the center of detecting the pres-


ence of unintentional red. according to the respondents, some process models,


such as agile, are better at supporting red detection (e.g., one respondent


pointed out “communication is probably the single most important in my opin-


ion. agile helps with that since you have frequent sprint cycles and small de-


liveries with valuable feedback that can help raise awareness of what is going


wrong; notice that agile mainly facilitates communication here.”).


internally to a company, the main way to detect red is to have systematic


review sessions of the requirement artifacts (e.g., “review of product require-


ment documents by peers/other stakeholders.”, as one respondent put it). how-


ever, the respondents revealed that red is often detected only during develop-


ment. this is in line with established literature which consequently formulated


the need for “early error detection” [6].


in this case, the symptom of debt is perceived as the lack of (or hard-to-


manage) traceability between requirements and other artifacts.red items


are tracked the same way that technical debt items are tracked, using issue


trackers—for example, one survey respondent pointed out “[red items] can be


tracked as research/investigation issues/tickets similarly to how one might track


technical debt items.” remediation of the tracked red items seems to be an


ad-hoc process, which relies on speciﬁc indications provided by customers as in-


dicated by this respondent—“we don’t explicitly remediate requirements debt,


but we do spend a lot of time redesigning and reworking requirements from


users complaints. the key component i see is having actionable feedback on


what needs to change as early as possible.”


29


4.3. resulting theory


our red theory is organized around propositions and explanations. propo-


sitions and explanations about causes, intentionality, and roles are reported


in table 4. table 5 covers symptoms and factors inﬂuencing red, while ta-


ble 6 reports aspects related to managing red, including detecting, measuring,


tracking, and remediating it.


4.3.1. propositions


we follow a conservative approach without any assumptions on the theoreti-


cal robustness in parts of the theory—i.e., the lack of suﬃcient quantitative data


does not allow us to make claims about which propositions are more relevant


than others. further, we do not describe context conditions for the individual


propositions. while such information can be valuable for inferring conditional


hypotheses, our data does not allow for a balanced contextualization (e.g., re-


garding roles or industry sectors) across all propositions.


the theory is descriptive [27] as it describes how practitioners understand


and manage red. future work as outlined in section 6, especially empirical


work focusing on speciﬁc propositions, will be necessary to enable a more pre-


scriptive theory.


4.3.2. explanation


this empirically grounded theory is aimed to serve as decision support in


understanding and managing red. tables 4 and 5 guide the understanding of


red by characterizing the concepts contained in the red metaphor. p3 and


p4 emphasize that red is mostly connected to time-related aspects, both in


the form of cause and value. the potential value of accruing red—reducing


time to market—is commonly accepted as a suﬃcient reason for accruing it.


value is rarely calculated in practice (p6) since it is diﬃcult to measure and


track red in detail, which aligns to prominent research on the challenge of


measuring software-related quality [32, 6]. although governance around red is


30


table 4: propositions: causes, value, intentionality, and roles related to red


idpropositionsource


p1red items can have artifact-, time-, people-, and/or product-


related causes.


interviews,


literature


p2red items can have time-, product-, and/or people-related valueinterviews,


literature


p3time-related causes are most relevant.survey


p4time-related value is the most relevant.survey


p5agile facilitates the introduction of red items and at the same


time their detection.


survey


p6the value of red is rarely calculated in practice.survey


p7the responsibility of estimating the value of red lies with re-


quirements engineers or high-level stakeholders.


survey


p8red can be accrued both intentionally and unintentionally.survey


p9time-related causes are predominantly intentional, people-related


causes are mostly unintentional.


survey


idexplanationprop.


e1among the time-related reasons for accruing red, beating com-


petitors to market is what incentivizes to accrue red.


p3, p4


e1.1companies accrue red when reputation is at stake, especially


when fulﬁlling legal obligation.


p3, p4


e2although agile lacks formalization, which increases the likelihood


of introducing (unintentional) red, its focus on stakeholders com-


munication and reviews helps uncovering red.


p5


e3there are causes that are more likely to be intentional and some


that are rather unintentional.


p8


e4time-related causes accrue red intentionally to achieve the time-


saving values. people-related causes accrue red unintentionally,


since it is diﬃcult/hard to pinpoint people-related shortcomings


(like lack of diligence)


p9


31


table 5: propositions: symptoms and factors inﬂuencing red.


idpropositionsource


p10red items can have artifact-, time-, people-, and/or product-related


symptoms.


interviews,


literature


p11incompleteness of requirements is the strongest symptom of red.survey,lit-


erature


p12customer dissatisfaction is a strong symptom of red.survey


p13red can cause bankruptcy of both the srs and the product.survey


p14artifact- and product-related symptoms are most likely to lead to


bankruptcy.


survey


p15context factors inﬂuence the likelihood of propagation of red.survey


idexplanationpropositions


e5missing requirements remains one of the strongest indicators for ac-


crued debt in re [5]


p11


e6among the people-related symptoms,customer-related symptoms


have two dimensions:not only do they need to be reached out to


or involved, but also their relationship maintained.


p12


e7there is a point of cumulative red that makes a srs or product


unusable, forcing the company to discard the current assets and start


anew.


p13


e8especially properties of the product (size, maturity and quality) under


development inﬂuence how red propagates from one item to another.


p15


not clear, organizations avail stakeholders in management positions to estimate


the value of red (p7).


red can be accrued both intentionally and unintentionally (p8), both bear-


ing individual risks as cautioned during the interviews (see section 4.1). while


unintentional red can go undetected and have a scaling impact on subsequent


software development activities, intentional red can simply be accepted and


actively neglected. diﬀerent causes are more likely to be intentional; for in-


stance, time-related causes are predominantly intentional, while people-related


causes are mostly unintentional. the analysis of open-ended survey questions


suggests that organizations are hesitant to blame individuals for accruing red.


missing or incomplete requirements are the strongest symptom of red


32


(p11), which aligns with ﬁndings in literature [5], as they escalate to customer


dissatisfaction when left untreated (p12).this can ultimately result in the


bankruptcy of a requirements speciﬁcation and, in the long run, the product as


a whole (p13), which emphasizes the scope of red impact.


context factors inﬂuence the likelihood of propagation of red (p15). among


commonly known context factors, the size, maturity, and quality of the product


under development strongly inﬂuence the propagation of debt.


table 6 shows managing red, which is decomposed into detecting, mea-


suring, tracking, and remediating (p16) according to the interview results. de-


tecting red items is less expensive than measuring, tracking, and remediat-


ing (p17) since detecting may happen ad-hoc. this corroborates the generally


agreed upon notion of scaling cost models, e.g., the spiral model of software


cost [6]. among the four activities, measuring and tracking red are the least


common (p18), which is explained by a lack of speciﬁc tooling (p19) and the


diﬃculty of properly quantifying red (p21).


5. discussion


section 5.1 answers the research questions and discuss the relevance of this


research. in particular, section 5.2 discusses the results in relation to existing


evidence and the general notion of td. finally, section 5.3 addresses threats to


validity.


5.1. answers to the research questions


5.1.1. rq1: how do practitioners understand red?


the concepts of red—e.g., the notion of td applied to re—are perceived


to be similar to td. these concepts consist of causes, items, eﬀects, symptoms,


and value. most concepts can be categorized to be artifact-, time-, people-,


or product-related (p1, p2). time-related causes and value are most relevant


(p3, p4), highlighting the motivation behind accruing red to be time-savings.


red can be accrued intentionally and unintentionally (p7), though certain


33


categories of concepts are strongly associated with either. for example, time-


related causes are predominantly intentional, while people-related causes are


mostly unintentional (p9).


a strong symptom of red encountered during the development process


is the incompleteness of requirements (p11), whereas customer dissatisfaction


(p12) is a post-release symptom. red can ultimately cause the bankruptcy of


both the requirements speciﬁcation and the product (p13), representing a point


where the respective entity must be discarded completely.context factors,


especially the size, maturity, and quality of the product under development,


inﬂuence the likelihood of red propagation to other artifacts or processes (p15).


5.1.2. rq2: how do practitioners manage red?


the interviews presented in section 4.1 show that the management of red


is composed of detecting, measuring, tracking, and remediating red (p16).


detection is both the least expensive (p17) and most common (p18) type of


interaction, likely because we lack speciﬁc tools for tracking (p19) and measuring


red (p21) in the industry. the responsibility of addressing red is perceived


to lie with requirements engineers and high-level stakeholders (p22) and requires


an explicit mandate (p23).


5.1.3. relevance to research and practice


technical debt is no longer limited to source code. the metaphor has evolved


to characterize circumstances where developers make compromises or take short-


cuts throughout the development process, including when dealing with require-


ments. the practical manifestation and understanding of red has an impact


on both theory and practice.


in particular for researchers, this work scopes a re-speciﬁc theory to the


vast td literature and harmonizes the vocabulary used to address red. we


see this empirically grounded theory as a fundamental basis to encourage and


guide further red research. the initial propositions serve as a set of falsiﬁ-


able hypotheses, which invite follow-up, in-depth research on speciﬁc aspects of


34


red. furthermore, the theory can be expanded by adding further empirically


grounded propositions or specializing existing propositions by contextualization;


for example, whether the way red items are tracked (p19) depends on speciﬁc


agile practices, such as backlog management. finally, researchers are invited


to address gaps conﬁrmed by propositions, for example, by devising a method


to reliably measure red (e14).


practitioners can use the resulting theory to compare their own experiences


and practices against the provided propositions. although in the current form


the theory is not intended to be prescriptive, practitioners can reﬂect upon the


corresponding explanations, contextualize them to their settings, and devise


their own initiatives to manage red.


5.2. relations to the related work and general notion of td


we discuss how existing literature corroborates the propositions by high-


lighting categories and concept occurrences identiﬁed in this and other studies.


proposition 1 (p1) suggests that red items can have time, people, artifact,


and/or product-related causes. these categories were also identiﬁed in studies


by rios et al. [12] and barbosa et al. [14] that focused on documentation and


requirements debt types, while the example occurrences of these categories are


presented in table 1.proposition 3 (p3) suggests that time-related causes


are the most relevant causes of red. time-related causes, conceptualized as


deadline, are also identiﬁed as the top-ranked cause for documentation and


requirements type of debt in related studies [12, 14]. moreover, an impending


deadline is perceived as the most common cause of td in general [33], indicating


that the signiﬁcance of deadline is also applicable in the red domain.


similarly to proposition 1 (p1), proposition 10 (p10) suggests that red


items can have symptoms related to time, people, the product, and/or artifacts.


available studies by rios et al. [12] and barbosa et al. [14] corroborate this


further. this is also visible in the level of eﬀect occurrences that form these cat-


egories. proposition 11 (p11) suggests that the incompleteness of requirements


is the leading symptom of red, while the following is the customer dissatis-


35


faction, as suggested in proposition 12 (p12). from table 1, we observed that


both previous studies [12, 14] support p12 by discussing low external quality—


interpreted as customer dissatisfaction—as one of the leading eﬀects of docu-


mentation and requirement debt. on the other hand, inadequate, non-existing


or outdated documentation, identiﬁed by rios et al. [12], directly supports the


p11. however, incompleteness of requirements, or documentation of any kind,


is not among the top 10 eﬀects of td in general, whereas the low external


quality occupies the fourth place [33]. this shows a misalignment between the


top-ranked eﬀects of td in general and the red symptoms.


5.3. threats to validity


to discuss the threats to validity, we adopt the guidelines proposed by


wohlin et al. [34] and extended by molléri et al. [35].


external validity. the online survey sample size limits the study result gener-


alizability. however, it still grants the proposal of an initial theory as a starting


point for further development and evaluation as argued in section 4.3. in ad-


dition, we further minimize this threat to validity by including demographic


checks in the survey instrument to ensure the representativeness and eligibility


of the participants (see table a.7).


conclusion validity. we ensured the conclusion validity by carefully aligning


the resulting red theory with the established and more mature td theory,


when possible. the fourth to seventh authors reviewed the resulting proposi-


tions based on their involvement in td research. conﬁdence in our conclusion


depends on the strength of the evidence found in the empirical studies—i.e.,


interviews and survey. we acknowledge that the results regarding development


process models, such as agile, are based, for the majority, on the answers to


two survey questions.


internal validity. both the interview and the survey instrument were designed


following established guidelines [35]. we piloted the instrument before deploy-


ment to ensure the understandability of the questions. we piloted the survey


36


among the ﬁrst three authors and with one external senior reviewer to adjust


the formulations and ensure unambiguous interpretations.


interpretive validity. responses to open-ended survey questions were coded


jointly by the ﬁrst and second authors and validated by the third author to


ensure a reliable inference of the participants’ opinions. however, a signiﬁcant


portion of responses was written in brazilian portuguese and translated using


google translate. the fourth author, ﬂuent in brazilian portuguese, conﬁrmed


the reliability of the translations by manually assessing a random sample.


37


table 6: propositions: measuring, assessing, monitoring, and remediating red.


idpropositionsource


p16the interactions with red items are detecting, measuring, tracking,


and remediating.


interviews,


literature


p17it is more expensive to measure, track, and remediate red items than


detect them.


survey


p18red is more often detected and remediated than tracked or measuredsurvey


p19red items are tracked using issue trackers similarly to td itemssurvey


p20the remediation strategy is heavily dependent on the customer’s per-


spective on the red item.


survey


p21red is often calculated considering the number of aﬀected customers.survey


p22the responsibility of acting upon red lies with requirements engi-


neers or high-level stakeholders.


survey


p23remediating sometimes requires a mandate.survey


idexplanationpropositions


e9consequences of red are often detected during downstream activities


involving non-re stakeholders.


p17


e10red items can be detected during requirements validation systemat-


ically, or ad-hoc by downstream stakeholders


p17


e11while red is often detected ad-hoc and remediated via systematic


review sessions, there is a lack of techniques and tools to track and


measure red.


p18


e12there is a lack of tooling tailored towards red, forcing companies to


adapt other tracking tools for this purpose. there might also not be


a need for diﬀerentiation.


p19


e13there is a lack of systematic remediation approaches, motivating com-


panies’ remediation strategies to depend on customers perspectives.


p20


e14there is no straight-forward, established way of calculating red as


it depends on features/characteristics of customers such as their ex-


pectations, which are hard to assess.


p21


e15requirements engineers who are most involved with the requirements


and high-level stakeholders are expected to have a suﬃcient overview


over the accumulated red.


p22


e16the responsibility of interacting with red is diﬀused. the respon-


sibility of detecting red lies with high-level stakeholders, low-level


stakeholders—which would enact the remediation—are hesitant to re-


mediate red items without a mandate.


p23


38


6. conclusion


in this paper, we report on an initial theory of red. our theory includes


propositions and explanations representing red understanding and manage-


ment in practice. we developed the theory based on in-depth interviews with


three experts in the area of red and a global survey with 69 practitioners.


the theory constitutes the ﬁrst empirical foundation enabling future work


on the debt metaphor in requirements engineering.contributions based on


this theory will further the understanding of red in practice by leveraging the


debt metaphor to enable better decision-making in re. further research needs


to synthesize the insights gained on red, and the problems and challenges


practitioners face in re, as revealed in the naming the pain in requirements


engineering initiative (see www.napire.org). such endeavor will allow us to


explore further root causes for red as well as better understand its impact.


additional empirical work must verify or refute the existing propositions and


contextualize and extend them. such endeavor will allow us to further explore


root causes for and impacts of red and will provide a more robust basis for


further reasoning about phenomena surrounding red. these include the notion


of intentionality in connection to laziness or upfront lack of commitment to re,


which has not been discussed in the scope of this study, or the impact of the


software process model (like agile), which deserves more attention.


acknowledgements





search proﬁle project at blekinge institute of technology. we additionally thank


the reviewers for their valuable feedback that helped strengthen the manuscript.

