
field study on requirements engineering:investigation of artefacts, project parameters, and execution strategies


daniel m´endez fern´andeza,∗, stefan wagnerb, klaus lochmanna, andrea baumannc, holger de carned


asoftware & systems engineering, institut f¨ur informatik, technische universit¨at m¨unchen, boltzmannstr. 3, 85748garching, germanybsoftware engineering group, institute of software technology, university of stuttgart, universit¨atsstr. 38, 70569 stuttgart,germanycfakult¨at f¨ur elektrotechnik und technische informatik, universit¨at der bundeswehr m¨unchen, werner-heisenberg-weg 39,85577 munich, germanydcapgemini technology service deutschland, carl-wery-str. 42, 81739 munich, germany


abstract


context: requirements engineering (re) is a critical discipline mostly driven by uncertainty, since it isinﬂuenced by the customer domain or by the development process model used. volatile project environmentsrestrict the choice of methods and the decision about which artefacts to produce in re.objective: we aim to investigate re processes in successful project environments to discover charac-teristics and strategies that allow us to elaborate re tailoring approaches in the future.method: we perform a ﬁeld study on a set of projects at one company. first, we investigate by contentanalysis which re artefacts were produced in each project and to what extent they were produced. second,we perform qualitative analysis of semi-structured interviews to discover project parameters that relate tothe produced artefacts. third, we use cluster analysis to infer artefact patterns and probable re executionstrategies, which are the responses to speciﬁc project parameters. fourth, we investigate by statistical teststhe eﬀort spent in each strategy in relation to the eﬀort spent in change requests to evaluate the eﬃciencyof execution strategies.results: we identiﬁed three artefact patterns and corresponding execution strategies. each strategycovers diﬀerent project parameters that impact the creation of certain artefacts. the eﬀort analysis showsthat the strategies have no signiﬁcant diﬀerences in their eﬀort and eﬃciency.conclusions: in contrast to our initial assumption that an increased eﬀort in requirements engineeringlowers the probability of change requests or project failures in general, our results show no statisticallysigniﬁcant diﬀerence between the eﬃciency of the strategies. in addition, it turned out that many parametersconsidered as the main causes for project failures can be successfully handled. hence, practitioners can applythe artefact patterns and related project parameters to tailor the re process according to individual projectcharacteristics.


keywords:requirements engineering, execution strategies, artefact patterns, field study


1. introduction


requirements engineering (re) aims at the speciﬁcation of requirements that reﬂect the purpose of asoftware system as well as the needs of all relevant stakeholders [1]. since requirements are the criticaldeterminants of software quality [2], re lays the foundation for successful development projects regarding


∗corresponding authoremail address: mendezfe@in.tum.de (daniel m´endez fern´andez)


preprint submitted to information and software technologydecember 1, 2016


arxiv:1611.10021v1  [cs.se]  30 nov 2016


cost and quality [3].as a software engineering discipline, it contributes with precise and stakeholder-appropriate requirements speciﬁcations to cost-eﬀectiveness in the development of a system [1] and, thus,re is an important factor for productivity and (product) quality [4].although a rich set of methods for re is available, these methods are still not fully integrated into thedevelopment process [5]. one reason is that re is a broad, interdisciplinary, and open-ended area [6], whichis driven by uncertainty. therefore, even if a company deﬁnes and integrates an re process for company-wideuse in diﬀerent projects, it still does not consider the various inﬂuences that engineers have to face in volatileproject environments. the possibilities and necessities of applying available re techniques are limited bydiﬀerent project parameters such as time, budget or the availability of end users. these parameters hampera standardised and eﬃcient re process that at the same time ﬁts individual project needs. the dependencyon customer’s capabilities and used development process models render the process highly variable andincreases the demand to systematically customise the re process according to individual project needs.


problem statement.it is recognised that basic knowledge of re is often missing in practice [7],whereby project participants have little guidance in deﬁning a systematic process that eﬀectively copes withuncertain project situations. the high variability of the development processes and the diversity of remethods makes it unclear for the practitioner which methods to apply and consequently how to design anappropriate re process.to assist in the customisation of the process by applying particular methods in a certain sequence, it isfundamental to ﬁrst understand the circumstances the project participants are confronted with and how theyshould react in the process according to those circumstances. although a few ﬁrst steps have been taken inthis direction, e.g., in the area of decision-making in the context of requirements engineering [8] or in thearea of activity-based customisation approaches [9, 10, 11, 2] and situational method engineering [12, 13],yet missing is a fundamental understanding of


• what project parameters (see table 1) to consider,• what eﬀects these parameters have on diﬀerent execution strategies in re (see table 1) and theirconsequences on the quality of the produced speciﬁcation documents, and


• whether those execution strategies are eﬃcient.so far, there exists little guidance on the deﬁnition of project-speciﬁc re strategies as available studiesemphasise selected aspects of re processes, their assessment, or the general relation to project failures. yetmissing are comprehensive studies going beyond the isolated investigation of general aspects of re processesand their maturity.


research objective.to lay the foundation for an re customisation approach that considers thecharacteristics of individual project environments, we investigate how re is performed in successful projects,whether we can identify appropriate re execution strategies, and how these strategies relate to projectcharacteristics.whereas similar project characteristics of diﬀerent projects should inﬂuence the maturity of the under-lying speciﬁcation documents (artefacts) in a similar way, the methods used to produce those documentsmay vary. thus, the variability in the process deﬁnition, i.e., the actual creation of artefacts by the use ofparticular methods in a particular sequence, complicates the identiﬁcation, categorisation, and comparisonof re execution strategies that correspond to chosen project parameters.therefore, we investigate re execution strategies in a process-neutral way. for this, we analyse whathas been produced and why it has been produced instead of exclusively focusing on how it was produced.having such an insight into the artefacts of single projects, we are able to objectively reproduce, categorise,and compare diﬀerent re execution strategies without having to take into account the variability of theprocess deﬁnitions.such a process-neutral investigation allows us detailed insights into which artefacts are produced inrelation to project-speciﬁc parameters and which re execution strategies are an appropriate response tocertain problems.


2


contribution.to investigate re execution strategies and underlying causes, we analyse real-lifeprojects at the company capgemini technology services (ts), which is specialised in custom softwaredevelopment projects for the application domain of business information systems. based on this analysis,we contribute the following:


1. we provide a novel, process-neutral picture of requirements engineering in real projects by the degreeof completeness in which requirements artefacts were produced.


2. we identify a set of project parameters, which inﬂuence the artefact completeness and hence practicalrequirements engineering. this relation has not been analysed before.


3. we categorise projects with artefacts of a similar degree of completeness into what we call artefactpatterns. this new analysis reﬂects probable execution strategies for requirements engineering andalso how they relate to the identiﬁed project parameters.


4. we evaluate the execution strategies by analysing the eﬀort spent for diﬀerent parts of the projects.a major part of the contribution is the analysis of the interrelations between these four parts. thediscussion about which re execution strategy should be chosen with distinctive project parameters supportspractical project decisions. we ﬁnally lay a ﬁrst foundation for the future elaboration of a tailoring approach,which customises re eﬀort according to individual project situations.


context.this study is performed as part of a research cooperation between the technische uni-versit¨at m¨unchen and capgemini ts, a major software and consulting company. to reach our researchobjective, we conduct content analyses of re artefacts produced in 12 real-life projects, interviews withproject participants, and an analysis of eﬀort considering the eﬀort spent in re in relation to further eﬀortresulting from the overall development life cycle as well as from change requests.


terminology used in the field study.to ensure an understandable and unambiguous terminologyfor our paper, we explain the central terms we use to describe our study. table 1 summarises terms anddeﬁnitions to which we will refer in our subsequent contribution.


outline.the paper is organised as follows. in section 2, we discuss related work in the areas of ourcontributions. in section 3, we introduce the ﬁeld study design. we give a description of the researchquestions, of the case and subject selection and of the data collection procedures before concluding witha brief discussion on the validity procedures. section 4 presents the results of the ﬁeld study. we beginwith a case and subject description and structure the results according to the formulated research questions.finally, we evaluate the threats to validity. in section 5, we summarise our ﬁndings, describe their relationto existing evidence and their implications. we discuss the limitations of the study and give an outlook ofthe future work.


2. related work


in the following, we discuss the work related to the four main factors we investigated in our ﬁeld study.first, we describe related work discussing and empirically analysing the degree of completeness of reartefacts. second, we introduce project parameters and studies identifying such parameters. third, wediscuss execution strategies for re and related studies on process assessments. finally, we describe theexisting studies on the impact of re on project eﬀorts.


studies on artefact completeness.the completeness of requirements speciﬁcations has been dis-cussed as an important aspect of requirements quality [19]. as it is hard to assess whether a speciﬁcationis complete, in this study, we investigate the syntactic completeness of artefacts by analysing whether eachartefact has been created in comparison to an abstract artefact-based reference model. we can perform thiscomparison with a high degree of objectivity. kamata and tamai [20] used a similar approach and mappedexisting requirements speciﬁcations to the ieee software requirements speciﬁcation std. 830-1998 [21]. they


3


table 1: terminology used in this paper.


termdescription


projectsoftware development eﬀort aimed at the construction of a (software) systemthrough the application (execution) of a development process model (seealso [14]).development processmodelstandardised organisational reference model that abstracts from the ide-alised execution of a development project. it includes the description of theprocess (deﬁnition) to follow, the work products to be generated, as well asroles involved [14]. synonyms: reference process model, methodology [15].process deﬁnitionplanned way of creating and modifying a set artefacts via the application ofparticular tasks or methods (providing structured approaches to combiningdiﬀerent description techniques [1]) in a particular sequence.artefactdeliverable that abstracts from contents of a speciﬁcation document. it isused as input, output, or as an intermediate result of a process deﬁnition(see also [16]).artefact patterna series of sets of artefacts with similar characteristics. in this study, thesets of artefacts of diﬀerent projects with a similar degree of syntactic com-pleteness. contrast with design pattern [17, 18].(re)executionstrategyactual instantiation of the (re) process deﬁnition in response to a set ofproject parameters, and resulting in a particular artefact pattern.project parameterassessable condition and characteristic from inside or outside the projectthat inﬂuences its execution, e.g., the availability of end users.projectparameters have a direct inﬂuence on the methods used and, thus, on whichartefacts to create to what extent, i.e., to which degree of completeness.


found that speciﬁcations tend to be balanced in the depth they are described. to the best of our knowledge,there are no further studies performing an artefact completeness analysis.


studies on project parameters.project parameters aim to summarise important characteristicsof a project inﬂuencing its execution; for instance, the availability of end users and the expected degree ofinteraction between those end users and the system under consideration, both inﬂuencing the necessities ofcreating certain contents in the re artefacts (e.g., use case models).in our study, project parameters are important aspects that we found to inﬂuence how re was performedin a project. only little work has been performed in analysing characteristics of projects in an isolatedmanner. the work of aurum and wohlin [2] is one example. they contribute diﬀerent project parametersaﬀecting the decisions to be taken in an re process, e.g., stakeholder-related decisions.hall, beecham and rainer [22] conducted a study on re processes with the goal of discovering andclassifying problems. they found that 48% of problems in the analysed software development projects wererelated to poor requirements. in addition, they discovered, although they did not use the term, a set ofproject parameters that caused most of the problems. examples are developer communication, inappropriateskills, inadequate resources, staﬀretention, user communication, lack of training and company culture.luckey et al. [23] use project parameters to describes projects in a repository of security requirements.they use these parameters to ﬁnd relevant security requirements for reuse. the found parameters rangefrom technical parameters, such as the use of ldap in the project, to customer parameters, such as whetherthe customer is in the public sector. the study, however, does not relate the project parameters to otherfactors.


4


studies on re execution strategies.in general, an re execution strategy reﬂects how the reprocess is actually executed in a speciﬁc project. the term “execution strategy” arises from the area ofcomprehensive, customisable development process models, such as the v-modell xt [24], a german standardfor it development projects. the v-modell xt oﬀers diﬀerent (project) execution strategies to be selectedin a tool-supported manner when initiating a project.these strategies dictate a set of artefacts to beproduced and methods to be potentially used in dependency to given project parameters, such as “systemdevelopment project (customer) with one supplier”.development process models that include diﬀerentexecution strategies, however, deﬁne those strategies via coarse grained project parameters and their impacton overall artefacts and activities (e.g., considering the general creation of a requirements speciﬁcation).to the best of our knowledge, however, an analysis of execution strategies taking into account the createdre artefacts and, in particular, their contents w.r.t. the completeness of these artefacts has not been donebefore. available studies in the area of re concentrate on the extraction of best practices and emphasiseused methods and description techniques in practice (see, e.g., boehm and alexander [25], el enam andmadhavj [26] or cox, niazi and verner [27]).


studies on eﬀort impacts.the overall goal of empirical analyses of re in practice is to discoverimportant impacts of the investigated factors. several studies analyse the impact of re methods on projectfailures. a widely known empirical evaluation of such project failures is the chaos report from the standishgroup [28] that examined project failures and related causes, such as missing user involvement. the reportdoes not, however, give detailed insights into the study design. the success study from buscherm¨ohle,eckhoﬀand josko [29] presents a similar investigation of german companies, including a description of howexactly the study was performed. still, both surveys exclusively investigated failed projects and generalcauses and, thus, give no understanding on how speciﬁc problems are tackled in successful projects.kamata and tamai [20], who analysed artefact completeness, also investigated the general relation toproject success by determining which speciﬁc sections of the documentation relate to project failures. inparticular, they show that the section that includes project objectives, as well as the section that includesthe functions description, both relate to cost and time overruns in the projects.similar work is presented by sommerville and ransom [30].they assessed the impact of a processimprovement in re at organisational level. in general, their results show “when the re process maturityof an organisation improved, an improvement was also observed in business performance indicators.”damian and chisan [4] analysed process improvements in re and the relation to payoﬀs regarding, forexample, productivity and the ﬁnal product quality. their ﬁndings showed that improvements in re havelead to (a) improvements in developer productivity (b) improvements in product quality (fewer user-reporteddeﬁciencies, fewer product defects after release) (c) more eﬀective risk management.


discussion of related work.as shown in the previous sections, there exist several studies thatinvestigate isolated aspects of re processes, artefacts, or project parameters, and selected relations ofspeciﬁc factors to project failures. however, no studies are available that analyse re in a process-neutralway and, over and above all, the relations between all the introduced factors.although the beneﬁts of process-neutral investigations are understood (see also [16]), contributions thatgive such insights and, thus, that would satisfy our research objectives are still missing.


previously published material.in [31], we performed the ﬁrst step of a process-neutral investiga-tion as part of a ﬁeld study. we analysed the artefacts that had been produced in 12 company projects, aset of project parameters that relate to the creation of the artefacts, and corresponding artefact patternswith probable requirements engineering execution strategies that lead to these patterns.in this paper, we extend the ﬁeld study in two ways. first, we extend the discovered project parametersto a detailed taxonomy of parameters, which either enforce or hinder the creation of certain artefacts.second, we evaluate the execution strategies with respect to the eﬀort spent in the creation of the artefactstaking into account further resulting eﬀort, e.g., spent for change requests. this analysis gives evidence on


5


the eﬃciency of the diﬀerent strategies and contributes to the establishment of an eﬀective customisationapproach, since researchers and practitioners get insights into re in practice.


3. field study design


we organise the study according to runeson and h¨ost [32]: we formulate the research questions, anddescribe the case and subject selection, as well as the data collection procedures. we then deﬁne the analysisprocedure, and conclude with a description of how we ensure the validity.


3.1. research questionsthe study investigates re execution strategies and underlying causes reﬂected in a set of (re-usable)project parameters. we conduct a process-neutral investigation, which allows us to determine and evaluatere execution strategies without having to directly take into account the variability of the process deﬁnitions.in contrast to available studies, our investigation ﬁrst identiﬁes the extent to which the artefacts werecreated in diﬀerent projects. we analyse the artefact completeness in these projects. based on the ﬁndings,we investigate which project parameters directly inﬂuence the degree of completeness in the single artefacts,e.g., assessable conditions like the availability of end users and their eﬀects on the creation of particularrequirements engineering artefacts such as use case models.we infer probable re execution strategies, since we are now able to identify artefact patterns, i.e.,similarities in the degree of completeness in the artefacts of diﬀerent projects, resulting from potentiallydiﬀering process deﬁnitions. we abstract from project-speciﬁc detailed processes used to create the artefacts,but preserve the project-speciﬁc characteristics as part of the project parameters. in contrast to relatedwork that emphasises the analysis and assessment of re processes, we identify and compare probablerequirements engineering execution strategies on the basis of the artefact patterns and their underlyingcauses, reﬂected in the project parameters.finally, to determine whether the identiﬁed strategies were appropriate, we evaluate their eﬀort impacts:we analyse the eﬀort spent in re, change requests, and the further development life cycle. this gives a moredetailed view on the appropriateness of the execution strategies than given if exclusively investigating, e.g.,whether a project fails or not.in summary, to reach our research objectives we have to identify and evaluate diﬀerent execution strate-gies in which the artefacts are speciﬁed in a certain completeness in response to selected project parameters.the resulting factors and their relationships analysed in this ﬁeld study are summarised in figure 1.


project parameters


artefact completeness


artefact patterns & re  


execution strategies


effort impacts


figure 1: analysed factors and relationships.


we subsequently introduce the research questions, which we have formulated to investigate the factors.


6


rq 1. which artefacts are created and how complete are they?


as mentioned above, we need to analyse the quality of the artefacts created in diﬀerent projects. thisallows us to objectively reproduce, categorise, and compare re execution strategies in diﬀerent projectswithout having to take into account the variability of their process deﬁnitions. by abstracting from theorder and way in which the artefacts were documented, we then are also able to account for the relevanceof single artefacts of a particular quality with respect to speciﬁc project situations.to determine a notion of quality in the artefacts created in a limited number of projects, we are interestedin the degree of completeness in the documentation of the artefacts. with “completeness”, we have to referto the syntactic completeness, i.e., the elements and relations of, for example, a use case model beingdocumented or not. the reason is that we are not able to objectively estimate the semantic completeness;for instance, whether all requirements (e.g., all use cases) relevant to the stakeholders were documented (seealso [21]). further information is provided in the analysis procedure in section 3.4.


rq 2. which project parameters have an inﬂuence on the artefact completeness?


we need to ﬁnd inﬂuencial project parameters and their relation to the completeness of the re artefactsto reproducibly characterise the project-speciﬁc context of the re process. having identiﬁed the degree ofcompleteness of the artefacts in individual projects, as well as inﬂuencing project parameters, we set bothin relation to each other. while rq 1 addresses what has been produced, rq 2 addresses why this has beenproduced.


rq 3. are there artefact patterns and corresponding execution strategies?


based on the project parameters that inﬂuence individual projects in relation to the completeness ofthe re artefacts, we analyse whether speciﬁc artefact patterns can be distilled. to this end, we compareand categorise the artefact completeness for similarities among diﬀerent projects. we then analyse potentialreasons for the artefact completeness on the basis of the identiﬁed project parameters, and infer probablere execution strategies.


rq 4. do the patterns and execution strategies diﬀer in their eﬀort for re and their impact on other eﬀort?


if we are able to identify artefact patterns with their underlying execution strategies, we need to evaluatetheir appropriateness. we are not only interested in whether the project is a success (in case a speciﬁcpattern is used with certain project parameters), but we also want to know the economic impact the patternhas. this allows for a comparison of the patterns and an identiﬁcation of advantages and disadvantages ofparticular execution strategies. as a ﬁrst step into this direction, we analyse whether there are diﬀerencesbetween the found patterns and execution strategies with respect to the eﬀort spent on re and other eﬀort.in particular, we are interested in the eﬀort for change requests that is potentially caused by insuﬃcient re.


3.2. case and subjects selection


we analyse documented and ongoing projects1 at capgemini ts. the company constitutes the germantechnology service entity of the capgemini group and has its focus on custom software development withinthe application domain of business information system. the projects to which we refer in the ﬁeld study(including corresponding study subjects and objects) thus are all situated in the same application domain.regarding the study subjects (the project participants), we focus on two company-speciﬁc roles, whichare related to requirements engineering: “project lead” and “chief analyst”.the project lead has theresponsibility of project management issues, such as control or risk management, but also of acquisition.corresponding subjects are the source for initial information on how the development project was set up and


1with ongoing projects we refer to projects that have further releases or increments beyond the ones analysed.


7


which documents the project scope was deﬁned upon. after the successful acquisition and scoping phase ofa project, the chief analyst has the responsibility of analysing and documenting the business processes, therequirements and the initial (overall) system speciﬁcations. all the project participants that are assigned tothese roles are employees of capgemini ts. for conﬁdentiality reasons, we have no access to customer-sideproject participants.regarding the study objects, we distinguish between the company-wide development process model usedat organisational level (focussing on the re deﬁnition), and the projects, in which the re process is per-formed according to the process model. the ﬁrst one serves as a preparation of the study and providesan understanding of used roles, methods, and artefacts with corresponding terminology. the study objectscontain descriptions of the reference process model, training material, and standard operating procedures.with the understanding of the reference process model, we select diﬀerent projects and analyse correspond-ing documents. as a whole, 18 projects were available and ready to participate in the study. we concentrate,however, on 12 projects (see section 4.1), since these were able to oﬀer all data necessary to completelyperform the analysis procedure (e.g., speciﬁcation documents). the remaining six projects were not able toprovide that data, mostly due to conﬁdentiality issues.the documentation of the projects includes acquisition documents, so-called study documents, require-ments speciﬁcations and system speciﬁcations and, where necessary, frame contracts. acquisition documentscapture background information and possible objectives of each project. study documents usually captureinformation on the customer domain and the organisation, the actual business processes, and a rough planof the future business processes to be supported and realised by the system under consideration. thesedocuments are mostly produced as preparation for a development project. in some cases they are createdin parallel to a maintenance phase, so that they also include a detailed description of the main use casesand technical aspects of the current it infrastructure. the requirements speciﬁcation contains the user andsystem requirements, i.e., the external functional speciﬁcation and the speciﬁcation of non-functional re-quirements. the system speciﬁcation contains the internal functional speciﬁcation, which deﬁnes the logicalcomponent architecture.finally, the analysed projects use a standard eﬀort accounting system that captures the eﬀort spentby all participants for each project. the accounts within the system are organised according to the phases(respectively disciplines) of the company-speciﬁc development process model, e.g., consultancy, project man-agement, or change management. for each of the diﬀerent tasks performed in a phase, the accounts option-ally include detailed sub-accounts, such as for particular quality assurance tasks. during the project, theproject participants assign their eﬀort spent to these diﬀerent accounts. we use the accounting system as asource for the analysis of the eﬀort impacts, as we do not have information about the actual costs (see alsosection 3.4.4 for the detailed description of the accounts and corresponding analysis procedure).


3.3. data collection procedures


we collect the documentation of the development process model as a preparation before analysing thesingle projects. the documentation was made available at the beginning of the study. we then prepare andset up the data collection from the single projects in two steps that take approximately two days for eachproject. this way, we keep the eﬀort for the study subjects to a minimum. the single points of contactfor the study subjects were the authors of the study, daniel m´endez fern´andez and andrea baumann, whoalso performed the interviews (see the subsequent sections).


step 1.as the ﬁrst step, we select the projects to participate in the ﬁeld study from a set of (project)candidates. to identify candidates, our project partner provides us with a list of projects and correspondingcontact persons, which we contact by email. each project is represented by one person, who either is assignedas the project lead or as the chief analysts of the project. if the project candidate is selected, this personserves as the single point of contact during the study.when establishing the ﬁrst contact, we provide information about the study planned (its purpose anddesign) and propose an appointment for an open telephone interview of approximately one hour.thistelephone interview is not prepared with a set of particular questions, but serves to


8


1. clarify questions of the (potential) study subjects and2. get a brief overview of the project background, its relevance for the ﬁeld study, and an overview of theexisting documentation.we consider a project to be relevant if the project oﬀers the possibility to access the documentation(regarding, e.g., non-disclosure agreements with third parties), the project participants are able to put inthe necessary amount of eﬀort in the study, and whether the project includes the creation of re-relevantartefacts in the envisioned application domain of business information systems.


step 2.in the second step, the project participants of the selected study-relevant projects (the projectlead or the chief analyst), send us the documentation for a brief content analysis. this enables an initialunderstanding of the artefacts (their structure and contents) and allows us to identify needs for requestingadditional documents. during a second short open telephone interview, we ﬁnalise the preparation of theanalysis and make an appointment for a semi-structured interview to complete the actual content analysis.to elaborate diﬀerent project parameters that have an inﬂuence on individual projects and their artefacts,we perform semi-structured interviews. in each interview, we directly ask the study subjects for speciﬁccontent items which we found exceptional in the content analysis. this allows a discussion on why speciﬁcartefacts are documented or not, and furthermore, the extraction of speciﬁc project parameters that aredirectly related to those artefacts.we prepare each interview by identifying those content items that exhibit diﬀerences compared to otherprojects and items that have not been speciﬁed at all. during this (semi-structured) interview, we then askfor:


1. individual project parameters that had an eﬀect on the particular content items2. the dependencies that these parameters had to speciﬁc content itemsin addition, the project participants make the information for the eﬀort analysis available to us. thisincludes the project-speciﬁc names used by the project participants in the eﬀort accounting system, sincevariations from the standard names are possible. apart from the account names, they provide us with thepoint in time when the requirements speciﬁcation was accepted by the customer. the acceptance date is usedto allocate the documented eﬀort in the eﬀort accounting system to chosen categories, such as re eﬀort oreﬀort spent in change requests (see also the next section). based on given information, we retrieve the actualdata from the accounting system and analyse it without further involvement of the project participants.


3.4. analysis procedures


the analysis of the projects is conducted in four steps:


step 1 addresses rq 1 by content analyses.step 2 addresses rq 2 by qualitative analysis of expert interviews.step 3 addresses rq 3 by cluster analysis.step 4 addresses rq 4 by statistical testing.the authors daniel m´endez fern´andez and andrea baumann conduct the ﬁrst two steps and any resultinginteraction with the study subjects (see also the foregoing section). klaus lochmann and stefan wagnerthen additionally participate in the third and fourth step. finally, holger de carne performs the actualretrieval of the data from the accounting system and the removal of conﬁdential information, e.g., details ofthe customers and of the project participants who assign their spent eﬀort into the system.in the following section, we describe each step in detail.


3.4.1. content analyses (step 1)this step answers rq 1 via content analyses of the collected documents, which we perform in isolationwithout any discussions with the study subjects. thus, we can ensure an objective review of the documen-tation and furthermore a neutral comparison of the documentation of diﬀerent projects. in projects of ahigh complexity that have several thousands of requirements, we take samples for each of the documented(software) releases. this reduces the eﬀort and gives an average view of the syntactic completeness of eachartefact. finally, requirement’s attributes, such as the documented priority of requirements and details on


9


which this priority calculation is based, are not explicitly taken into account, because they were handleddiﬀerently in the projects.the content analysis is performed by comparing the documents and their content on the basis of aneutral artefact-based requirements engineering reference model (rem) [33]. rem results from a researchcooperation between the technische universit¨at m¨unchen and several industry partners. rem deﬁnes ataxonomy of the core re artefacts (documents or data sets) with a description of recommended contentsand an abstract description of the contents’ interdependencies (traceability relations). we consider rem tobe neutral, because it makes no assumptions about a particular application domain, i.e., it was not developedfor a particular family of systems, nor does it relate to a particular methodology.in addition to the independence to a particular methodology, we opted for rem, because it also uniﬁesin its taxonomy the re artefacts proposed by several available artefact-based reference models, such asthe ieee software requirements speciﬁcation std. 830-1998 [21] or the volere requirements speciﬁcationtemplates [34]. this supports the validity of the taken reference model with respect to the state of theart in artefact orientation. since the determination of semantically incomplete re artefacts (e.g., if allrequirements considered relevant by the stakeholders are documented) is still an unsolved issue [21], wefocus on the syntactic completeness, i.e., the existence of the content items proposed by rem with respectto the elements and relations speciﬁed in the analysed speciﬁcation documents. the investigation of thesemantic completeness of the artefacts is not in scope of the ﬁeld study. the only indication of semanticallyincomplete artefacts is given, to some extent, by the results of the analysis of the pattern eﬃciency (seestep 4). in the analysis of the eﬀort spent in the creation of the artefacts, we evaluate the patterns, e.g.,with respect to change requests that may result from insuﬃcient re potentially indicating that not allrequirements were documented (see also section 3.4.4).we take into account the three major artefacts proposed by rem: the business needs speciﬁcation,the requirements speciﬁcation and the system speciﬁcation.each of those artefacts includes a list ofcontent items. taking each artefact and its included content items as a reference model, we compare thecontent of each projects’ documents. we consider some of these content items as irrelevant for the domainof business information systems, such as hardware-speciﬁc constraints, which are relevant for embeddedreactive systems. we thus tailored rem for the domain of business information systems. we performed adomain-speciﬁc interpretation of the content items and removed the irrelevant items with respect to domain-speciﬁc architecture frameworks, like the zachmann framework (see also [35, 36]), so that no content itemswere missing.for each content item in rem, there are deﬁned (syntactic) completeness criteria. this allows for theusage of this model as a reference for a detailed analysis of a speciﬁcation’s content and its completenessaccording to the criteria:


• completely speciﬁed: the content item can be mapped unambiguously onto a speciﬁc element of theanalysed documents.


• incompletely speciﬁed: the content item can be identiﬁed in the analysed documents but exhibitsmajor deﬁciencies with respect to the deﬁned completeness criteria.


• missing: the content item cannot be identiﬁed in the analysed documents.the content analysis with rem gives a detailed view on the produced artefacts and their syntacticcompleteness (what has been documented). since it allows no deeper understanding about the process andthe underlying motivation (why has it been documented), we perform step 2 of the analysis.


3.4.2. qualitative analysis of expert interviews (step 2)we address rq 2 by analysing why the requirements are documented in a certain way. for this, weperform the interviews and use a mixed approach to distill project parameters that relate to the degree ofcompleteness in the artefacts (see step 2 in the data collection procedure of section 3.3). as starting theoryfor project parameters and categories, we employ the components proposed in decision (support) approachesfor re, i.e., the one from aurum and wohlin [37] (see related work in section 2).we document each of the project parameters with its dependency to the content item it has an impacton. we express dependencies of the parameters on content items as either a positive or a negative impact.parameters can have a positive impact and thereby call for the creation of a content item or they can have


10


a negative impact and hamper the creation of the content item. we express the ﬁrst variant as “need foraction” and the second variant as “ability to act”.we ﬁnally remove those parameters that had diﬀerent (contradictory) inﬂuences on the same contentitems over the range of examined projects. this supports the validity of the remaining parameters. theresulting theory is a set of project parameters in several categories. structuring the project parametersaccording to such categories supports the comparison of discovered project parameters with existing studies.


3.4.3. cluster analysis (step 3)after performing the content analyses in all the projects and the interviews with corresponding projectparticipants, we perform a cluster analysis to address rq 3. we analyse the re artefacts of all the projectsfor similarities to identify common patterns. the analysis groups the projects into clusters with similardegrees of completeness in the artefacts. hence, it is probable that the same re execution strategy wasperformed to create the artefacts of projects in one group. we connect artefact patterns with re executionstrategies that cause the patterns.we perform the clustering using the k-means cluster analysis, which minimises the distance of eachproject to the mean, called centre, in its cluster. we encode the three possible verdicts for an artefact onan ordinal scale with 0 = missing, 1 = incompletely speciﬁed and 2 = completely speciﬁed. we experimentwith diﬀerent values for the number of clusters to get a useful grouping for the relation to re executionstrategies. we identify suitable strategies by comparing the completeness of artefacts in the cluster and byanalysing the diﬀerences between them.


3.4.4. statistical testing (step 4)we perform statistical testing of the eﬀort spent in the creation of the re artefacts and in furtherdevelopment tasks to evaluate the artefact patterns identiﬁed in the foregoing cluster analysis. this stepcontains content analysis of the entries in the standard eﬀort accounting system used for each project (seesection 3.2). we group the project-speciﬁc eﬀort data from the account system into three categories:


• eﬀort for requirements engineering (req)• eﬀort for change requests (cr)• eﬀort for other tasks in the software life cycle (swl)since no explicit re phase is assigned in the company-speciﬁc development process model, the cor-responding accounts for analysing the eﬀort data have to be interpreted (see also section 3.2). table 2summarises the accounts and how these accounts are allocated to the three categories used for statisticaltesting.the accounts listed in the table represent a simpliﬁcation of 40 (in total) accounts and tasks. we donot give details of certain accounts if no diﬀerentiation between the three categories has to be made. forinstance, the account integration & test, including tasks for several test phases and bugﬁxing, shows nodetails since all tasks can be allocated to eﬀort spent as part of the overall software life cycle. the accountproject management, on the other hand, does give details on further tasks, like project lead or coordinationsp&d. the details are necessary, because the latter task coordination speciﬁcation & design is of interest.it describes the coordination of the activities in the speciﬁcation and the design phase, in which, e.g., possiblesolutions for speciﬁc requirements are analysed and discussed in team meetings. this task therefore includes,in parts, eﬀort that is to be allocated to the req category.we interpret the documented eﬀort according to the acceptance date of the speciﬁcation document.hence, some accounts include eﬀort spent for either re, change requests or the general software life cycle.we illustrate this interpretation by using three diﬀerent characters: “b” refers to an interpretation of theeﬀort as re eﬀort before acceptance of the corresponding speciﬁcation; “a” refers to eﬀorts that diﬀerin their interpretation after accepting the speciﬁcation; “i” refers to whole accounts in which we make nodiﬀerentiation, such as travel times (belonging to the account cross-cutting) that cannot be clearly allocatedto a concrete phase. the eﬀort documented in the account consultancy, for example, is allocated to the reqcategory if it is documented before the speciﬁcation document has been accepted by the customer. afterthis acceptance, we declare the accounted eﬀort to belong to the software life cycle. similarly, the account


11


table 2: interpretation of accounts.


accountsreqcrswl


speciﬁcatonstudy current situationb–adocumentationb–are-workba–quality assuranceb–a


design––i


realisation––i


integration & test––i


launch & acceptance––i


project managementproject lead––iknowledge management––icoordination speciﬁcation & designb–a


infrastructure management––i


consultancyb–a


change requestsba–


cross-cutting––i


legend:bbefore acceptanceaafter acceptanceiindependent of acceptance


change requests is only interpreted as regular change requests and thereby allocated to the correspondingcategory, if the requirements speciﬁcation has been accepted.unfortunately, we do not have access to any consistently collected size or complexity measures, such asfunction points or lines of code, that could be used to normalise the eﬀort data over all considered projects.therefore, we deﬁne four key measures for the further analysis that are normalised diﬀerently. first, theeﬀort data from the three categories req, cr, and swl are set in relation to the total eﬀort (tot). thisgives comparable data about what fraction of the total eﬀort is spent on re, change requests, and furtheractivities. summing up, we have the three metrics req/tot, cr/tot, and swl/tot.second, we deﬁne a surrogate measure for the eﬃciency of the re execution to be able to analyse if theinvestment in re was beneﬁcial. ideally, re should cover (in the end) all stakeholder needs in correspondingspeciﬁcations. later change requests are signs that the requirements engineers have failed in this and thestakeholders add additional requirements, which is usually more costly than getting it right the ﬁrst time. byspending more eﬀort on re, we expect less change requests. therefore, the relationship between re eﬀortand change request eﬀort needs to be balanced. we can analyse this relationship by plotting cr againstreq. in addition, we deﬁne a fourth measure, cr/req, which expresses how much change request eﬀorthad to be spent per spent re eﬀort. we need this additional measure, because we are not only interestedin the nature of the relationship between cr and req but also in the diﬀerences in this relationship overthe artefact patterns.to answer rq 4, we analyse the diﬀerences in the deﬁned measures for the artefact patterns. we areinterested in whether speciﬁc re execution strategies (reﬂected in the artefact patterns) tend to spend moreeﬀort on re or change requests, and whether this had an inﬂuence on any further eﬀort. moreover, if onepattern tends to be more eﬃcient in terms of our surrogate measure, it would be a candidate for furtherresearch about the reasons for this diﬀerence. if not, we have to assume that the patterns are at the same


12


level of eﬃciency.the analysis is performed by statistical testing of the diﬀerences between the distribution of the measures.depending on the properties of the sample data, we analyse it by parametric or nonparametric tests at aconﬁdence level of 0.05. the null hypotheses we test are the following:


hypothesis 1. there is no diﬀerence between the distributions of req/tot in the patterns.


hypothesis 2. there is no diﬀerence between the distributions of cr/tot in the patterns.


hypothesis 3. there is no diﬀerence between the distributions of swl/tot in the patterns.


hypothesis 4. there is no diﬀerence between the distributions of cr/req in the patterns.


3.5. validity proceduresthe selection of projects from diﬀerent industrial sectors with diﬀerent sizes and diﬀerent project par-ticipants increases the external validity of the results.initial discussions with the study subjects lowerbarriers and ensure the collection of accurate and appropriate data. the neutral artefact model rem servesas a basis for classiﬁcation, and the classiﬁcations as well as parameter categories are reviewed by otherresearchers. we present and discuss the results of the overall analysis during last feedback meetings withall project participants.this clariﬁes open questions and excludes wrong results that could arise fromincomplete documentation or wrong assumptions.


4. results


in this section, we present the results of the study. we order them by (1) the case and subject description,and (2) according to the results for each of the deﬁned research questions.


4.1. case and subject descriptionthe analysed development projects are all custom software development projects within the applicationdomain of business information systems. although they are restricted to this application domain, theyexhibit diﬀerent characteristics. table 3 gives an overview of the analysed projects.


table 3: analysed projects (anonymised).


idindustrial sectorsize


p1 (ﬁnished)financesmallp2 (ﬁnished)financesmallp3 (ﬁnished)financesmallp4 (ongoing)retail salemediump5 (ongoing)contracting authoritymediump6 (ongoing)telecommunicationlargep7 (ongoing)logisticslargep8 (ongoing)logisticslargep9 (ﬁnished)aerospacemediump10 (ongoing)contracting authoritymediump11 (ﬁnished)financemediump12 (ongoing)automotivelarge


for each project, we distinguish between the industrial sectors of the customers and the project size,that for reasons of conﬁdentiality is clustered into 3 categories. we classify the projects with a size of upto 20 person years as small-scale projects, from 20 to 120 person years as medium-scale projects, and above


13


120 person years as large-scale projects. the analysed projects are labelled with numbers and it is alsomentioned whether they are ﬁnished or still ongoing (in terms of further releases or increments). all of theprojects focus on the replacement of legacy systems, on the development of new systems, or on consultancyin which application landscapes are analysed and re-designed. consequently, all projects have in commonat least the deﬁnition of requirements and system speciﬁcation artefacts independently of the followingphases. those artefacts are captured in diﬀerent formats, including ms word, excel and (uml) enterprisearchitect models.regarding the company-wide development process model and the conformance of the projects to it,nearly all projects initially followed a waterfall model as a consequence of multi-staged bidding procedures.the only exception is p4, which followed an iterative and incremental process deﬁnition right from thebeginning as part of a follow-up project with no explicit bidding procedure.the followed development process model is a collection of architecture-driven design methods, which isbased on the integrated architecture framework (iaf) [38]. these methods were employed by all projectsas part of a so-called speciﬁcation discipline according to the company-speciﬁc derivate of the developmentprocess model rational uniﬁed process (rup) [39], but with no explicit assignment of an re phase.


4.2. documented requirements artefacts (rq 1)


for each analysed project, we compare the existence and syntactic completeness of the artefacts proposedby rem to the content of the analysed documents (see also section 3.4). the eﬀort spent for the analysisof the documents varies in dependency to the project size and ranges from approximately 4 hours for small-scale projects to 24 hours for large-scale projects. table 4 on page 15 summarises the results of the contentanalysis.going from top to bottom, the table structures the content items of rem according to the three majorartefacts: business needs, requirements speciﬁcation, and system speciﬁcation.in content items of the re-quirements speciﬁcation, we distinguish between functional aspects and non-functional aspects. the ﬁrst in-cludes, for example, requirements-speciﬁc application scenarios, such as use case models. the non-functionalmodels include, for example, the speciﬁcation of quality requirements, models of the application’s futureenvironment or process constraints regarding the delivery of the application (“release strategy”). withinthe system speciﬁcation we discriminate between the design concepts and test case speciﬁcations.the bottom part of the table highlights traceability aspects, describing the maintained interdependenciesbetween speciﬁc content items.we distinguish between traceability from the contents of the businessneeds to the requirements speciﬁcation and from the requirements to the system speciﬁcations. we do notdiﬀerentiate between forward tracing and backward tracing. in general, we observed that the content itemsof the initial speciﬁcations are documented in diﬀerent degrees of completeness. the closer we come to thesystem speciﬁcation, the more homogeneous and detailed they are speciﬁed. in fact, the content items ofthe system speciﬁcations are nearly all completely speciﬁed.within the business needs, nearly all projects speciﬁed the business objectives of a customer and cor-responding high-level requirements, e.g., the goals (the “customer requirements”). we observe, however,a highly variable handling of the further content items of the business needs. especially the “return ofinvestment (roi) calculations”, and the elaboration of the “value to the customer” was documented verydiﬀerently. we observed the same for the “scope and limitations” which either were completely speciﬁedor missing. the “system success factors”, including the basis for prioritising the requirements, were eitherincomplete or missing.within the requirements speciﬁcation, we also found a diﬀerence in the handling of the functional analysismodels, especially within the “application scenarios”. considering the non-functional analysis models, thesystem environment and the related content items were documented in a high degree of completeness.instead, the rest of the content items, such as the quality requirements or the assumptions, were oftenincomplete.finally, the system speciﬁcations are nearly all completely speciﬁed. only the test case speciﬁcationsare documented very diﬀerently.


14


table 4: completeness of artefacts in the analysed projects.


projectp1p2p3p4p5p6p7p8p9p10p11p12


business needs artefacts


business objectivesh#h#h#   h#h#    customer/market requirements          h# value to the customerh#h#h# h##h##h#   main featuresh#h#h#h#h# h#h#h#h#h# assumptions dependenciesh#h#h#h# h#h#h# #h# scope and limitations   ##h## #   roi calculationh#h#h#h# h#### h#h#business risk analysish#h#h### ### h#h#risk calculation    h# #h#h# h# system success factors###h##h#h#h#h#h##h#


req. speciﬁcation artefacts


functional


application scenariosh#h#h#h# h#h#  h# h#user interface####       h#user classes      h#   h# system interactionh#h#h##h# h# h#h#h#h#


non-functional


release strategy            domain model            environment model          h# system boundariesh#h#h#h#        quality requirementsh#h#h##h#h#h#h#h#h#h#h#assumptions###h#h#h##h#h### sw design constraints     ##h# #h# acceptance criteriah#h#h## h### #h##acceptance test cases#### ### ###


system speciﬁcation artefacts


design concept


release planning            behaviour model            system interaction            service interaction            data model            user interface            communication interfaces            interfaces to service components            architecture constraints            deployment constraints       #    coding standards            


test


functional test criteria   #  h#   h# integration test criteria   #  h#h#  h# design constraints test criteria####  h#h#  h# 


traceabilityneeds to requirements#########   requirements to sys.spec######   h#h#h#


legend: completely speciﬁedh#incompletely speciﬁed#missing


15


4.3. inﬂuencing project parameters (rq 2)


within the semi-structured interviews, we built a theory about the project parameters with an inﬂuenceon the artefact completeness. table 5 on page 17 summarises the categorised project parameters in whichthe interviewees participating in the diﬀerent projects made no contradictory statements.the resulting table is organised according to the documented content items (see also table 4) and on theleft side by the project parameter, since the identiﬁcation of the project parameters was performed accordingto the content items (see also the analysis procedure in section 3.4). we group the parameters into threemajor categories: the category customers’ domain groups parameters that arise from the industrial sectoror from circumstances of a customers’ organisation, such as stakeholder-speciﬁc characteristics. the categorysystem under consideration groups parameters that arise from the envisioned family of systems and othercharacteristics of this kind. the third category cross-cutting process aspects groups further parametersthat restrict the project-speciﬁc application of the development process model.each cell of the table contains the impact of one parameter on one content item as it was stated by theinterviewees. the symbol “+” indicates that the parameter has a positive impact on the content item, i.e.,that the parameter can be taken as one reason for specifying the content item (“need for action”). thesymbol “−” indicates that the parameter has a negative impact on a content item and thereby hampers itsspeciﬁcation (“ability to act”). an empty cell indicates that the interviewees did not report an inﬂuence ofthe respective project parameter on the artefact.we subsequently describe the parameters and their impacts. due to the high variety of the parametersand their impacts, we organise the following description according to the three categories.


customer domain.one observation is that three major circumstances arise from the customer do-main: the industrial sector, the general relationship with the customer and characteristics of the diﬀerentstakeholders.especially whether project participants have weak access to business process information(e.g., for reasons of conﬁdentiality) has an inﬂuence on the ability and the necessity to specify the roicalculations, the value for the customer and the business risk analysis.in particular, many customers do not share enough details about their organisation (e.g., their businessprocesses) for performing such calculations, mostly for reasons of conﬁdentiality. this is especially truewhen elaborating the value of single requirements for the customers. consequently, the prioritisation ofrequirements (expressing the relevance of requirements for customers) can often not be performed. theonly exception are projects that are performed with german governmental authorities. the reason is thatthose customers and related development projects are required to conform to the v-modell xt [24]. thisstandard demands an roi calculation before performing a requirements analysis.the relationship with the customer also has an inﬂuence on the deﬁnition of the scope and the limi-tations, as well as the system success factors. if a customer is well-known, for example from a previousproject, the limitations are left incomplete to improve eﬃciency. similarly, the system success factors have astrong dependency on the knowledge about the customers and their domain. in particular, the less familiarcustomers are (e.g., in the ﬁrst development project for this customer), the higher the probability of deﬁningsystem success factors and also acceptance criteria.further parameters that the interviewees mentioned consider the stakeholders’ characteristics. the avail-ability of the stakeholders (in particular of the future users of a system) strongly inﬂuences the possibilitiesof specifying application scenarios, e.g., via use cases. projects that have no access to the users often doc-ument services (abstract description of system functions) as an abstraction of use cases with no orderedinteraction scenarios. the unavailability also negatively aﬀects the possibility of specifying content itemsthat are directly related to application scenarios; for instance, the user classes (actors), the environmentmodel, or the quality requirements. consequently, this parameter implies the additional calculations ofproject risks.


16


table 5: project parameters in the analysed projects.


business needs artefactsrequirements speciﬁcation artefactssystem speciﬁcation artefactstraceability


functionalnon-functionaldesign concepttest


categoryproject parameter


business objectives


customer requirementsvalue to customer


main features


assumptions and dependcies


scope and limitationsroi calculations


business risk analysisrisk calculations


system success factors


application scenariosuser interface


user classes


system interaction


release strategydomain model


environment model


system boundaries


quality requirements


assumptions


sw design constraints


acceptance criteria


acceptance test cases


release planningbehaviour model


system interactionservice interaction


data model


user interface


communication interfaces


interfaces to service comp.architecture constraints


deployment constraints


coding standards


functional test criteria


integration test criteria


design constr. test criteria


needs to requirements


requirements to sys.spec


customers’ domain


governmental customer+++++


weak access to business processes-+--+--++--


weak relationship with customer++++++++


good relationship with customer--


weak knowledge of customer’s domain+++


unavailability of stakeholders++----+++


weak technical ability of stakeholders+-+


unreliability of stakeholders++-+++


system underconsideration


high degree of user interaction++++++++


high degree of innovation+++++++


emphasis on data ﬂow----++-


emphasis on control ﬂow++++++++


high degree of distribution++++++-+


complex dependencies on external systems+-++


weak knowledge of operative environment+-----


weak knowledge of op. background+--


custom software++


standard software--


cross-cutting process aspects


time-boxing++++


existence external parties++++++


external acceptance tests+++++++


explicit assignment of re+


high amount of requirements+++


long project duration++++


estimations of functional complexity+


weak given documentation+


change mgmt. established++++++


standardised design process++++++++++++


large team-size+++


high team distribution++++


weakly experiences team+-


legend:+= need for action-= ability to act


17


similarly, the technical knowledge of the stakeholders negatively impacts the quality requirements. whenspecifying quality requirements, reference models and reference values are often missing. quality require-ments are thus left on a high level of abstraction. for example, instead of stating speciﬁc security require-ments, customers often refer to security standards, such as the common criteria. this project parameteralso has a strong relation to the assumptions that then often have to be made explicit. missing or incompletequality requirements increase the probability of having to explicitly specify assumptions to compensate forupcoming risks relating to the quality requirements. finally, a similar eﬀect can be observed with regardsto the reliability of stakeholders. the more unreliable the stakeholders and, thus, the higher the probabilityof having moving targets, the higher the probability of specifying weak quality requirements. in addition,this parameter argues for the speciﬁcation of acceptance criteria.


system under consideration.regarding the system under consideration, the expected degree ofuser interaction has a positive inﬂuence on the use of application scenarios and related content items, suchas the data model (in terms of modelling objects being processed as part of an interaction scenario). also, ahigh degree of innovation has a positive eﬀect on the use of application scenarios, since these are documentedif the feasibility of the system is unclear.another parameter with similar eﬀects is the type of system. building a workﬂow management system,for example, has a positive eﬀect on application scenarios. instead, if considering, e.g., database integrationor content management systems with low user interaction, the projects emphasise the speciﬁcation of thedata model rather than application scenarios. the degree of distribution and the degree of dependencies onsurrounding systems also has a positive impact on application scenarios, but hampers the speciﬁcation ofquality requirements (in early stages of development).a further negative impact on quality requirements is given by insuﬃcient knowledge of the operativebackground of the systems. for instance, if the requirements engineers cannot deﬁne how many users willaccess the system simultaneously, the corresponding quality requirements will remain at a high level ofabstraction.finally, projects that target standard software, such as sap components, diﬀer strongly from ones thattarget custom software. this parameter inﬂuences, similar to the availability of stakeholders, the existenceof application scenarios. if the project considers standard software instead of custom software, services arespeciﬁed instead of detailed application scenarios.


cross-cutting process aspects.regarding the characteristics that arise from the developmentprocess, one remarkable inﬂuence is time-boxing, which means the project team faces a hard deadline forthe milestones (maybe at the cost of quality). projects that have agreed on time-boxing have a detailedrelease plan and also specify the linkage between the content items to ensure traceability. a traceabilitymatrix supports the control of the actual degree of realisation of the requirements, especially necessary fortime-boxing, but also gives an overview of the number of requirements in general. time-boxing is seen ingeneral as a risk within projects and hence implies detailed risk calculations. further risks are implied bythe involvement of external parties. if acceptance tests are performed by external parties, projects documenttheir scope and limitations, as done in acceptance criteria and functional test criteria.projects that have a long duration comprehensively specify a data model since they use data models asan ontology within a project, deﬁning the relevant terms within the envisioned domain. similar impacts onthe data model are the team size, the degree of distribution and the experience of the team. besides alsoimpacting the risk calculations, the latter has a negative impact on the quality requirements, since teammembers are not aware of the technical consequences of quality requirements.when performing estimations of functional complexity and eﬀort by the use of, for example, functionpoints, project participants consider application scenarios to be necessary. the application scenarios alsoprovide support in change-intensive projects with unstable requirements.in general, application scenarios are explicitly documented within a requirements speciﬁcation if eithera requirements phase with an acceptance phase of corresponding speciﬁcations is assigned (instead of acontinuous development project), or if a change management process is set up.in the latter case, the


18


customers are often the ones to state functional requirements by the means of use cases.finally, the completeness of the content items of the design concept has its rationale in the standardiseddesign process of the company according to the iaf and rup.


4.4. artefact patterns (rq 3)


regarding the artefact patterns, we identify clusters with similar degrees of completeness in the artefacts.the k-means cluster analysis gives the most useful grouping into three artefact patterns. the euclediandistances from the projects to their cluster centres range from 1 to 3.3 based on the encoding of completenessfrom 0 to 2. a higher number of clusters results in very small clusters that cannot be reasonably interpreted,but have similar distances. table 6 shows the mapping of projects to the artefact patterns, as well as thecluster centres from the k-means cluster analysis for those artefacts that have diﬀering values amongst thesepatterns. the resulting values of the cluster centres are mapped to the range used in rq 1 (see table 4 onpage 15) to express the artefact completeness: completely specifed, incompletely speciﬁed, and missing.


table 6: artefact patterns and corresponding artefacts, for which the completeness diﬀers between patterns.


pattern


solution-oriented


p1–p4


functional-oriented


p5, p9


problem-oriented


p6–p8, p10–p12


business objectivesh#  assumptionsh# h#scope # business riskh##h#risk calculation h#h#system success factors#h#h#application scenariosh# h#user interface#  system boundariesh#  assumptions#h#h#sw design constraints  h#design constraints test criteria#  acceptance criteriah# #acceptance test cases# #tracing: business needs to requirements##h#tracing: requirements to system speciﬁcation#h#h#


the analysis of the three artefact patterns shows diﬀerent tendencies in the artefacts. one cluster hasmore emphasis on the solution description, one on the functional description, and one on the problemdescription. this leads us to the assumption that the artefact patterns are caused by a solution-oriented, afunctional-oriented, and a problem-oriented re execution strategy.


solution orientation.this pattern reﬂects a solution-biased approach and implies a weak descriptionof the content of the business speciﬁcation. the corresponding project parameters show that this patternresults from circumstances that mostly have to do with the customers’ domain, such as the relationshipwith customers and the knowledge of the customer’s domain.the consequences are, for example, thatthe business objectives and the future system environment are incompletely speciﬁed and that the system


19


success factors are missing. also, the projects emphasise risk calculations and the initial scope. anotherconsequence is that the traceability is missing due to the incompleteness of the content that shoud be traced.


functional orientation.the projects within this pattern emphasise the functional analysis modelsof the requirements speciﬁcation, including the application scenarios and the user interfaces. this focus isalso reﬂected in the traceability from the requirements to the system speciﬁcation. this mainly arises fromthe project parameter that considers the establishment of a change management and whether an re phaseis explicitly assigned with direct participation of the customer. a further parameter is the availability ofthe stakeholders. corresponding projects have set up a change management process and end users havebeen able to contribute to the deﬁnition of functional analysis models (like use cases). since the functionaldemands requested by the customers can be linked up with the elements of the system speciﬁcation, thispositively aﬀects the traceability and the acceptance criteria. in contrast to the solution-oriented approach,the business objectives are completely speciﬁed.


problem orientation.the projects in this pattern have, in particular, a profound speciﬁcation ofthe business needs. the strong focus on business needs is also reﬂected in the traceability that includes,in contrast to the functional-oriented pattern, a linkage between the requirements and the business needs.some major reasons for this strategy are project parameters like a high degree of innovation, the relationto customers enabling insights into customers’ organisations and business processes, or whether it was agovernmental customer.


summary.in summary, half of the projects act in a problem-oriented way, while a third act in asolution-oriented way, and a sixth in a functional-oriented way. even if solution orientation is an establishedphenomenon in practice [5], we can depict the strategy with artefact patterns and its relation to projectparameters. for instance, we observe that project parameters resulting from the customer domain have astrong inﬂuence on the choice of a solution-oriented approach. the reason is that the parameters reﬂect thepossibilities of accessing business knowledge, and whether customers can contribute to a clear requirementsanalysis. if customers do not give detailed insights into their organisation and their business processes, itseems that solution orientation is a way to successfully tackle this problem. this is then reﬂected in the lowdegree of completeness in the content items within the business needs speciﬁcation. at the same time, onecan observe an increasing degree of completeness in risk calculations and in the initial scope deﬁnitions.none of the interviewees showed awareness of having made an explicit decision about whether to followsolution orientation or not during the last feedback meeting. this unawareness of possibilities and necessitiesin re may come from the company-speciﬁc development process model and/or underlying solution-biasedarchitecture frameworks. both still do not consider the discipline of re to be an integrated part of softwareengineering. hence, no integrated re approach was available as a guideline in the projects.


4.5. eﬀort impacts (rq 4)


we now analyse the eﬀort spent and the eﬃciency of used re processes over the identiﬁed patterns. dueto conﬁdentiality reasons, we cannot give the exact eﬀort data.figure 2 shows the relative eﬀort for the two categories requirements engineering (req) and changerequests (cr) for each project.we use this data to analyse the relationship between these two eﬀortcategories. it is plotted in figure 3 and shows a slightly negative relationship.the more eﬀort goes into req, the less eﬀort is needed for cr. a correlation analysis shows a pearsoncoeﬃcient of -0.303, but the result is not statistically signiﬁcant at a 5% level (p-value: 0.428). therefore,we have an indication that more eﬀort in re can reduce the later eﬀort for change requests, but we cannotconﬁdently generalise from the data.we have not been able to obtain the necessary data for 3 of the 12 projects. this leaves us with 2functional-oriented projects, 4 problem-oriented projects, and 3 solution-oriented projects. overall req/totis between 9.3% and 23.3%, cr/tot is between 1% and 17%. in addition, table 7 shows the means of theanalysed measures for each project and their totals.


20


req/totcr/tot


9.30%2.40%p5


23.30%1%p9


p11


p1014.30%1%


no data available.


p612.20%4.50%


p811%17%


p7no data available.


p1217.50%8.50%


p1no data available.


p412.90%2.30%


p38.50%11%


p29.90%1%


functionalorientation


problemorientation


solutionorientation


figure 2: bar chart with the relative eﬀort for re (req/tot) and change requests (cr/tot).


req


0.250.200.150.100.05


0.20


0.15


0.10


0.05


0.00


cr


po


po


po


po


so


so


so


fo


fo


figure 3: requirements eﬀort req in relation to change request eﬀort cr (po = problem-oriented, fo = functional-oriented,so = solution-oriented).


21


table 7: arithmetic means of the eﬀort data for each pattern.


req/totswl/totcr/totcr/req


problem-oriented0.1380.7830.0770.608functional oriented0.1630.8230.0140.140solution-oriented0.1400.8480.0470.518


all0.1320.8140.0530.474


to analyse the eﬀort impacts of the patterns, we are interested in the diﬀerences between the eﬀort andeﬃciency data for the patterns. to use parameterised tests to analyse these diﬀerences, we check whetherthe data is distributed normally. we perform the shapiro-wilk test and analyse whether the eﬀort data isdistributed normally at a signiﬁcance level of 0.05. in the test, we exclude the functional-oriented pattern,because only two projects fell into this pattern.the test shows that the eﬀort data is not distributednormally for the chosen signiﬁcance level. this means that we cannot use a t-test to compare the diﬀerencesover the patterns and we have to use a nonparametric test instead.we use these two tests to test the null hypotheses 1–4, which state that there are no diﬀerences in thedistribution. the alternative hypotheses are that there are diﬀerences. the kruskal-wallis test is a suitablestatistical test for this task.


table 8: kruskal-wallis test on diﬀerences in the distribution of the eﬀort data for the patterns.


p-value


req/tot0.425cr/tot0.305swl/tot0.449cr/req0.449


table 8 contains the p-values of the kruskal-wallis test for our data. at a signiﬁcance level of 0.05,there is no support for the alternative hypotheses that there are signiﬁcant diﬀerences between the eﬀortand eﬃciency distribution of the patterns. all null hypotheses (1–4) are supported by the data. the resultsof the test suggest that the data comes from the same population. therefore, no statistically signiﬁcantdiﬀerence between the eﬀort impacts of the patterns is evident.


4.6. evaluation of validity


we subsequently discuss the construct validity, the internal validity and ﬁnally the external validity ofthe study.


construct validity.the major threat to the construct validity of our study is that we analysethe diﬀerent re execution strategies after the fact.we have not observed the study subjects in theiractual execution, but analysed the existing artefacts and interviewed them in retrospect. because of this,our analysis might diﬀer from that of a direct observation. analysing the existing artefacts in the contentanalysis, however, gives at least a basic level of objectiveness. furthermore, missing information was collecteddirectly from participating study subjects to round up the picture. in the content analysis, we also did nottake into account the requirements’ attributes, because they were handled diﬀerently in the projects. wesee this threat, however, as a minor one, because those attributes were mainly management attributes (e.g.,the priority of a requirement or the source).none of the attributes would have aﬀected the degree ofcompleteness in the content items given in our reference model, such as acceptance criteria or measurementsfor quality requirements.


22


another threat is that artefacts are not the only indicator for a speciﬁc re execution strategy. theartefacts themselves contain no information about how they were created. to mitigate this threat, additionalinterviews and feedback meetings were held to add this additional information.for the categorisation of the projects with respect to the artefact patterns, we had to abstract frommany details of each project. every project has its speciﬁcs because of, e.g., its business contexts, or thepeople that work in it, which all can have a substantial inﬂuence. some details had to be left unconsideredfor a more general analysis. we mitigated this threat by considering the projects’ details in the interviewsin which we collected project parameters.similarly, regarding the eﬀort analysis, we did not diﬀerentiate whether a customer domain was new ornot. thus, a certain learning curve in new domains (in contrast to follow-up projects) might have aﬀectedthe eﬀort. we explicitly took this aspect into account, however, as part of the project parameters and,thus, as part of the the corresponding re execution strategies. during the eﬀort analysis, we also had togeneralise some of the eﬀort within the swl group that, in part, would also belong to the req group. forinstance, eﬀort spent for travelling was exclusively allocated to the overall software life cycle. we mitigatedthis threat by analysing the eﬀort equally for all analysed projects.


internal validity.in terms of the internal validity, it is possible that there were more artefactsdeveloped in the projects that we did not analyse but which would have changed the classiﬁcation of theproject. there were, for example, speciﬁc feature lists in some projects that were not available for analysisbecause of conﬁdentiality. a similar threat comes from the interviews, in which the interviewees could notgive us all their information because of conﬁdentiality. we mitigated this in the feedback meetings in whichthe study subjects had the chance to comment on analysis and classiﬁcation.furthermore, it is a threat that a large share of the information is based on the interviews and informationgiven by people that participated in the projects. there is the possibility that the information is biased.we mitigated this threat in the preliminary interviews when we emphasised that the analysis is not anassessment that results in statements about which projects are good and which are bad. this lowered thebarrier to giving us complete and accurate information.the analysis of the content items and their classiﬁcation was done subjectively by us. this holds thethreat that it is not repeatable. to mitigate that threat, we used rem as a reference model, classiﬁed theartefacts during the content analyses by more than one researcher, and discussed the results with studysubjects.another threat is that the project parameters were gathered by discussing the inﬂuences according tothe content items, and in addition, that the project parameters reﬂect circumstances subjectively perceivedby the project participants. hence, the project parameters and the inﬂuences documented in table 5 mightbe incomplete and exclusively reﬂect individual experiences. we did not mitigate the threat completely,since we are explicitly interested in industrial best practice and individual experiences. in addition, ourinterpretation of these experiences as project parameters can be subjective as well. we mitigated this threatby discussing the project parameters in the last feedback meetings with the project participants.finally, further threats are at the stage of the eﬀort analysis. the assignment of eﬀort to the accountsby the project participants can be distorted in two ways.first, many projects were performed beforestandardised account names for the system were introduced in the company.we mitigated this threatby directly asking the study subjects for the corresponding account names and deviations from the actualnaming convention. second, change requests may not have been accounted for politically motivated reasons.change requests that were not billed for whatever reason appear in the account system with negative eﬀort.for instance, if a change request was documented with “10 person days”, it was possible that projectparticipants additionally accounted the same task with “-10 person days”. we mitigated this threat by onlyanalysing positive eﬀort and disregarding negative ones.


external validity.the results of this study can only be generalised to some extent because the majorthreat is that we only analysed a single company. the results may depend to a large extent on company-speciﬁc parameters such as the development project or the corporate culture. moreover, all analysed projects


23


built a certain kind of business information system. hence, it is not clear to what extent the results can betransferred to other categories of systems. these threats are mitigated by analysing projects from diﬀerentindustrial sectors and by including the company-speciﬁc development process model into the investigation.furthermore, the analysed company is large enough to ensure a relatively low overlap between the analysedprojects.


5. conclusions and future work


in the following, we summarise our conclusions and the relation to existing evidence. after discussingthe implications of our contribution, we sum up its limitations, before concluding with an outline of futurework.


5.1. summary of conclusionswe analysed 12 industrial projects regarding their requirements engineering execution strategy. to thisend, we investigated the existence and completeness of re artefacts referring to a generic artefact model, aswell as using interviews to gather further information. the result is an analysis of the produced artefacts,project parameters inﬂuencing the speciﬁcation of these artefacts, and a categorisation of the projects into 3main patterns. we found that half of the projects act in a problem-oriented way, a third act in a functional-oriented way and a sixth in a solution-oriented way. we evaluated each pattern to discover diﬀerences intheir eﬃciency and discovered no statistically signiﬁcant diﬀerence. one may conclude that each patternseems to be an appropriate response to project-speciﬁc parameters with no observable disadvantage.


5.2. relation to existing evidence


in contrast to earlier studies (see section 2), we analysed projects that were successful in terms of havingreleased and deployed software systems to the customer that are used in production. a ﬁnding was thatonly 50% of these successful projects acted in re in a problem-oriented way. first, this manifests the ideathat there still is a tendency to act in a solution-oriented way as it was already observed during the late1970’s [5]. second, we also showed that many project parameters that are considered to be the main reasonfor project failures, arise from the customer domain and often cannot be avoided. we found, however, thatthese parameters can be eﬀectively handled as reﬂected in speciﬁc artefact patterns.the analysis was performed in a process-neutral manner investigating which re artefacts had beenspeciﬁed and which inﬂuencing project parameters were aﬀecting the speciﬁcation of each single artefact.hence, we get a more detailed view of the parameters that builds on existing ones. for instance, the chaosreport states in [28] that 12.4% of project failures are caused by missing user involvement. hull et al. [22]discovered further organisational problems, such as inappropriate skills of project participants. our resultsrelate to those facts in two ways.first, we detailed the parameters with additional ones, like the availability of stakeholders, their technicalability, conﬁdentiality issues or the general relationship with the customers; each having diﬀerent impactson diﬀerent artefacts. further discovered parameters that are not in the scope of current studies are, forexample, the degree of user interaction, the degree of innovation (of the system) or the involvement ofexternal suppliers. second, we showed that parameters like these aﬀect the creation of chosen artefactsand thereby the execution strategy, but they do not necessarily lead to a project’s failure. missing userinvolvement, for example, negatively aﬀects the speciﬁcation of certain content items and relates to thesolution-oriented execution strategy. we achieved a more profound analysis of the produced artefacts andthe underlying project parameters than provided in the study of kamata et al. [20].they exclusivelyinvestigated the relation of selected parts in the ieee software requirements speciﬁcation std. 830-1998 togeneral project failures (with a particular focus on defects like budget and time overrun). also, our data doesnot support their observation of a balance in the depth of speciﬁcations that are produced in the projects(see table 4 on page 15).in addition to the investigated project parameters and their impacts on the artefacts created as part ofspeciﬁc patterns, we found that there is no signiﬁcant diﬀerence between the resulting re execution strategies


24


regarding the spent eﬀort or the eﬃciency in re. in contrast to studies like the aforementioned ones, wediscovered more project parameters and how these can be successfully handled, since the discovered artefactpatterns arise as a direct “successful” response to these parameters with no signiﬁcant losses regarding theireﬃciency (and, thus, project failures).the study by damian et al. [4] on the inﬂuences of improvements in the re process on further devel-opment tasks also came to a diﬀerent conclusion than we did. they analysed via interviews and documentinspections the payoﬀs of a process improvement in the re phase within one project. after improving there process in that particular project, they discovered that the study participants being responsible, e.g., forproject management tasks, perceived fewer ﬁeld defects. although we did not explicitly take into accountthe direct relationship between the re eﬃciency and further development tasks, and we also abstractedfrom variations in the re process deﬁnitions, we still discovered no signiﬁcant diﬀerence in change requests,depending on the completeness of generated re artefacts.based on our data, we thus cannot uphold our initial assumption that front loading eﬀort results in payoﬀsin later stages as motivated by studies like the one by damian et al. [4]. the objectives, the study design,and the methods used in our study, however, also diﬀer from their study. since they analysed one projectin detail gathering a broad spectrum of experiences made by the study participants, they could focus onsoft facts (e.g., team communication) and reason about the diﬀerent impacts of re on further developmentactivities. in contrast, we analysed a broader range of development projects allowing for generalisationsas part of patterns. we covered the “soft facts” of the projects as part of our project parameters and oureﬀort analysis relied not on interviews, but on detailed data comprehensibly persisted in an eﬀort accountingsystem that we could objectively analyse in isolation. therefore, while damian et al. were able to discussthe diﬀerent dependencies between improvements in the re phase and further development activities, wecould objectively show how successful re strategies are related to the chosen artefacts, rather than to theactually performed processes and used methods.


5.3. impact/implications


what can be considered a successful artefact pattern in requirements engineering depends on theparameters that inﬂuence the project. we found in the study that in successful projects these parameters,such as the technical knowledge of stakeholders, lead to diﬀerences in artefacts and ﬁnally artefact patterns.each resulting execution strategy arises as a direct response to a set of project parameters, whereas weshowed that the strategies have no signiﬁcant diﬀerences regarding the eﬃciency in re.since we discovered a detailed set of project parameters, corresponding artefact patterns, and executionstrategies that each can be taken as an appropriate speciﬁc-purpose reaction to individual project situations,we lay the foundation for the future elaboration of tailoring approaches.in such an approach, we can take the discovered project parameters and their positive or negativerelationship to single artefacts as a guideline to


1. systematically reﬂect chosen project characteristics and2. appropriately react by creating the necessary artefacts and, thus, deciding on a suitable re executionstrategyfrom a practitioner’s perspective, our results can be directly taken as a framework to guide in the creationof particular content items in response to project parameters which are known bear a risk of project failure.from a researcher’s perspective, we can complement available approaches in decision (support) systems forre with the project parameters we discovered. in addition, we can complement the activity-centric areaof customisation and situational method engineering – emphasising the selection of methods according toproject parameters – with a notion of syntactic quality in the created results (see also section 5.5).


5.4. limitations


the ﬁeld study has only been performed at one company. if we expand it to other companies, this couldaﬀect the results and consequently the criteria for deriving the artefact patterns. we doubt that the basicﬁndings would change substantially, but we would be able to make more detailed statements about theartefact patterns based on elaborated trends.


25


in addition, all projects have been a success in the sense that they resulted in systems that are now inproduction on the customers’ side. the diﬀerent re execution strategies are not the determinant of projectsuccess, but reﬂect principle ways to tackle project-speciﬁc problems.


5.5. future work


the importance of customisation and decision-making in requirements engineering has been acknowl-edged. there are already valuable approaches for supporting these tasks. aurum and wohlin [8] mapped outdecision-making approaches to the re process to understand decision-making patterns in re activities [40].in contrast to general activity-based customisation approaches [9, 10, 11, 2], we envision an artefact-basedapproach that is able to make use of the execution strategies to customise the eﬀort according to individualproject-speciﬁc parameters.we have proposed such an approach for the application domain of business information systems [41]. inthis approach, we couple project parameters, as found in this ﬁeld study, to selected artefacts so as to guidethe systematic reﬂection on project characteristics, and the decision about an appropriate re execution,respecting the necessary and possible degree of completeness in the artefacts. in [42], we investigated theapplication of this approach in a case study and showed an overall improvement in the re process withrespect to the re process previously used in the same industrial context.while these are only ﬁrst steps, they strengthen our conﬁdence in the suitability of the identiﬁed patternsand parameters. a further necessary step, however, consists of the extension of the found project parameterswith the purpose of establishing of a comprehensive project repository, facilitating the application in real-life projects. furthermore, our work can also be the foundation for developing new software requirements(process) patterns [43]. the focus of this study was not to bring the results in a form that they can bedirectly used as requirements patterns. for that, we need to document them in an appropriate templateand evaluate them in diﬀerent contexts.


acknowledgement


we acknowledge the eﬀort of all the employees of capgemini technology service deutschland who par-discussions and helpful remarks on previous versions of this paper.

