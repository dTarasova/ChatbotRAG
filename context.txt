Query: How do I write a good requirement statement?
Context: 5. singularity: it should define only one characteristic or constraint.
6. feasibility: each requirement should be achievable within the constraints of the project.
7. verifiability: it should be possible to verify that a requirement has been met.
8. correctness: it should accurately reflect the need of stakeholder.
9. conformity: each written requirement should follow the predefined structure.
Source: software4kmu learning nuggets.pdf

Context: and requires some practice to be effective. in essence, while structured language requirements maybe be a bit cumbersome to write 
down and read (often resembling the user-friendly charme of an instruction manual to a tax declaration form), they offer the benefit of 
clear structure and some basic quality criteria that make them easier to interpret (implement, and test).
example
Source: software4kmu learning nuggets.pdf

Context: mitigation actions for incomplete/hidden requirements 
improve the documentation and conduct more meetings with the developers to detect analysis defects. 
hire or specialize a requirements analyst. 
creating templates. 
creation of a dor (definition of readiness) for the team. 
invest more time in requirements specification, using scenarios and prototypes to gather requirements
Source: Preventing Incomplete Hidden Requirements Reflections on Survey Data from Austria and Brazil.pdf

Context: user stories.
with regards to whether a requirements engineering standard is mandatory or practised (see
proposition p 26 stating that requirements engineering standards are neither practised nor
mandatory is not supported by the data. quite to the contrary, it seems that the standards are
practised in most organisations regardless whether they are mandatory or not. the two answers
Source: Status Quo in Requirements Engineering A Theory and a Global Family of Surveys.pdf

Context: draft  
title
what makes a good requirement?
was macht eine gute anforderung aus?
tags
requirements quality
anforderungsqualität
estimated duration
10 min
level
external ressources
international standards for systems and software 
engineering
requirements engineering quick check
requirements smells
dependencies
next item
id 1.1.1.9 - form of requirements  
goals (teaching 
perspective)
Source: software4kmu learning nuggets.pdf

Query: How do I write a good requirement statement?
Context: To write a good requirement statement, consider the following summarized insights derived from the DataFrame:

1. **Documentation Granularity**: The most common approach is to document high-level requirements at the beginning of the project and refine them as needed. This suggests that clarity and adaptability in documentation are crucial.

2. **Goals**: The majority of responses indicate a focus on achieving specific goals, with a notable number of projects aiming for clear and measurable objectives.

3. **Quality Properties**: There is a strong emphasis on ensuring quality properties, with a significant portion of the data indicating that quality is a priority in requirement statements.

4. **Stakeholders**: Engaging stakeholders effectively is essential, as their input can significantly influence the quality and relevance of the requirements.

5. **System Behavior**: Clearly defining the expected behavior of the system is vital for ensuring that requirements are understood and met.

6. **User Interfaces**: Consideration of user interfaces in requirement statements is important, as it directly impacts usability and user satisfaction.

7. **Requirements Elicitation Methods**: Various methods such as interviews and workshops are commonly used to gather requirements, indicating the importance of diverse approaches to elicitation.

8. **Satisfaction with Requirements Engineering**: A significant number of respondents express satisfaction with their requirements engineering processes, suggesting that effective practices are in place.

9. **Statistical Insights**: The data shows that a majority of projects utilize structured approaches to requirements documentation, with a mean satisfaction level indicating a generally positive experience.

10. **Adaptability**: The ability to adapt requirements based on stakeholder feedback and project evolution is highlighted as a key factor in successful requirements management.

In summary, a good requirement statement should be clear, adaptable, and focused on quality, stakeholder engagement, and user needs, while utilizing effective documentation practices and elicitation methods.
Source: napire data

Query: how do i write a good requirement statement?
Context: draft  
title
what makes a good requirement?
was macht eine gute anforderung aus?
tags
requirements quality
anforderungsqualität
estimated duration
10 min
level
external ressources
international standards for systems and software 
engineering
requirements engineering quick check
requirements smells
dependencies
next item
id 1.1.1.9 - form of requirements  
goals (teaching 
perspective)
Source: software4kmu learning nuggets.pdf

Context: syntactic minimality
there are no unnecessary syntactic elements in the speciﬁcations.
modularity
the speciﬁcation is organised in modules, separated according to certain topics.
traceability
each requirement has a rationale.
ease of perception
the speciﬁcations are well-suited to be understood by people not involved into the process.
rq 3
unambiguity
the requirements are stated unambiguously.
Source: A Case Study on the Application of an Artefact-Based Requirements Engineering Approach.pdf

Context: and requires some practice to be effective. in essence, while structured language requirements maybe be a bit cumbersome to write 
down and read (often resembling the user-friendly charme of an instruction manual to a tax declaration form), they offer the benefit of 
clear structure and some basic quality criteria that make them easier to interpret (implement, and test).
example
Source: software4kmu learning nuggets.pdf

Context: 5. singularity: it should define only one characteristic or constraint.
6. feasibility: each requirement should be achievable within the constraints of the project.
7. verifiability: it should be possible to verify that a requirement has been met.
8. correctness: it should accurately reflect the need of stakeholder.
9. conformity: each written requirement should follow the predefined structure.
Source: software4kmu learning nuggets.pdf

Context: effective requirements accurately capture stakeholder needs, adhere to international standards, and are clear, unambiguous and 
feasible within the project constraints, ensuring successful software development. 
a comprehensive set of requirements should be complete, consistent and feasible. 
[englisch] key takeaway
german
Source: software4kmu learning nuggets.pdf

Query: how do i write a good requirement statement?
Context: To write a good requirement statement, consider the following summarized insights based on the relevant columns from the DataFrame:

1. **Compatibility**: Ensure that the requirements support co-existence and interoperability, as this is highly important for development. Aim for a balance where compatibility is rated positively.

2. **Maintainability**: Focus on aspects such as analysability, modularity, modifiability, reusability, and testability. A good requirement should facilitate easy maintenance and updates.

3. **Performance Efficiency**: Requirements should address time behavior, resource utilization, and capacity. Clearly define performance expectations to ensure the system meets user needs.

4. **Portability**: Consider adaptability, installability, and replaceability. Requirements should allow the system to be easily moved or adapted to different environments.

5. **Reliability**: Include aspects like availability, fault tolerance, maturity, and recoverability. A strong requirement statement should ensure that the system is dependable and can recover from failures.

6. **Security**: Address accountability, authenticity, confidentiality, integrity, and non-repudiation. Security requirements are crucial to protect sensitive information and maintain trust.

7. **Usability**: Focus on accessibility, appropriateness, recognizability, learnability, operability, user error protection, and user interface aesthetics. Requirements should ensure that the system is user-friendly.

8. **Documentation Granularity**: Specify the level of detail required in documentation. Clear documentation helps in understanding and implementing requirements effectively.

9. **Satisfaction with Requirements Engineering**: Regularly assess how satisfied stakeholders are with the requirements engineering process. This feedback can guide improvements in requirement statements.

10. **Reasons for Satisfaction**: Understand the reasons behind satisfaction in requirements engineering. This can provide insights into what aspects of the requirements are working well and should be emphasized in future statements.

By incorporating these elements into your requirement statements, you can enhance clarity, ensure stakeholder alignment, and improve the overall quality of the requirements.
Source: napire data

Query: What is the level of detail for a requirement that I must provide as a business analyst?
Context: 1. the business analyst has the responsibility for the context speciﬁcation
and is expected to have the necessary domain knowledge, e.g. regarding
the business processes, typical stakeholders, or constraints and rules.
2. the requirements engineer has the responsibility for the requirements
speciﬁcation and serves also as a mediator between the business analyst
and the system architect.
Source: Artefact-based Requirements Engineering The AMDiRE Approach.pdf

Context: coverage of abstraction levels. requirements at different levels of detail, ranging 
from business goals to fine-grained technical requirements (e.g. concerning the system 
hardware), need to be included in the requirements document. high-level requirements 
provide a justification for detailed requirements and support the understandability of
Source: A Meta Model for Artefact-Orientation Fundamentals and Lessons Learned in Requirements Engineering.pdf

Context: content items within the business needs speciﬁcation. at
the same time, one can observe a high rising intensity of
risk calculations and of the initial scope.
furthermore, none of the interviewees showed during
the last feedback meeting awareness of having made an
field study on requirements engineering artefacts and patterns
explicit decision on whether to follow solution orientation
Source: Field Study on Requirements Engineering Artefacts and Patterns.pdf

Context: system privacy 
system portability 
others 
percentage of answers 
figure 8: critical non-functional requirements of ml- 
enabled systems (n = 71) 
requirements with data (p = 53.556 [53.197, 53.915]), resolving 
conflicts (p = 42.346 [41.987, 42.706]), managing changing re- 
quirements (p = 40.915 [40.574, 41.257]), selecting metrics (p = 
[26.418, 27.021]). 
customer  expectactions
Source: Industrial Practices of Requirements Engineering for ML-Enabled Systems in Brazil.pdf

Context: mitigation actions for incomplete/hidden requirements 
improve the documentation and conduct more meetings with the developers to detect analysis defects. 
hire or specialize a requirements analyst. 
creating templates. 
creation of a dor (definition of readiness) for the team. 
invest more time in requirements specification, using scenarios and prototypes to gather requirements
Source: Preventing Incomplete Hidden Requirements Reflections on Survey Data from Austria and Brazil.pdf

Query: What is the level of detail for a requirement that I must provide as a business analyst?
Context: The level of detail for requirements that a business analyst must provide can be summarized based on the following insights from the DataFrame:

1. **Requirements Elicitation with Interviews**: 69.47%
2. **Requirements Elicitation with Analysis of Existing Documents**: 59.84%
3. **Requirements Elicitation with Prototyping**: 48.16%
4. **Requirements Elicitation with Workshops and Focus Groups**: 56.76%
5. **Requirements Elicitation with Reuse Databases and Guidelines**: 17.42%
6. **Requirements Elicitation with Design Thinking / Lean Startup**: 19.88%
7. **Requirements Elicitation with External Experts**: 17.21%
8. **Requirements Elicitation with Observations**: 35.04%
9. **We Elicit and/or Refine Requirements in Several Iterations**: 69.88%
10. **We Elicit and/or Refine Requirements in a Specifically Dedicated Project Phase**: 30.74%

These percentages indicate the extent to which various methods of requirements elicitation are utilized, reflecting the level of detail that should be provided in requirements documentation.
Source: napire data

Query: what is the level of detail for a requirement that i must provide as a business analyst?
Context: 1. the business analyst has the responsibility for the context speciﬁcation
and is expected to have the necessary domain knowledge, e.g. regarding
the business processes, typical stakeholders, or constraints and rules.
2. the requirements engineer has the responsibility for the requirements
speciﬁcation and serves also as a mediator between the business analyst
and the system architect.
Source: Artefact-based Requirements Engineering The AMDiRE Approach.pdf

Context: coverage of abstraction levels. requirements at different levels of detail, ranging 
from business goals to fine-grained technical requirements (e.g. concerning the system 
hardware), need to be included in the requirements document. high-level requirements 
provide a justification for detailed requirements and support the understandability of
Source: A Meta Model for Artefact-Orientation Fundamentals and Lessons Learned in Requirements Engineering.pdf

Context: the
possibilities
of
accessing
business
knowledge
and whether customers can contribute to a clear
requirements analysis. once, a customer does not give
detailed insights into his organisation and his business
processes, solution orientation can be chosen as a way
to successfully tackle this problem. this circumstance is
then mainly reﬂected by the low degree of intensity of the
Source: Field Study on Requirements Engineering Artefacts and Patterns.pdf

Context: organisational level (artefact-based re reference model)
artefact model
structure
content
role model
process model
project level
create requirements specification
business information systems‘ analysis
change management
(out of scope)
system vision 
accepted
requirements specification
completed
customise to project environment
engineering activity
management activity
milestone
legend
Source: Artefact-based Requirements Engineering The AMDiRE Approach.pdf

Context: (e.g. usability-, performance-, or security-related requirements)
8. iteratively develop the system specification. in analogy to the 
constant back and forth between the problem space and the 
solution space introduced here, the elaboration and analysis of 
requirements is an iterative process (regardless of the chosen 
process model). in consequence, we may often go back to step
Source: software4kmu learning nuggets.pdf

Query: what is the level of detail for a requirement that i must provide as a business analyst?
Context: As a business analyst, the level of detail for requirements you must provide can be summarized as follows:

1. **Who is Responsible for Requirements Elicitation**: The most common role identified is the Business Analyst, indicating that they typically take the lead in this area.

2. **Documentation Granularity**: The predominant approach is to document high-level requirements at the beginning of the project and refine them as needed. This suggests a flexible approach to documentation, allowing for adjustments as the project evolves.

3. **Elicitation Methods**:
   - **Interviews**: This method is utilized, but the specific frequency is not quantified in the summary.
   - **Analysis of Existing Documents**: This method is also employed, indicating a reliance on existing materials to inform requirements.
   - **Prototyping**: This method is used, suggesting that visual representations are part of the requirements gathering process.
   - **Workshops and Focus Groups**: These are utilized, indicating collaborative efforts in eliciting requirements.
   - **Reuse Databases and Guidelines**: This method is less frequently employed, with about 17% of respondents indicating its use.
   - **External Experts**: Similar to the reuse method, this approach is also used by about 17% of respondents.

Overall, the analysis suggests that a business analyst should provide high-level requirements initially, with a focus on iterative refinement and the use of various elicitation techniques to ensure comprehensive and clear requirements documentation.
Source: napire data

Query: Do all stakeholders need to review the requirements?
Context: and completeness: first, discussing each quality factor and its
impacts on activities was seen as a validation of the company
guidelines. they considered re-evaluating guideline rules that
do not have a broad impact on the development process.
also, rules that have positive as well as negative impacts
should be debated within the company again, especially if
Source: It's the Activities, Stupid! A New Perspective on RE Quality.pdf

Context: 3) external reviewer: in order to achieve an unbiased assess-
ment of the produced speciﬁcations an external reviewer
(not involved in the actual process) will be called in.
c. data collection procedures
the collection of the data for the case study comprises the
participation of the researchers in the re process as well as
a concluding assessment of the performed process by internal
Source: A Case Study on the Application of an Artefact-Based Requirements Engineering Approach.pdf

Context: interested in the quality of the software system, while product 
managers also care about sustainability of the business model and 
balancing costs and quality of the product. 
in any case, capturing the stakeholders explicitly is important as 
they are the source for various information with respect to the 
operational context of a system and requirements (e.g. end users
Source: software4kmu learning nuggets.pdf

Context: corrective procedures [34,35].
such complications can be minimised by periodic evaluation and
feedback processes. stakeholders can evaluate the ba regarding the
trust aspects through a questionnaire, for example. in addition, the cre-
ation of ways to receive and implement feedback can avoid reliability
issues and prevent the need for accountability due to outdated or wrong
content.
Source: An investigation of causes and effects of trust in Boundary Artefacts.pdf

Context: our study is to extend this original work with consideration of a whole dcs development
and quality assurance processes, identifying involved stakeholders, their activities, decisions
they have to make, and respective artefacts they elaborate along the process. further, we
aim at finding out how the re process is influenced by the found assets as well as challenges
Source: Towards Artefact-based Requirements Engineering for Data-Centric Systems.pdf

Query: Do all stakeholders need to review the requirements?
Context: Based on the analysis of the DataFrame, the following relevant information regarding stakeholder involvement in reviewing requirements has been summarized:

1. **Who is Responsible for Requirements Elicitation**: Various roles are involved, including Business Analyst, Customer, Product Manager, and Project Lead, indicating a diverse set of stakeholders.

2. **Stakeholders**: The data indicates binary values (0 and 1), suggesting that stakeholders are either involved or not involved in the requirements process.

3. **Documentation Granularity**: Responses vary from documenting high-level requirements initially to detailing them at the project's start, showing different approaches to documentation.

4. **Elicitation Iterations**: There are instances where requirements are refined in several iterations (indicated by a value of 1), suggesting ongoing stakeholder engagement.

5. **Dedicated Project Phase for Elicitation**: Some projects have a specifically dedicated phase for eliciting requirements, indicating structured stakeholder involvement.

6. **Self-Elicitation**: There are cases where teams do not elicit requirements themselves, which may imply reliance on stakeholders for this process.

7. **Interviews for Elicitation**: Some teams utilize interviews as a method for requirements elicitation, which typically involves stakeholders directly.

8. **Workshops and Focus Groups**: The use of workshops and focus groups for elicitation indicates collaborative stakeholder engagement.

9. **External Experts**: Involvement of external experts in the requirements elicitation process suggests that stakeholders may include outside parties for additional insights.

In conclusion, the data indicates that stakeholder involvement in reviewing requirements is essential, as various roles are responsible for eliciting and refining requirements through different methods. Therefore, it can be inferred that all stakeholders should indeed be involved in reviewing the requirements to ensure comprehensive understanding and agreement.
Source: napire data

Query: do all stakeholders need to review the requirements?
Context: never be able to formally verify that the requirements are complet. it's therefore vital to take a pragmatic perspective here and ensure 
that each stakeholder agrees at least on the wording and essence of a requirement to ensure that it is consistent with all specified 
characteristics.
let us look at the above properties in a concrete example and refine a bad requirement together.
Source: software4kmu learning nuggets.pdf

Context: vii. evaluation with industry representatives 
the evaluation with industry representatives was 
conducted with three professionals of the fraunhofer project 
center (fpc) at ufba enrolled in a large-scale project, 
called rescuer (reliable and smart crowdsourcing 
solution for emergency and crisis management), in which 
high-quality re plays a crucial role.
Source: Supporting Defect Causal Analysis in Practice with Cross-Company Data on Causes of Requirements Engineering Problems.pdf

Context: potential processes and use cases) for which corresponding
stakeholders are available. this way, the approach can be
conducted entirely including the creation of the business and
the requirements speciﬁcation. we deﬁne three main groups
of participants as study subjects:
1) industry participants: experts from industry responsible
proceedings of ease 2011
Source: A Case Study on the Application of an Artefact-Based Requirements Engineering Approach.pdf

Context: and completeness: first, discussing each quality factor and its
impacts on activities was seen as a validation of the company
guidelines. they considered re-evaluating guideline rules that
do not have a broad impact on the development process.
also, rules that have positive as well as negative impacts
should be debated within the company again, especially if
Source: It's the Activities, Stupid! A New Perspective on RE Quality.pdf

Context: ments artifacts, however, need to involve all relevant
stakeholders [65], who must manually read and un-
derstand each requirements artifact. moreover, they
are diﬃcult to perform. they require a high domain
knowledge and expertise from the reviewers [65] and
the quality of their outcome depends on the quality of
the reviewer [75]. on top of all this, reviewers could
Source: Rapid quality assurance with Requirements Smells.pdf

Query: do all stakeholders need to review the requirements?
Context: To determine if all stakeholders need to review the requirements, we can summarize the relevant information from the DataFrame regarding stakeholder involvement and documentation practices:

1. **Who is Responsible for Requirements Elicitation**: Various roles are involved, including Project Lead, Business Analyst, Customer, Product Owner, and others. This indicates a diverse set of stakeholders.

2. **Testers' Participation**: There are responses indicating whether testers participate in requirements reviews to align testing with requirements. This suggests that at least some stakeholders are involved in the review process.

3. **Verification and Validation**: The responses indicate whether the team verifies or validates their requirements. If they do not, it may imply a lack of thorough review by stakeholders.

4. **Elicitation of Requirements**: The responses show whether the team elicits requirements themselves or relies on others. If they do not elicit requirements, it may affect stakeholder involvement.

5. **Documentation Granularity**: The level of documentation varies, with some teams documenting high-level requirements and refining them later, while others may not document at all. This can impact how stakeholders engage with the requirements.

### Summary of Findings:
- There is a variety of stakeholders involved in requirements elicitation.
- Testers' participation in reviews suggests some level of stakeholder engagement.
- The lack of verification or validation by some teams may indicate that not all stakeholders are reviewing requirements thoroughly.
- The documentation practices vary, which can influence stakeholder involvement in the review process.

### Conclusion:
While not all stakeholders may be required to review the requirements, it is beneficial for a diverse group of stakeholders to be involved in the review process to ensure comprehensive understanding and validation of the requirements.
Source: napire data

Query: How much time do I need to spend for RE?
Context: ful and relevant in their work. 
in order to better understand the relevance of the topics included in the ireb fl 
syllabus, we have designed a study with three different goals: (1) how useful practition-
ers consider its content for their daily work, (2) how relevant they perceive it for their 
personal knowledge and interest, and (3) what do they miss. this paper reports on a
Source: Investigating the Practical Relevance of Requirements Engineering.pdf

Context: standing and requirements stage is clearly perceived as the most relevant and 
most complex life cycle stage. 
< 1 
year 
9+ 
years 
1 - 2 
years 
3 - 4 
years 
7 - 8 
years 
5 - 6 
years 
countries 
alves et al. 
extremely relevant 
high relevance 
neutral 
low relevance 
not relevant at all 
i don't know 
very complex 
complex 
neutral 
easy 
very easy 
i don't know 
problem understanding
Source: Status Quo and Problems of Requirements Engineering for Machine Learning Results from an International Survey.pdf

Context: one researcher in each (average session time was 1 hour).
d. threats to validity
one important threat to validity emerges from the inter-
disciplinary context where legal experts might, for example,
have introduced bias. we have mitigated this threat in various
ways. we based the discussions of focus groups on existing
literature. we also considered concrete cases of regulatory re
Source: On Developing an Artifact-based Approach to Regulatory Requirements Engineering.pdf

Context: comprehension on its industry readiness and objectively 
measuring effort and obtained benefits. the average 
application effort was reasonably low (15.5 hours) when 
compared to the obtained benefits (reducing defect rates by 
46 percent for requirements and 50 percent for designs). 
while the defect rate results were similar to those mentioned
Source: Supporting Defect Causal Analysis in Practice with Cross-Company Data on Causes of Requirements Engineering Problems.pdf

Context: relation to our theory.
5.1. study population
we registered 73 participants (out of the 105 invited ones) who did not, however, complete the full
questionnaire. to get a consistent result set, we took 58 completed questionnaires into our result set. this
gives us a response rate of 55 %. the average time to complete the questionnaire was 28 minutes. this is
Source: Naming the Pain in Requirements Engineering A Design for a Global Family of Surveys and First Results from Germany.pdf

Query: How much time do I need to spend for RE?
Context: Sorry, the DataFrame doesn’t provide enough information.
Source: napire data

Query: how much time do i need to spend for re?
Context: on an ordinal scale—i.e., the sign of the interval is important
(more minutes of duration is bad, less minutes of duration is
good). for example, if the dependent variable of an experiment
investigating the activity of estimating effort is the estimated
amount of hours [30], then this data point(i.e., pair of activity
and attribute) was excluded as a higher or lower value of that
Source: Measuring the Fitness-for-Purpose of Requirements An initial Model of Activities and Attributes.pdf

Context: 20 min
level
external ressources
ressource 1
ressource 2
ressource 1
ressource 2
dependencies
id 1.1.2.1 overview of core activites
next item
id 1.1.2.2 - requirements elicitation
goals (teaching 
perspective)
understand the requirements analysis phases
understand the core activities inside requirements analysis
see examples of output from the core activities
content description 
(teaching
Source: software4kmu learning nuggets.pdf

Context: activities in terms of their attributes and summarizing the
total benefit or drawback, a holistic decision on the benefit
or harm of any treatment can be made. while we certainly
do not suggest that any comparative study from here on
out must necessarily consider all 24 activities simultaneously,
the model of requirements-affected activities provides at least
Source: Measuring the Fitness-for-Purpose of Requirements An initial Model of Activities and Attributes.pdf

Context: one researcher in each (average session time was 1 hour).
d. threats to validity
one important threat to validity emerges from the inter-
disciplinary context where legal experts might, for example,
have introduced bias. we have mitigated this threat in various
ways. we based the discussions of focus groups on existing
literature. we also considered concrete cases of regulatory re
Source: On Developing an Artifact-based Approach to Regulatory Requirements Engineering.pdf

Context: time boxing / not enough time in general 
21.42% 
7.14% 
* the probabilities were calculated based on the overall amount of 14 participants. 
table 12.  most critical re problems in brazil. 
# 
re problems and issues 
cited* 
ranked #1* 
no 
% 
no 
% 
communication flaws between the project team and 
the customer 
43.24% 
12.16% 
incomplete and/or hidden requirements 
41.89% 
16.22%
Source: Preventing Incomplete Hidden Requirements Reflections on Survey Data from Austria and Brazil.pdf

Query: how much time do i need to spend for re?
Context: Sorry, the DataFrame doesn’t provide enough information.
Source: napire data

Query: How to perform elicitation?
Context: ….​
examples:
interview
questionnaire​
creativity techniques: 
document-based techniques: 
supporting techniques: 
important: the choice of technique depends on the source​
the table below presents a more detailed overview of elicitation techniques, their requirements sources, and other supplementary information.
examples:
field observation
apprenticing
contextual inquiry​
examples:
brainstorming
Source: software4kmu learning nuggets.pdf

Context: analysis procedure to get the answer to the research questions.  
we executed three steps to collect the data necessary for 
answering our research questions. first, we collected the 
number of real defects found. based on this data it is possible 
to evaluate the performance of the treatments in terms of 
effectiveness. this metric is used to partially answer rq1.
Source: An Approach for Reviewing Security-Related Aspects in Agile Requirements Specifications of Web Applications.pdf

Context: first run, however, showed that other elicitation techniques are also widely in use [42]. therefore,
we widened the choice of elicitation techniques as shown in table 9. to make it consistent with
common terminology, we adopted the elicitation techniques as described in the swebok [7]. table 9
also notes whether the corresponding proposition was supported in the first run or if it is a new
Source: Status Quo in Requirements Engineering A Theory and a Global Family of Surveys.pdf

Context: 3. conduct structured elicitation by applying elicitation (and creativity) techniques​
 such as interviews, questionnaires… (more on techniques below)
4. document requirements, for example with the help of checklists and templates (e.g. volere or self-made)​
5. structure and transfer to models in order to provide a more structured representation: what belongs where?​
Source: software4kmu learning nuggets.pdf

Context: are still not niche techniques.
comparing the confidence intervals, we can also generalise that interviews, facilitated meetings
and prototyping are the three top techniques. their intervals overlap so that we cannot distinguish
them in general. they are, however, significantly more used than scenarios and observations which
again overlap.
Source: Status Quo in Requirements Engineering A Theory and a Global Family of Surveys.pdf

Query: How to perform elicitation?
Context: To perform requirements elicitation effectively, the following methods have been identified based on their prevalence in the data:

1. **Elicit and/or Refine Requirements in Several Iterations**: 69.9%
2. **Requirements Elicitation with Interviews**: 69.5%
3. **Requirements Elicitation with Analysis of Existing Documents**: 59.8%
4. **Requirements Elicitation with Workshops and Focus Groups**: 56.8%
5. **Requirements Elicitation with Prototyping**: 48.2%
6. **Requirements Elicitation with Observations**: 35.0%
7. **Requirements Elicitation with Design Thinking / Lean Startup**: 19.9%
8. **Requirements Elicitation with Risk Analyses**: 19.7%
9. **Requirements Elicitation with Reuse Databases and Guidelines**: 17.4%
10. **Requirements Elicitation with External Experts**: 17.2%

These methods highlight the importance of iterative processes, direct engagement with stakeholders through interviews and workshops, and the use of existing documentation and prototyping to gather and refine requirements.
Source: napire data

Query: how to perform elicitation?
Context: ….​
examples:
interview
questionnaire​
creativity techniques: 
document-based techniques: 
supporting techniques: 
important: the choice of technique depends on the source​
the table below presents a more detailed overview of elicitation techniques, their requirements sources, and other supplementary information.
examples:
field observation
apprenticing
contextual inquiry​
examples:
brainstorming
Source: software4kmu learning nuggets.pdf

Context: analysis procedure to get the answer to the research questions.  
we executed three steps to collect the data necessary for 
answering our research questions. first, we collected the 
number of real defects found. based on this data it is possible 
to evaluate the performance of the treatments in terms of 
effectiveness. this metric is used to partially answer rq1.
Source: An Approach for Reviewing Security-Related Aspects in Agile Requirements Specifications of Web Applications.pdf

Context: first run, however, showed that other elicitation techniques are also widely in use [42]. therefore,
we widened the choice of elicitation techniques as shown in table 9. to make it consistent with
common terminology, we adopted the elicitation techniques as described in the swebok [7]. table 9
also notes whether the corresponding proposition was supported in the first run or if it is a new
Source: Status Quo in Requirements Engineering A Theory and a Global Family of Surveys.pdf

Context: 3. conduct structured elicitation by applying elicitation (and creativity) techniques​
 such as interviews, questionnaires… (more on techniques below)
4. document requirements, for example with the help of checklists and templates (e.g. volere or self-made)​
5. structure and transfer to models in order to provide a more structured representation: what belongs where?​
Source: software4kmu learning nuggets.pdf

Context: are still not niche techniques.
comparing the confidence intervals, we can also generalise that interviews, facilitated meetings
and prototyping are the three top techniques. their intervals overlap so that we cannot distinguish
them in general. they are, however, significantly more used than scenarios and observations which
again overlap.
Source: Status Quo in Requirements Engineering A Theory and a Global Family of Surveys.pdf

Query: how to perform elicitation?
Context: To perform requirements elicitation effectively, the following methods can be utilized based on their average usage in the provided DataFrame:

1. **Elicit and/or Refine Requirements in Several Iterations**: 69.9%
2. **Requirements Elicitation with Interviews**: 69.5%
3. **Requirements Elicitation with Analysis of Existing Documents**: 59.8%
4. **Requirements Elicitation with Workshops and Focus Groups**: 56.8%
5. **Requirements Elicitation with Prototyping**: 48.2%
6. **Requirements Elicitation with Observations**: 35.0%
7. **Requirements Elicitation with Design Thinking / Lean Startup**: 19.9%
8. **Requirements Elicitation with Risk Analyses**: 19.7%
9. **Requirements Elicitation with Reuse Databases and Guidelines**: 17.4%
10. **Requirements Elicitation with External Experts**: 17.2%

These methods highlight the various approaches that can be employed to gather and refine requirements effectively.
Source: napire data

Query: How to prioritize all requirements my team proposed in order to deliver the most value quicker?
Context: viable and suﬃciently justiﬁed, the requirement candidates are prioritized in
a project prioritization state (similar to backlog prioritization), called m1. fi-
nally, the prioritized requirements are hand-shaken with the developer teams
in a state called m2 [18]. when a requirement is unclear at the m2 state, it
is pushed back to m1 for re-prioritization. similarly, a requirement is pushed
Source: Causality in Requirements Artifacts Prevalence, Detection, and Impact.pdf

Context: be done." by focusing on the problem first and identifying solutions second, organizations can ensure that they meet the requirements 
of stakeholders, consider all project limitations and scope, and choose the best possible solution. this approach helps to streamline the 
process and achieve the desired outcomes more efficiently.
types and forms of requirements
Source: software4kmu learning nuggets.pdf

Context: tive programming environments that can be used to process data and create ml 
models, appear as the most used tool for documenting requirements. again, this 
requirements overthinking (0.38%) 
project (0.38%) 
domain complexity (0.38%) strategic alignments (0.38%) 
solution uniqueness (0.38%) 
method (0.38%) 
difficulties in value creation (0.38%) 
define priorities (0.38%)
Source: Status Quo and Problems of Requirements Engineering for Machine Learning Results from an International Survey.pdf

Context: the structuring of requirement candidates helps handling overlaping requirements and duplicates between requirements effectively, and, on the other hand, it helps building a hierarchy of goals to 
visualize their interdependencies facilitating conflict resolution, constraint detection and resource sharing. a more detailed explanation of goals is given in later learning nuggets.
Source: software4kmu learning nuggets.pdf

Context: define priorities (0.38%) 
model evaluation metric 
choice (0.38%) 
balancing risks and benefits (0.38%) 
estimation issues (0.38%) 
incomplete/incorrect requirements (1.91%) 
end to end process (0.38%) 
scope definition (1.91%) 
accuracy checking (0.38%) 
defining/documenting requirements (2.29%) 
data science complexity (1.15%) 
unclear requirements (4.96%) 
lack of data science
Source: Status Quo and Problems of Requirements Engineering for Machine Learning Results from an International Survey.pdf

Query: How to prioritize all requirements my team proposed in order to deliver the most value quicker?
Context: To prioritize the requirements proposed by your team in order to deliver the most value quickly, you can consider the following summarized information based on the importance of various factors:

1. **Usability** (Importance: 0.645) - Focus on enhancing user accessibility, recognizability, learnability, and overall user interface aesthetics.
2. **Performance Efficiency** (Importance: 0.559) - Prioritize improvements in time behavior, resource utilization, and capacity.
3. **Maintainability** (Importance: 0.548) - Ensure that the system is analyzable, modular, modifiable, reusable, and testable.
4. **Reliability** (Importance: 0.538) - Work on aspects like availability, fault tolerance, maturity, and recoverability.
5. **Security** (Importance: 0.409) - Address accountability, authenticity, confidentiality, integrity, and non-repudiation.
6. **Compatibility** (Importance: 0.376) - Ensure co-existence and interoperability with other systems.
7. **Safety** (Importance: 0.301) - Focus on minimizing risks related to health or disaster.
8. **Portability** (Importance: 0.129) - Enhance adaptability, installability, and replaceability.

The satisfaction levels and necessary changes in requirements engineering were not available for analysis. 

By focusing on the areas with the highest importance scores, your team can effectively prioritize requirements that will deliver the most value in a timely manner.
Source: napire data

Query: how to prioritize all requirements my team proposed in order to deliver the most value quicker?
Context: viable and suﬃciently justiﬁed, the requirement candidates are prioritized in
a project prioritization state (similar to backlog prioritization), called m1. fi-
nally, the prioritized requirements are hand-shaken with the developer teams
in a state called m2 [18]. when a requirement is unclear at the m2 state, it
is pushed back to m1 for re-prioritization. similarly, a requirement is pushed
Source: Causality in Requirements Artifacts Prevalence, Detection, and Impact.pdf

Context: be done." by focusing on the problem first and identifying solutions second, organizations can ensure that they meet the requirements 
of stakeholders, consider all project limitations and scope, and choose the best possible solution. this approach helps to streamline the 
process and achieve the desired outcomes more efficiently.
types and forms of requirements
Source: software4kmu learning nuggets.pdf

Context: tive programming environments that can be used to process data and create ml 
models, appear as the most used tool for documenting requirements. again, this 
requirements overthinking (0.38%) 
project (0.38%) 
domain complexity (0.38%) strategic alignments (0.38%) 
solution uniqueness (0.38%) 
method (0.38%) 
difficulties in value creation (0.38%) 
define priorities (0.38%)
Source: Status Quo and Problems of Requirements Engineering for Machine Learning Results from an International Survey.pdf

Context: the structuring of requirement candidates helps handling overlaping requirements and duplicates between requirements effectively, and, on the other hand, it helps building a hierarchy of goals to 
visualize their interdependencies facilitating conflict resolution, constraint detection and resource sharing. a more detailed explanation of goals is given in later learning nuggets.
Source: software4kmu learning nuggets.pdf

Context: define priorities (0.38%) 
model evaluation metric 
choice (0.38%) 
balancing risks and benefits (0.38%) 
estimation issues (0.38%) 
incomplete/incorrect requirements (1.91%) 
end to end process (0.38%) 
scope definition (1.91%) 
accuracy checking (0.38%) 
defining/documenting requirements (2.29%) 
data science complexity (1.15%) 
unclear requirements (4.96%) 
lack of data science
Source: Status Quo and Problems of Requirements Engineering for Machine Learning Results from an International Survey.pdf

Query: how to prioritize all requirements my team proposed in order to deliver the most value quicker?
Context: To prioritize the requirements proposed by your team in order to deliver the most value quickly, you can focus on the following key areas based on their average importance:

1. **Performance Efficiency**: This aspect has the highest average importance score (0.559). Prioritizing requirements that enhance performance efficiency can lead to quicker delivery of value.

2. **Maintainability**: With an average score of 0.548, focusing on maintainability can ensure that the system remains adaptable and easier to modify in the future.

3. **Reliability**: This area has an average score of 0.538. Ensuring that the system is reliable will help in building trust with users and stakeholders.

4. **Security**: With an average score of 0.409, addressing security requirements is crucial to protect the system and its data.

5. **Compatibility**: This has an average score of 0.376. Ensuring compatibility with existing systems can facilitate smoother integration and user adoption.

6. **Portability**: Although it has a lower average score (0.129), considering portability can be beneficial for future-proofing the system.

The satisfaction levels and necessary changes in requirements engineering were not available for analysis. Therefore, focusing on the above areas will help in prioritizing the requirements effectively to deliver value quickly.
Source: napire data

Query: Can you generate user stories from the following requirement? Requirement: "The mobile app should allow users to reset their passwords using either email or SMS."
Context: example
the system must provide a search function that allows users to find products by name or category.
users must be able to export their data reports in csv format directly from their dashboard.
example
authorized users should be able to access advanced features depending on their preferences.
Source: software4kmu learning nuggets.pdf

Context: secure transactions by encrypting sensitive information and providing a confirmation email for each purchase. additionally, users 
have the option to track their orders and view their purchase history. the platform also features a user-friendly interface with intuitive 
navigation and responsive design for optimal viewing on various devices, including desktops, laptops, tablets, and smartphones.
Source: software4kmu learning nuggets.pdf

Context: ia4. 
passwords 
treatment 
must 
include 
complex passphrases, options to recover and 
reset the password and default passwords not 
allowed. 
for each user story, the generated reading technique 
focuses the reviewer to verify whether its security 
specifications contain any of the defect types. this happens 
when reviewers check the security specifications against the
Source: An Approach for Reviewing Security-Related Aspects in Agile Requirements Specifications of Web Applications.pdf

Context: we analyzed over 1,000 user stories containing roughly
28,000 words. for rq 2.2, we met with an experienced
scrum master and a long-term developer, who have
worked on several projects for techdivision.
6http://www.magento.com
7http://www.typo3.org
8https://atlassian.com/software/jira
case d: university of stuttgart. the requirements of
case d were created by 52 groups of three 2nd-year
Source: Rapid quality assurance with Requirements Smells.pdf

Context: user stories.
with regards to whether a requirements engineering standard is mandatory or practised (see
proposition p 26 stating that requirements engineering standards are neither practised nor
mandatory is not supported by the data. quite to the contrary, it seems that the standards are
practised in most organisations regardless whether they are mandatory or not. the two answers
Source: Status Quo in Requirements Engineering A Theory and a Global Family of Surveys.pdf

Query: Can you generate user stories from the following requirement? Requirement: "The mobile app should allow users to reset their passwords using either email or SMS."
Context: Sorry, the DataFrame doesn’t provide enough information.
Source: napire data

Query: can you generate user stories from the following requirement? requirement: "the mobile app should allow users to reset their passwords using either email or sms."
Context: ia4. 
passwords 
treatment 
must 
include 
complex passphrases, options to recover and 
reset the password and default passwords not 
allowed. 
for each user story, the generated reading technique 
focuses the reviewer to verify whether its security 
specifications contain any of the defect types. this happens 
when reviewers check the security specifications against the
Source: An Approach for Reviewing Security-Related Aspects in Agile Requirements Specifications of Web Applications.pdf

Context: secure transactions by encrypting sensitive information and providing a confirmation email for each purchase. additionally, users 
have the option to track their orders and view their purchase history. the platform also features a user-friendly interface with intuitive 
navigation and responsive design for optimal viewing on various devices, including desktops, laptops, tablets, and smartphones.
Source: software4kmu learning nuggets.pdf

Context: we analyzed over 1,000 user stories containing roughly
28,000 words. for rq 2.2, we met with an experienced
scrum master and a long-term developer, who have
worked on several projects for techdivision.
6http://www.magento.com
7http://www.typo3.org
8https://atlassian.com/software/jira
case d: university of stuttgart. the requirements of
case d were created by 52 groups of three 2nd-year
Source: Rapid quality assurance with Requirements Smells.pdf

Context: user stories.
with regards to whether a requirements engineering standard is mandatory or practised (see
proposition p 26 stating that requirements engineering standards are neither practised nor
mandatory is not supported by the data. quite to the contrary, it seems that the standards are
practised in most organisations regardless whether they are mandatory or not. the two answers
Source: Status Quo in Requirements Engineering A Theory and a Global Family of Surveys.pdf

Context: we mitigated this threat
by directly asking the study subjects for the corresponding account names and deviations from the actual
naming convention. second, change requests may not have been accounted for politically motivated reasons.
change requests that were not billed for whatever reason appear in the account system with negative eﬀort.
Source: Field study on requirements engineering Investigation of artefacts, project parameters, and execution strategies.pdf

Query: can you generate user stories from the following requirement? requirement: "the mobile app should allow users to reset their passwords using either email or sms."
Context: Sorry, the DataFrame doesn’t provide enough information.
Source: napire data

Query: How to structure big projects?
Context: missed opportunities: prematurely jumping to solutions can also lead to missed opportunities to explore alternative approaches 
that might better meet the requirements.
prioritise problem definition: before jumping into solutions, it is crucial to clearly understand the problem space. this will 
significantly contribute to the success of the project.
Source: software4kmu learning nuggets.pdf

Context: to 20 person years as small-scale projects, from 20 to 120 person years as medium-scale projects, and above
120 person years as large-scale projects. the analysed projects are labelled with numbers and it is also
mentioned whether they are ﬁnished or still ongoing (in terms of further releases or increments). all of the
Source: Field study on requirements engineering Investigation of artefacts, project parameters, and execution strategies.pdf

Context: activities such as project organisation and management (e.g. effort
estimation), design, and (acceptance) testing.
the bas are essential for effective collaboration because they con-
tain relevant information that supplies different groups with different
needs. they materialise mainly as electronic or printed documents and,
for the most part, are produced and used by humans. being central re-
Source: An investigation of causes and effects of trust in Boundary Artefacts.pdf

Context: with the project lead, we eliminated artifacts that were ir-
relevant to the guidelines and broke the remaining artifacts
down into entities. furthermore, when the project artifacts
did not follow the guideline rules, we extended the model
by the entities that were mentioned in the guidelines. then,
the project lead explained the current process of the project,
Source: It's the Activities, Stupid! A New Perspective on RE Quality.pdf

Context: engineering as it very much depends on a plethora of project 
characteristics, such as:
do we develop a new system or do we replace an already 
existing system?
what is the information already documented an known?
we we develop internally (in-house) or do we elaborate 
requirements for external suppliers or do we develop 
requirements as external suppliers for our customer?
Source: software4kmu learning nuggets.pdf

Query: How to structure big projects?
Context: Sorry, the DataFrame doesn’t provide enough information.
Source: napire data

Query: how to structure big projects?
Context: activities such as project organisation and management (e.g. effort
estimation), design, and (acceptance) testing.
the bas are essential for effective collaboration because they con-
tain relevant information that supplies different groups with different
needs. they materialise mainly as electronic or printed documents and,
for the most part, are produced and used by humans. being central re-
Source: An investigation of causes and effects of trust in Boundary Artefacts.pdf

Context: build. 
while there are many ways to structure goals in complex goal models (e.g. cgm, pistar), these approaches remain often at the more theorical level with little practical application. in practice, we may 
aggregate goals in simple lists, to not overcomplicate matters. for the abve example, such a list could for instance look like the following one:
Source: software4kmu learning nuggets.pdf

Context: engineering as it very much depends on a plethora of project 
characteristics, such as:
do we develop a new system or do we replace an already 
existing system?
what is the information already documented an known?
we we develop internally (in-house) or do we elaborate 
requirements for external suppliers or do we develop 
requirements as external suppliers for our customer?
Source: software4kmu learning nuggets.pdf

Context: sider that the application of checklists (what content to
specify) can provide basic legal knowledge management
and coordination, while templates and tool support (how
to specify content) can help to address more complex
regulatory re situations.
• support for more flexibility and variability. we plan to
address this limitation with the development of tailoring
Source: On Developing an Artifact-based Approach to Regulatory Requirements Engineering.pdf

Context: (51-250) 
large companies 
(>251) 
# 1 problem 
incomplete 
/ 
hidden 
requirements 
communication 
flaws 
between project team and 
customer 
incomplete 
/ 
hidden 
requirements 
# 2 problem 
communication 
flaws 
between project team and 
customer 
incomplete 
/ 
hidden 
requirements 
moving targets 
# 3 problem 
underspecified 
requirements 
communication flaws within 
project team
Source: Supporting Requirements Engineering Research that Industry Needs The Naming the Pain in Requirements Engineering Initiative.pdf

Query: how to structure big projects?
Context: To structure big projects effectively, the following insights can be drawn from the summarized data:

1. **Project Management Approach**:
   - A significant number of projects lean towards agile methodologies, with a notable portion adopting a hybrid approach. This suggests flexibility in project management is crucial.

2. **Responsibility for Requirements Elicitation**:
   - The role of the Business Analyst is predominant in requirements elicitation, followed by Project Leads and Requirements Engineers. This indicates the importance of having dedicated roles for managing requirements.

3. **Requirements Refinement**:
   - Most projects engage in refining requirements through several iterations, highlighting the need for continuous improvement and adaptability in requirements management.

4. **Documentation Practices**:
   - High-level requirements are often documented initially and refined later, which suggests a phased approach to documentation can be beneficial. However, some projects do not document requirements at all, indicating a potential area for improvement.

5. **Satisfaction with Requirements Engineering**:
   - A majority of respondents express satisfaction with their requirements engineering processes, which is essential for project success.

6. **Common Problems**:
   - Communication flaws between the project and the customer are the most frequently cited problem, followed by incomplete or hidden requirements. Addressing these issues is vital for project success.

7. **Causes of Problems**:
   - Lack of knowledge and assumptions about unspecified requirements are common causes of project issues. This emphasizes the need for clear communication and thorough documentation.

8. **Consequences of Satisfying Requirements**:
   - Effective requirements engineering leads to better alignment with customer needs and higher satisfaction, which is crucial for project success.

By focusing on these areas, project managers can enhance their strategies for structuring and executing large projects effectively.
Source: napire data

Query: How can we summarize the requirement? Requirement: "The system should allow admins to generate weekly performance reports for all team members."
Context: length of 8 characters.
reporting: the system should generate monthly financial reports in pdf format detailing revenues, expenses and profit 
margins.
examples:
scalability: the system should be scalable to accommodate a 50% increase in user traffic without performance degradation.
Source: software4kmu learning nuggets.pdf

Context: furthermore, we collected the time spent for detecting defects. 
this allows us to compare the performance of the treatments 
in terms of efficiency, which is the metric that complements 
the answer to rq1. finally, we collected answers from the 
follow-up questionnaire. this questionnaire allowed us to 
receive feedback on the perceived usefulness and ease of use.
Source: An Approach for Reviewing Security-Related Aspects in Agile Requirements Specifications of Web Applications.pdf

Context: relevant) high-level features.
purpose
the main purposes of system vision is to:
facilitate communication, agreement with stakeholders, and 
scoping of the project;
specify and approve the main use cases to be implemented in 
the project.
we do so by capturing the system borders and identifying the most 
pressing high-level features in relation to external actors. those
Source: software4kmu learning nuggets.pdf

Context: system lifecycle. the main tasks of requirements management are:
attribution (adding meta information to requirements for an effective control​
)
assessment and prioritisation​
tracing (describe and follow the lifecycle of a requirement) ​
versioning (describe and follow changes within the requirements​
)
reporting (collecting, analysing, and visualising information about re​
)
Source: software4kmu learning nuggets.pdf

Context: for the other cases, this involved extracting the
requirements from other systems, either a propri-
etary requirements management tool (resulting
in a list of html ﬁles), or the online task manage-
ment system jira, which led to a set of comma-
separated values ﬁles. for the student projects,
the students handed in their ﬁnal artifacts either
as a single pdf or as a pdf with the general
Source: Rapid quality assurance with Requirements Smells.pdf

Query: How can we summarize the requirement? Requirement: "The system should allow admins to generate weekly performance reports for all team members."
Context: To summarize the requirement "The system should allow admins to generate weekly performance reports for all team members," we can analyze the following relevant aspects from the DataFrame:

1. **Performance Efficiency**: The average score for performance efficiency is approximately 0.58, indicating a moderate level of importance placed on performance-related aspects.

2. **Usability**: The usability aspect is crucial for ensuring that the system is user-friendly, although specific metrics were not provided in the summary.

3. **Documentation Granularity**: This aspect is essential for understanding how detailed the documentation is, which can impact the clarity of the reporting feature.

4. **Goals**: The goals set for the project can provide insight into the intended outcomes, including the generation of performance reports.

5. **Quality Properties**: This reflects the quality attributes that the system should meet, which may include reliability and efficiency in generating reports.

6. **Requirements Elicitation Methods**: Various methods such as interviews, analysis of existing documents, prototyping, and workshops were used to gather requirements, indicating a thorough approach to understanding user needs.

7. **Satisfaction with Requirements Engineering**: The majority of respondents (about 42%) reported being satisfied with the requirements engineering process, which is a positive indicator for the project's success.

This summary highlights the importance of performance efficiency, usability, and thorough documentation in the context of generating performance reports, along with the methods used to gather requirements and the overall satisfaction with the requirements engineering process.
Source: napire data

Query: how can we summarize the requirement? requirement: "the system should allow admins to generate weekly performance reports for all team members."
Context: correction
invitation
synthesis & 
reporting
1. replication
(netherlands)
dissemination
creation 
distribution list
invitation
data analysis & 
interpretation
final reporting
online 
survey
spreadsheet
data analysis & 
interpretation
creation 
distribution list
invitation
creation 
distribution list
baseline 
report
yearly 
re community 
report
replication
report
survey
results
creation
Source: Naming the Pain in Requirements Engineering A Design for a Global Family of Surveys and First Results from Germany.pdf

Context: system lifecycle. the main tasks of requirements management are:
attribution (adding meta information to requirements for an effective control​
)
assessment and prioritisation​
tracing (describe and follow the lifecycle of a requirement) ​
versioning (describe and follow changes within the requirements​
)
reporting (collecting, analysing, and visualising information about re​
)
Source: software4kmu learning nuggets.pdf

Context: for the other cases, this involved extracting the
requirements from other systems, either a propri-
etary requirements management tool (resulting
in a list of html ﬁles), or the online task manage-
ment system jira, which led to a set of comma-
separated values ﬁles. for the student projects,
the students handed in their ﬁnal artifacts either
as a single pdf or as a pdf with the general
Source: Rapid quality assurance with Requirements Smells.pdf

Context: and easy to translate. the multidisciplinary team partially manages the
artefact with the activities detailed in table 3.
the management team also clear up the features that do not belong
to the artefact and deprecate features that are no longer in use but keep
there as historical data.
in our investigation, we found that those function teams perceive
Source: An investigation of causes and effects of trust in Boundary Artefacts.pdf

Context: +
+
+
+
+
+
+
+
+
+
+
+
large team-size
+
+
+
high team distribution
+
+
+
+
weakly experiences team
+
-
legend:
+
= need for action
-
= ability to act
similarly, the technical knowledge of the stakeholders negatively impacts the quality requirements. when
specifying quality requirements, reference models and reference values are often missing. quality require-
Source: Field study on requirements engineering Investigation of artefacts, project parameters, and execution strategies.pdf

Query: how can we summarize the requirement? requirement: "the system should allow admins to generate weekly performance reports for all team members."
Context: To summarize the requirement "the system should allow admins to generate weekly performance reports for all team members," we can analyze the following relevant aspects from the DataFrame:

1. **Performance Efficiency**: The average score for performance efficiency is approximately 0.73, indicating a generally high importance placed on performance-related features.

2. **Documentation Granularity**: This aspect is crucial for ensuring that the requirements are well-documented, which is essential for generating reports. The specific details on documentation granularity were not summarized but are included in the DataFrame.

3. **Goals**: The goals related to performance reporting can be inferred from the data, although specific values were not provided in the summary.

4. **Quality Properties**: This indicates the quality attributes that the system should meet, which are essential for generating reliable reports.

5. **Requirements Elicitation Methods**: Various methods such as interviews, analysis of existing documents, workshops, and prototyping are used to gather requirements, which can help in understanding the needs for performance reporting.

6. **How to Document Usability**: This aspect is important for ensuring that the reports generated are user-friendly and accessible.

7. **How to Document Performance Efficiency**: This indicates the methods or guidelines for documenting performance-related requirements, which is crucial for the requirement at hand.

Overall, the DataFrame provides a comprehensive overview of the factors that contribute to the requirement of generating performance reports, emphasizing the importance of performance efficiency, documentation, and quality properties.
Source: napire data

Query: What are the common requirements for an authentications system?
Context: user story 
security specification 
1. as a customer, i 
want to be able to 
export my personal 
information so that i 
can use it in other 
systems. 
1. the system shall ensure that there is no residual 
data exposed. 
2. the system shall store credentials securely using 
the aes encryption algorithm. 
3. the system shall use the rsa encryption 
algorithm to protect all data all the time.
Source: An Approach for Reviewing Security-Related Aspects in Agile Requirements Specifications of Web Applications.pdf

Context: approach will help avoid common pitfalls, prevent overcomplicating the project, and create inadequate solutions.
example
think of two-factor authentication (2fa) as you have already seen on several websites, a security process where users provide 
two different authentication factors to verify their identity. for example, the first step requires you to provide a password, and the
Source: software4kmu learning nuggets.pdf

Context: non-functional requirements include quality attributes and process rules, emphasising characteristics beyond mere functionality.
examples: 
data processing: the system should be able to sort and filter large data sets of up to 1 million records within 5 seconds.
user authentication: users should be able to log in using either their email address or username, with a minimum password
Source: software4kmu learning nuggets.pdf

Context: content
item
exempl.
notation
description
system
vi-
sion
rich
pic-
ture
the system vision comprehends the system context of the
system under consideration, which is intended to realise
a number of features. a feature is, in our understanding,
a prominent or distinctive user-recognisable aspects, qual-
ity, or characteristics of a system that is related to a spe-
Source: Artefact-based Requirements Engineering The AMDiRE Approach.pdf

Context: order tracking feature for users to monitor the status of their purchases.
purchase history functionality for users to review past orders.
user-friendly interface with intuitive navigation.
responsive design for optimal viewing across devices.
requirements in systems and software engineering cover stakeholder needs, constraints, capabilities and characteristics.
Source: software4kmu learning nuggets.pdf

Query: What are the common requirements for an authentications system?
Context: The common requirements for an authentication system, based on the summarized values from the DataFrame, are as follows:

1. **Security**: The average importance score is approximately **0.50**, indicating a moderate emphasis on aspects such as accountability, authenticity, confidentiality, integrity, and non-repudiation.

2. **Usability**: The average importance score is around **0.63**, suggesting a significant focus on accessibility, recognizability, learnability, operability, and user error protection.

3. **Reliability**: The average importance score is about **0.59**, reflecting a strong need for availability, fault tolerance, maturity, and recoverability.

4. **Performance Efficiency**: The average importance score is approximately **0.58**, highlighting the importance of time behavior, resource utilization, and capacity.

5. **Maintainability**: The average importance score is around **0.56**, indicating a need for analysability, modularity, modifiability, reusability, and testability.

These scores suggest that an effective authentication system should prioritize security, usability, reliability, performance efficiency, and maintainability.
Source: napire data

Query: what are the common requirements for an authentications system?
Context: identification & 
authentication (ia) 
ia1. users are associated with a well-defined 
set of roles and privileges. 
ia2. the digital identity of the sender of a 
communication must be verified. 
ia3. only those authorized are able to 
authenticate and credentials are transported and 
stored in a secure manner. 
ia4. 
passwords 
treatment 
must 
include
Source: An Approach for Reviewing Security-Related Aspects in Agile Requirements Specifications of Web Applications.pdf

Context: have to use a passkey to log in?
clarity: is the requirements clear and unambiguous to the customer? can there be missunderstandings towards which 
functionality requires a login?
example
requirement: the application must respond to user requests within 2 seconds.
verification activities:
define acceptance criteria: application responds within 2 seconds
Source: software4kmu learning nuggets.pdf

Context: user story 
security specification 
1. as a customer, i 
want to be able to 
export my personal 
information so that i 
can use it in other 
systems. 
1. the system shall ensure that there is no residual 
data exposed. 
2. the system shall store credentials securely using 
the aes encryption algorithm. 
3. the system shall use the rsa encryption 
algorithm to protect all data all the time.
Source: An Approach for Reviewing Security-Related Aspects in Agile Requirements Specifications of Web Applications.pdf

Context: approach will help avoid common pitfalls, prevent overcomplicating the project, and create inadequate solutions.
example
think of two-factor authentication (2fa) as you have already seen on several websites, a security process where users provide 
two different authentication factors to verify their identity. for example, the first step requires you to provide a password, and the
Source: software4kmu learning nuggets.pdf

Context: level security requirements as defined by the open web 
application security project (owasp) [33], which provides a 
well-known industry standard on security. furthermore, our 
proposal involves classifying the defects found by inspectors, 
providing a better understanding of the distribution of the 
problems.  
carver et al. [10] further describe a set of perspectives that
Source: An Approach for Reviewing Security-Related Aspects in Agile Requirements Specifications of Web Applications.pdf

Query: what are the common requirements for an authentications system?
Context: The common requirements for an authentication system, based on the summarized values from the DataFrame, include:

1. **Security**: Emphasizing accountability, authenticity, confidentiality, integrity, and non-repudiation, with an average importance score of approximately **0.50**.
2. **Usability**: Focusing on accessibility, appropriateness, recognizability, learnability, operability, user error protection, and user interface aesthetics, with an average importance score of approximately **0.63**.
3. **Reliability**: Highlighting availability, fault tolerance, maturity, and recoverability, with an average importance score of approximately **0.59**.
4. **Performance Efficiency**: Addressing time behavior, resource utilization, and capacity, with an average importance score of approximately **0.58**.
5. **Maintainability**: Covering analysability, modularity, modifiability, reusability, and testability, with an average importance score of approximately **0.56**.

These aspects collectively indicate the essential features and considerations for an effective authentication system.
Source: napire data

Query: How to deal with incomplete requirements?
Context: poor elicitation techniques, too abstract speciﬁcations, and missing completeness
checks. based on this information, an organisation facing this or similar problems
could take ﬁrst counter measures, such as:
1. checking on the qualiﬁcation and experience of its team members, providing
training if needed, in particular, on avoiding abstract speciﬁcations. this could
Source: Naming the Pain in Requirements Engineering Contemporary Problems, Causes, and Effects in Practice.pdf

Context: preventing incomplete/hidden requirements: 
reflections on survey data from austria and brazil 
marcos kalinowski1, michael felderer2, tayana conte3, rodrigo spínola4,         
rafael prikladnicki5, dietmar winkler6 , daniel méndez fernández7, stefan wagner8 
1 universidade federal fluminense, computing institute, av. milton tavares de souza s/n, 
campus praia vermelha, 24210-346 niterói, brazil.
Source: Preventing Incomplete Hidden Requirements Reflections on Survey Data from Austria and Brazil.pdf

Context: common confusion and pitfalls
confusion often arises when stakeholders focus on implementation details before fully understanding and agreeing the requirements. 
this can lead to a number of problems:
overlooking stakeholder needs: discussing solutions prematurely can cause stakeholders to miss the real needs, resulting in 
solutions that don't address the right problems.
Source: software4kmu learning nuggets.pdf

Context: mitigation actions for incomplete/hidden requirements 
improve the documentation and conduct more meetings with the developers to detect analysis defects. 
hire or specialize a requirements analyst. 
creating templates. 
creation of a dor (definition of readiness) for the team. 
invest more time in requirements specification, using scenarios and prototypes to gather requirements
Source: Preventing Incomplete Hidden Requirements Reflections on Survey Data from Austria and Brazil.pdf

Context: “although the provided knowledge is excellent in terms of 
content, i believe that the bayesian network could be more 
clearly presented”. participant #12 mentioned “i would 
include filtering mechanisms allowing to isolate specific 
causes of the problem and their effects”. thus, while they 
would use the approach (both answered 1 to question s1),
Source: Supporting Defect Causal Analysis in Practice with Cross-Company Data on Causes of Requirements Engineering Problems.pdf

Query: How to deal with incomplete requirements?
Context: Sorry, the DataFrame doesn’t provide enough information.
Source: napire data

Query: how to deal with incomplete requirements?
Context: poor elicitation techniques, too abstract speciﬁcations, and missing completeness
checks. based on this information, an organisation facing this or similar problems
could take ﬁrst counter measures, such as:
1. checking on the qualiﬁcation and experience of its team members, providing
training if needed, in particular, on avoiding abstract speciﬁcations. this could
Source: Naming the Pain in Requirements Engineering Contemporary Problems, Causes, and Effects in Practice.pdf

Context: lack of data science 
knowledge (1.91%) 
unclear goals (6.87%) 
communication (7.63%) 
business/domain understanding (11.83%) 
managing expectations (11.83%) 
problem understanding (21.76%) 
low customer/domain expert 
availability/engagement (9.92%) 
data availability (0.76%) 
computational constraints (1.53%) 
data quality (0.76%) 
lack of time (3.44%) 
data collection (0.38%)
Source: Status Quo and Problems of Requirements Engineering for Machine Learning Results from an International Survey.pdf

Context: preventing incomplete/hidden requirements: 
reflections on survey data from austria and brazil 
marcos kalinowski1, michael felderer2, tayana conte3, rodrigo spínola4,         
rafael prikladnicki5, dietmar winkler6 , daniel méndez fernández7, stefan wagner8 
1 universidade federal fluminense, computing institute, av. milton tavares de souza s/n, 
campus praia vermelha, 24210-346 niterói, brazil.
Source: Preventing Incomplete Hidden Requirements Reflections on Survey Data from Austria and Brazil.pdf

Context: mitigation actions for incomplete/hidden requirements 
improve the documentation and conduct more meetings with the developers to detect analysis defects. 
hire or specialize a requirements analyst. 
creating templates. 
creation of a dor (definition of readiness) for the team. 
invest more time in requirements specification, using scenarios and prototypes to gather requirements
Source: Preventing Incomplete Hidden Requirements Reflections on Survey Data from Austria and Brazil.pdf

Context: information, or constant updates are necessary to satisfy needs [6–8].
as such inconsistencies occur, stakeholders’ usage can be under-
mined, and the efficiency of these artefacts is reduced. for example,
when a ba is mismanaged, learning across diverse groups becomes
limited and integrating additional knowledge is difficult [9]. more-
Source: An investigation of causes and effects of trust in Boundary Artefacts.pdf

Query: how to deal with incomplete requirements?
Context: Sorry, the DataFrame doesn’t provide enough information.
Source: napire data

Query: Who are the people/stakeholders to involve in elicitation?
Context: requirements (elicitation) sources​
stakeholders (is a person or a group of persons,​
 an interest group, or​
 an organisation​
 that has to a certain extent an interest in the system to be developed, or that takes/should take influence on 
the system’s development) and their goals​
Source: software4kmu learning nuggets.pdf

Context: the ba) and availability during the period we performed the interviews.
we had an intermediate step in our research where we conducted a
workshop to present a draft of the findings, aiming for validation and
additional data collection. during the workshop, we were cautious not
to reveal participants’ names or the teams they belonged to, avoiding
any discomfort.
Source: An investigation of causes and effects of trust in Boundary Artefacts.pdf

Context: 3) external reviewer: in order to achieve an unbiased assess-
ment of the produced speciﬁcations an external reviewer
(not involved in the actual process) will be called in.
c. data collection procedures
the collection of the data for the case study comprises the
participation of the researchers in the re process as well as
a concluding assessment of the performed process by internal
Source: A Case Study on the Application of an Artefact-Based Requirements Engineering Approach.pdf

Context: as the project lead or as the chief analysts of the project. if the project candidate is selected, this person
serves as the single point of contact during the study.
when establishing the ﬁrst contact, we provide information about the study planned (its purpose and
design) and propose an appointment for an open telephone interview of approximately one hour.
this
Source: Field study on requirements engineering Investigation of artefacts, project parameters, and execution strategies.pdf

Context: vii. evaluation with industry representatives 
the evaluation with industry representatives was 
conducted with three professionals of the fraunhofer project 
center (fpc) at ufba enrolled in a large-scale project, 
called rescuer (reliable and smart crowdsourcing 
solution for emergency and crisis management), in which 
high-quality re plays a crucial role.
Source: Supporting Defect Causal Analysis in Practice with Cross-Company Data on Causes of Requirements Engineering Problems.pdf

Query: Who are the people/stakeholders to involve in elicitation?
Context: The stakeholders to involve in elicitation include:

- 0
- 1

The people responsible for requirements elicitation are:

- Business Analyst
- Other
- Nobody has the primary responsibility
- Customer
- Product Manager
- Product Owner
- Requirements Engineer
- Project Lead / Project Manager
- Scrum Master
- Architect
- Developer
- Marketing
Source: napire data

Query: who are the people/stakeholders to involve in elicitation?
Context: requirements (elicitation) sources​
stakeholders (is a person or a group of persons,​
 an interest group, or​
 an organisation​
 that has to a certain extent an interest in the system to be developed, or that takes/should take influence on 
the system’s development) and their goals​
Source: software4kmu learning nuggets.pdf

Context: the ba) and availability during the period we performed the interviews.
we had an intermediate step in our research where we conducted a
workshop to present a draft of the findings, aiming for validation and
additional data collection. during the workshop, we were cautious not
to reveal participants’ names or the teams they belonged to, avoiding
any discomfort.
Source: An investigation of causes and effects of trust in Boundary Artefacts.pdf

Context: 3) external reviewer: in order to achieve an unbiased assess-
ment of the produced speciﬁcations an external reviewer
(not involved in the actual process) will be called in.
c. data collection procedures
the collection of the data for the case study comprises the
participation of the researchers in the re process as well as
a concluding assessment of the performed process by internal
Source: A Case Study on the Application of an Artefact-Based Requirements Engineering Approach.pdf

Context: as the project lead or as the chief analysts of the project. if the project candidate is selected, this person
serves as the single point of contact during the study.
when establishing the ﬁrst contact, we provide information about the study planned (its purpose and
design) and propose an appointment for an open telephone interview of approximately one hour.
this
Source: Field study on requirements engineering Investigation of artefacts, project parameters, and execution strategies.pdf

Context: vii. evaluation with industry representatives 
the evaluation with industry representatives was 
conducted with three professionals of the fraunhofer project 
center (fpc) at ufba enrolled in a large-scale project, 
called rescuer (reliable and smart crowdsourcing 
solution for emergency and crisis management), in which 
high-quality re plays a crucial role.
Source: Supporting Defect Causal Analysis in Practice with Cross-Company Data on Causes of Requirements Engineering Problems.pdf

Query: who are the people/stakeholders to involve in elicitation?
Context: The stakeholders to involve in requirements elicitation include:

1. Business Analyst
2. Other
3. Customer
4. Product Manager
5. Product Owner
6. Requirements Engineer
7. Project Lead / Project Manager
8. Scrum Master
9. Architect
10. Developer
11. Marketing

These roles represent various perspectives and expertise that can contribute to effective requirements gathering and elicitation processes.
Source: napire data

Query: Please reformulate this requirement to make it more clear: Requirement: "The system should be fast."
Context: quiz
what type of requirement is this? 
1. "the system should be able to process 1000 transactions per second".
2. "all user input should be validated to prevent incorrect data entry".
3. "the system should allow users to search for products by category and filter the results by price, brand and customer reviews."
Source: software4kmu learning nuggets.pdf

Context: system privacy 
system portability 
others 
percentage of answers 
figure 8: critical non-functional requirements of ml- 
enabled systems (n = 71) 
requirements with data (p = 53.556 [53.197, 53.915]), resolving 
conflicts (p = 42.346 [41.987, 42.706]), managing changing re- 
quirements (p = 40.915 [40.574, 41.257]), selecting metrics (p = 
[26.418, 27.021]). 
customer  expectactions
Source: Industrial Practices of Requirements Engineering for ML-Enabled Systems in Brazil.pdf

Context: about the expectations practitioners have on particular aspects of their own standards. for instance, based
on our investigation published in [30, 6], we expect practitioners to demand standards that focus on the
re artefacts, clear roles and responsibilities, and tailoring mechanisms rather than on strict processes and
methods to allow for more ﬂexibility and a better communication.
Source: Naming the Pain in Requirements Engineering A Design for a Global Family of Surveys and First Results from Germany.pdf

Context: (6) system environment con-
ditions speciﬁed
part of the test cases is to describe the environment of the test as close as possible to the productive (end) system. thus, the engineer
must understand under what conditions the system will operate, e.g., regarding amounts of productive data, temperature, workload.
(7) inputs and outputs quali-
tatively speciﬁed
Source: It's the Activities, Stupid! A New Perspective on RE Quality.pdf

Context: expressed in a causal sentence.
furthermore, the implementation of a system based on require-
ments engineering artifacts needs to be validated by determining
whether the defined requirements are fulfilled. tests of various gran-
ularity are usually a formalized version of specific requirements.
arxiv:2312.06986v1  [cs.se]  12 dec 2023
ase ’20, september 21–25, 2020, virtual event, australia
Source: Automatic extraction of cause-effect-relations from requirements artifacts.pdf

Query: Please reformulate this requirement to make it more clear: Requirement: "The system should be fast."
Context: To reformulate the requirement "The system should be fast," we can clarify it by specifying measurable performance criteria. Based on the summarized performance data, a clearer requirement could be:

"The system should have a response time of less than 2 seconds for 95% of user interactions and should efficiently utilize resources to ensure optimal performance under peak load conditions." 

This reformulation provides specific expectations regarding response time and resource utilization, making the requirement more actionable and measurable.
Source: napire data

Query: please reformulate this requirement to make it more clear: requirement: "the system should be fast."
Context: quiz
what type of requirement is this? 
1. "the system should be able to process 1000 transactions per second".
2. "all user input should be validated to prevent incorrect data entry".
3. "the system should allow users to search for products by category and filter the results by price, brand and customer reviews."
Source: software4kmu learning nuggets.pdf

Context: no. for the last question, we also needed to take
the criticality into account. therefore, in case
practitioners answered that they would resolve a
ﬁnding, we also asked whether they would resolve
it immediately, in a short time (i.e. within this
project iteration) or in a long time (e.g. if it hap-
pens again). in addition to these three questions,
we took notes of qualitative feedback, such as
Source: Rapid quality assurance with Requirements Smells.pdf

Context: veloping ml-enabled systems, asked them to answer the 
survey, and gathered their feedback. the participants had no 
difficulties answering the survey, which took an average of 
20 minutes. after this step, the survey was considered ready 
to be launched. 
the final survey started with a consent form describing the pur- 
pose of the study and stating that it was conducted anonymously.
Source: Industrial Practices of Requirements Engineering for ML-Enabled Systems in Brazil.pdf

Context: co-authors to increase the likelihood of response. we concluded the recovery process on the
8th of february 2023, yielding a time frame of 70 days.
3.3. correspondence
we kept close contact with the authors we approached by responding in a window of 24 hours
within workdays. during this process, we clarified concerns and offered our help. we processed
Source: Let's Stop Building at the Feet of Giants Recovering unavailable Requirements Quality Artifacts.pdf

Context: expressed in a causal sentence.
furthermore, the implementation of a system based on require-
ments engineering artifacts needs to be validated by determining
whether the defined requirements are fulfilled. tests of various gran-
ularity are usually a formalized version of specific requirements.
arxiv:2312.06986v1  [cs.se]  12 dec 2023
ase ’20, september 21–25, 2020, virtual event, australia
Source: Automatic extraction of cause-effect-relations from requirements artifacts.pdf

Query: please reformulate this requirement to make it more clear: requirement: "the system should be fast."
Context: To reformulate the requirement "the system should be fast," it can be made clearer by specifying measurable criteria. A clearer version could be:

"The system should respond to user inputs within 2 seconds under normal operating conditions."

This reformulation provides a specific performance metric (response time) that can be objectively evaluated, making the requirement more actionable and testable.
Source: napire data

Query: What tools are available for requirements management?
Context: for the other cases, this involved extracting the
requirements from other systems, either a propri-
etary requirements management tool (resulting
in a list of html ﬁles), or the online task manage-
ment system jira, which led to a set of comma-
separated values ﬁles. for the student projects,
the students handed in their ﬁnal artifacts either
as a single pdf or as a pdf with the general
Source: Rapid quality assurance with Requirements Smells.pdf

Context: survey of techniques, approaches, and tools. in
a. aurum and c. wohlin, editors, engineering and
managing software requirements, number isbn-13:
978-3642064074, chapter 2, pages 19–46.
springer-verlag berlin, 2005.
Source: Naming the Pain in Requirements Engineering  Design of a Global Family of Surveys and First Results from Germany.pdf

Context: tive programming environments that can be used to process data and create ml 
models, appear as the most used tool for documenting requirements. again, this 
requirements overthinking (0.38%) 
project (0.38%) 
domain complexity (0.38%) strategic alignments (0.38%) 
solution uniqueness (0.38%) 
method (0.38%) 
difficulties in value creation (0.38%) 
define priorities (0.38%)
Source: Status Quo and Problems of Requirements Engineering for Machine Learning Results from an International Survey.pdf

Context: information.
this shows already how requirements are used along various activities in the software development lifecycle, as also shown in the following figure:
goals of requirements management
requirements management aims at efficiently and effectively managing and using requirements along the whole system lifecycle.
elementary tasks include, but are not limited to:​
Source: software4kmu learning nuggets.pdf

Context: amdire (see the example below)
more pragmatic tools that may as well serve the purpose of 
documenting requirements individually in natural language (and 
enriching them with additional information such s models), for 
example with ticket systems (e.g. jira)
in the end, the tools do not matter as much as the questions of 
1. what we can use considering the project circumstances (what is
Source: software4kmu learning nuggets.pdf

Query: give me a template for a textual use case.
Context: diagrams (activity diagrams, message sequence charts, etc.). 
use cases integrate all possible scenarios, which might occur 
when an actor tries to achieve a specific usage goal. notations 
used for the specification of use cases are structured text, use 
case diagram. 
an example of use scenarios.
5 - pa1463 - requirements engineering - functional 
requirements.pptx (sharepoint.com)
link to:
Source: software4kmu learning nuggets.pdf

Context: free-form textual domain/business process models 
textual structured requirements lists with constraints 
semi-formal (uml) data models 
free-form textual use case models 
textual use case models with constraints 
free-form textual goal models 
semi-formal (uml) domain/business process models) 
textual domain/business process models with constraints   
formal data models
Source: Status Quo in Requirements Engineering A Theory and a Global Family of Surveys.pdf

Context: main advantage of textual requirements is therefore the accessibility. every stakeholder can read, understand and contribute to the 
requirements (given enough context knowledge). this renders natural language requirements the easiest employable technique to 
convey requirements between stakeholders of diverse backgrounds (e.g. business analysts and developers).
Source: software4kmu learning nuggets.pdf

Context: textual free form with no constraints, textual with constraints such as the user story template (“as a...,
and formal semantics. furthermore, we briefly go into non-functional requirements and expect
them to be documented in a non-quantified and textual way. the propositions of our theory related
to requirements documentation are given in table 11. they are all new in relation to the theory
Source: Status Quo in Requirements Engineering A Theory and a Global Family of Surveys.pdf

Context: ing, the third case applies the concept of user stories,
as it is popular in agile software development. the
fourth case is in an academic background and employs
both use cases and textual requirements. regarding
subject selection, for each industrial case we selected
practitioners involved in the company, domain and
speciﬁcation. we executed the ﬁndings rating (step 5)
Source: Rapid quality assurance with Requirements Smells.pdf

Query: give me a template for a textual use case.
Context: Based on the summarized information from the DataFrame, here is a template for a textual use case:

---

### Use Case Template

**Title:** [Insert Title Here]

**Goals:**
- [Describe the primary goals of the use case, e.g., what the system should achieve.]

**Quality Properties:**
- [List the quality attributes that are important for this use case, e.g., performance, reliability, usability.]

**Stakeholders:**
- [Identify the stakeholders involved in this use case, e.g., users, project managers, clients.]

**System Behavior:**
- [Outline how the system should behave in response to various inputs or conditions.]

**User Interfaces:**
- [Describe the user interfaces involved in this use case, e.g., web interface, mobile app.]

**Usage Scenarios:**
- [Provide examples of how users will interact with the system in this use case.]

**Requirements Elicitation Methods:**
- Interviews: [Indicate if interviews were used and summarize findings.]
- Prototyping: [Indicate if prototyping was used and summarize findings.]

**Satisfaction Level:**
- [State how satisfied stakeholders are with the requirements engineering process related to this use case.]

**Consequences of Satisfaction:**
- [Describe the positive outcomes or benefits resulting from satisfying the requirements.]

---

This template can be filled out with specific details relevant to the use case being documented.
Source: napire data

Query: what can happen if i do not write complete requirements?
Context: computational constraints or a lack of data quality (or availability) can directly 
affect ml-related possibilities and requirements. 
5 discussion 
the survey findings reveal an intriguing aspect within ml contexts: the distri- 
bution of roles in re activities. contrary to conventional expectations, the role 
customer expectactions 
aligning requirements data 
conflicts 
changing requirements
Source: Status Quo and Problems of Requirements Engineering for Machine Learning Results from an International Survey.pdf

Context: methods. several studies have identified problems that could 
result from the poorly detailed requirements specifications 
[9][34]. these problems can result in overall project failure due 
to incorrect or missing functionalities and/or quality 
characteristics. according to eberlein and leite [15], there is a 
need for agile methods to include techniques that make it
Source: An Approach for Reviewing Security-Related Aspects in Agile Requirements Specifications of Web Applications.pdf

Context: implicit requirements not made explicit 
stakeholders with difficulties in separating reqs from previously known solutions 
inconsistent requirements 
insufficient support by project lead 
insufficient support by customer 
missing traceability 
“gold plating” (implementation of features without corresponding requirements) 
weak access to customer needs and / or (internal) business information
Source: Requirements Engineering Practice and Problems in Agile Projects Results from an International Survey.pdf

Context: incomplete and/or hidden re- 
quirements 
communication flaws between 
project team and customer 
moving targets (changing goals, 
business processes, and/or re- 
quirements) 
underspecified requirements 
that are too abstract 
timeboxing/not enough time 
in general 
stakeholders with difficulties in 
separating requirements from 
known solution designs 
insufficient support by cus- 
tomer
Source: Industrial Practices of Requirements Engineering for ML-Enabled Systems in Brazil.pdf

Context: common confusion and pitfalls
confusion often arises when stakeholders focus on implementation details before fully understanding and agreeing the requirements. 
this can lead to a number of problems:
overlooking stakeholder needs: discussing solutions prematurely can cause stakeholders to miss the real needs, resulting in 
solutions that don't address the right problems.
Source: software4kmu learning nuggets.pdf

Query: what can happen if i do not write complete requirements?
Context: Sorry, the DataFrame doesn’t provide enough information.
Source: napire data

