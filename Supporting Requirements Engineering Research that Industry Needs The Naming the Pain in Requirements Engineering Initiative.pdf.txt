
supporting requirements engineering research that industry needs: 


the naming the pain in requirements engineering initiative 


daniel méndez fernández 


technical university of munich, germany 


daniel.mendez@tum.de  


 


in light of the 40th jubilee of requirements engineering (re), roughly 40 experts met in switzerland to discuss 


where our discipline stands today [1]. 40 years after re was acknowledged for the first time as an independent discipline in an issue of the transactions of software engineering, a strong and (more or less) self-confident research community has emerged and contributed a variety of tools, methods, and approaches to the field. as of today, the common view is, indisputably, that “re as a discipline is stable and respected”, as pointed out by sarah gregory when covering the seminar in her column [1] to which articles like this one are invited to present ongoing research. however, it is also evident that after 40 years of promising research, conducting “research that industry needs” is still an ongoing challenge. research that industry needs means research that solves industrial problems practitioners face; but do we really understand those practitioners’ problems? here, i want to recapitulate on this research challenge and outline an initiative, the naming the pain in requirements engineering initiative, that aims at tackling this problem. before doing so, let’s briefly recapitulate the current state of requirements engineering research and practice. 


i. requirements engineering is challenging – in practice and research 


first and foremost: nobody can refute the importance of re and its challenges. as an interconnected 


discipline, much depends on its success as many decisions – and also problems – in software development projects are rooted therein. given its critical and challenging nature, it should thus not be surprising that project failures are still too often caused by insufficient re.  but the question is: why are we still struggling with re after 40 years of research? do we lack proper scientific contributions that aim at solving practitioners’ problems or do we lack proper knowledge and technology transfer between research and practice? probably both.  


for practitioners, it is often (made) difficult to share insights into their re given its criticality for the company’s 


competitive environment. from a researcher’s perspective, it is in general very difficult to reveal clear pictures of re in practice. the discipline is largely characterised by uncertainty and by human factors like experiences, expertise, fears, beliefs, and even politics [9]. these factors affect the choice of methods, approaches, and tools in individual practical contexts. what might work very well in one project setting might be completely alien to the needs and the culture of the next [5]. this renders it so difficult to empirically investigate the discipline. in the end, re is a highly individual means to an end – as individual as the people working on problems and as individual as the problems they work on.  


ii. current state of requirements engineering research 


it is not surprising that the biggest challenge in re research is to provide proper empirical figures that would 


demonstrate particular success factors in re. such factors are, however, critical determinants of what works in practice and what doesn't [2].  one consequence is that the state of empirical evidence in re is particularly weak and that a large portion of everyday industrial practices is dominated by conventional wisdom rather than being governed by empirical evidence. another symptom of the current disconnect between research and practice [3] is that we researchers too often keep proposing solutions to problems we have barely understood and which too often either remain unknown in practice or – worse – are blindly adopted without proper understanding of their potential benefits and shortcomings. as a consequence of the rather low practical impact of many of our contributions, the disconnect between researchers and practitioners is reinforced. the dominant role of goal-oriented requirements engineering approaches in research and the lack of such approaches in practice could be argued as one example for the current disconnect [6]. 


while practical relevance of research should certainly not be the sole measure of success, we still need to 


break this vicious cycle and foster more problem-driven research in re. to this end, we, that is the re community 


of researchers, need to close the knowledge gap on the plethora of situations practitioners face in their projects to eventually pave the road for the industrial adoption of our contributions.  


iii. we need proper theories in requirements engineering 


motivated by the overall situation and the current need for a stronger body of knowledge in re, stefan wagner 


(university of stuttgart) and i proposed the naming the pain in requirements engineering (napire) initiative [4] back in 2012 in a workshop at the annual meeting of the international software engineering research network (isern1). the overall objective was to establish a holistic theory of re practices and problems in industry to help guide research along specific industrial contexts and needs therein. to this end, we proposed to run napire as a bi-yearly replicated family of internationally distributed surveys where each run contributes to extend an initial theory and make it more robust over the years. we further proposed to disclose all data and resulting publications to the public to make our results transparent and reproducible, but also to support other researchers in grounding their own work on empirical data. at first, our idea received a lukewarm reception, but at the time of writing this article we number 57 researchers world-wide starting the third replication in 25 countries. the success of napire has strengthened our confidence in a shared vision and the initiative has become an effort by the community for the community.  


i will now guide through an overview of selected results from the second survey replication conducted in 


2014/15 with responses from 228 companies in 10 countries. i concentrate on a specific set of problems our respondents are experiencing while further details can be taken from [7]. the goal is to give the reader an overview over the diversity of problems and the importance of better understanding these problems. 


iv. napire: problems, they are everywhere! 


figure 1 summarises the top 21 re problems of our respondents as well as their frequency. the colour coding 


further shows the criticality of the problems by visualising the extent to which those problems have been experienced to lead to project failure. we can see, for example, that incomplete requirements constitute the most frequently stated problem directly followed by communication flaws between the project team and the customer, underspecified requirements, and moving targets. at the same time, we can see that moving targets, although ranked as the fourth most frequent problem, becomes the top priority problem when considering the project failure ratios alone. further, when considering all problems, one may argue that many of those problems should be in scope of clear re process models or artefact templates, that is blueprints serving as orientation on how to specify requirements or which terminology to rely on. this is interesting because many of our respondents do, in fact, use such templates. to better understand the reasons for the problems and propose fruitful solutions, we need a deeper understanding of the problems.  


                                                             


1 http://isern.iese.de/portal/ 


 


figure 1 key re problems and their criticality as reported in [7]. 


v. a closer look into the problems 


the napire data captures not only practices and problems, but also root causes and consequences of the 


problems going beyond the simple case of project failure or not. figure 2 visualises such an exemplary analysis for the problem communication flaws between the project team and the customer as a probabilistic cause-effect diagram [8] where percentages represent the share of given answers. the nearer phenomena are to the central line, the higher their probability of occurrence in projects. 


 


figure 2 causes and effects for communication flaws between the project team and the customer. 


 


this diagram, also known as an ishikawa diagram, shows on its right side the effects of the problem including, 


for instance, poor product quality caused by missing or incorrect features; on the left side, it shows the root-causes of the problem. it thus gives a more detailed picture going beyond problems and their apparent role in project failures. it also shows that the top 5 root causes do not indicate at all to a lack of guidance via templates, but to rather organisational and social factors (e.g., language barriers, missing direct communication to customer or missing engagement by customer). one natural follow-up question is: do projects applying agile practices avoid these issues given that agile practices are meant to support the communication between all involved parties? 


when blocking the data according to the software process models used, we can select all responses by 


practitioners who apply agile practices. the outcome is summarised in table 1 were we list the top 5 problems and group them by company size. 


table 1 top 5 problems of companies applying agile practices as reported in [7]. highlighted problems represent problems actually 


in scope of agile practices. 


 small companies 


(1-50) 


medium-sized companies 


(51-250) 


large companies 


(>251) 


# 1 problem incomplete / hidden 


requirements 


communication flaws 


between project team and customer 


incomplete / hidden 


requirements 


# 2 problem communication flaws 


between project team and customer 


incomplete / hidden 


requirements 


moving targets 


# 3 problem underspecified requirements 


communication flaws within project team 


communication flaws 


between project team and customer 


# 4 problem communication flaws 


within project team 


separation of requirements 


from solutions 


time boxing 


# 5 problem time boxing weak access customer 


needs 


underspecified requirements 


 


interestingly, all those companies still experience communication flaws between the project team and the 


customer. even more, they encounter further problems that agile practices intend to solve.  


vi. what does this mean for requirements engineering research? 


we can see that many challenging project situations agile practices claim to address and even proclaim as 


their natural environment, such as moving targets, still do manifest themselves as severe problems. the article’s space limitations hinder us from further reasoning about the particularities of the respondents’ contexts, but the key take away of this small example does already become evident: the claims we often associate with specific solutions, like agile practices, and the expectations we have when applying them as something universal, are not clearly in tune with today’s industrial reality. we all would benefit from a better understanding of industrial reality to align our research with the problems in practice.   


at this moment, we are launching the third replication of napire to further explore the current state of practice 


in re with a focus on the knowledge gaps such as those illustrated in the present article. this will hopefully improve the community understanding of what is really going on out there, and it will help us steering our research in a problem-driven manner. until then, i cordially invite researchers to join this or similar initiatives as well as practitioners in supporting us with their answers to provide their share in producing research that industry needs. details on the initiative and how to contribute can be taken from [4]. 


vii. biography 


 


daniel méndez is senior research fellow at the technical university of munich and director of the 


interdisciplinary research groups at the centre digitisation. bavaria. during his phd and his subsequent habilitation, he worked on requirements engineering improvement and his research interest mainly comprises requirements engineering and empirical software engineering. further information is available at 


http://www.mendezfe.org 


 

